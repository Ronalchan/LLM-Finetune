[
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I noticed a bug with how the cumulative histogram telemetry was implemented in bug 1801290 a few months ago. If you click *anywhere* on the sidebar, it triggers the [onclick handler](https://searchfox.org/mozilla-central/source/browser/components/places/content/historySidebar.js#92), updates the histograms and clears the counters. \nThis needs to be fixed so that the histograms are only updated when a history entry is clicked.\nAdditionally, Leif suggested we add a counter for total history clicks in a session, which we don't currently have.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8936562\nBug 1424993 - Fix PresentationTransport to correctly throw NS_ERROR_NOT_AVAILABLE.\nhttps://reviewboard.mozilla.org/r/207308/#review213110\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Justin, what do you think?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8977047\nLink to GitHub pull-request: https://github.com/mozilla/activity-stream/pull/4157\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Is this just on OS X? Do you have a crashreport ID or stack? Am I right in thinking 39 is not affected?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 444924\nfile removals patch\njust the file removals\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Setting `Regressed by` field after analyzing regression range found by bugmon in comment #5.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8969164\nPatch for Beta\nApproved for today's 60.0b15 build.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/b54fdf8bb486\nhttps://hg.mozilla.org/mozilla-central/rev/076cdafa93f5\nhttps://hg.mozilla.org/mozilla-central/rev/0c55cac422f2\nhttps://hg.mozilla.org/mozilla-central/rev/3d7bfc590ccd\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8551532\n1118597-enable-moofparser-eme.patch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/159c690b5aa5\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/7b5995e5d551\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 664329\nPart 3: Add send Location Event in RIL. v7\nReview of attachment 664329:\n-----------------------------------------------------------------\n::: dom/system/gonk/ril_worker.js\n@@ +2285,5 @@\nshould be \ncommand.eventList = command.eventType;\nThanks for kk11ff to point this out.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8891893\nduration.html\nSorry always have trouble with relative urls not working here...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like we'll need to white-list the source and obj dirs on Windows as well.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        reopening since this is [leave-open]\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        One of the rules of QueryInterface is that you can always get back to your original object:\n  nsIFoo *orig = ...;\n  nsIBar *bar = QueryInterface(orig);\n  nsIFoo *foo = QueryInterface(bar);\n  ASSERT(foo == orig);\nSo to make this work, JSDOMEventTargetHelper's QI function would have to know how to get back to nsIDOMFMRadio.  But I guess you could do that with a custom QI function which calls the fm-radio's QI...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Maybe Fission related. (DOMFissionEnabled=1)\nCrash report: https://crash-stats.mozilla.org/report/index/5dfc948c-b928-487e-a58e-6b8810220120\nMOZ_CRASH Reason: ```MOZ_DIAGNOSTIC_ASSERT(!IsDoc())```\nTop 10 frames of crashing thread:\n```\n0 xul.dll mozilla::a11y::RemoteAccessibleBase<mozilla::a11y::RemoteAccessible>::Shutdown accessible/ipc/RemoteAccessibleBase.cpp:41\n1 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:185\n2 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n3 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n4 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n5 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n6 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n7 xul.dll mozilla::a11y::DocAccessibleParent::ShutdownOrPrepareForMove accessible/ipc/DocAccessibleParent.cpp:194\n8 xul.dll mozilla::a11y::DocAccessibleParent::RecvHideEvent accessible/ipc/DocAccessibleParent.cpp:244\n9 xul.dll mozilla::a11y::PDocAccessibleParent::OnMessageReceived ipc/ipdl/PDocAccessibleParent.cpp:348\n```\nThere are 106 crashes (from 42 installations) in nightly 98 starting with buildid 20220120100401. In analyzing the backtrace, the regression may have been introduced by patch [1] to fix bug 1748878.\n[1] https://hg.mozilla.org/mozilla-central/rev?node=6c3a672524b7\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Xidorn, you fixed this in bug 1333175. Any reason why this is failing again?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Is it possible this is causing a regression in golinks as per bug 1642435?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 550099\npatch 1\nThis fixes tests 3.6 and 3.7 from https://github.com/oberstet/Autobahn\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Nope, we do 10.0.x until we move to 17 then we do 17.0.x, etc (see https://wiki.mozilla.org/Enterprise/Firefox/ExtendedSupport:Proposal)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 735936\nSignaling - fix Wformat warnings in logging\nThis should fix all of the -Wformat warnings, but not the -Wformat-extra-args or -Wformat-security ones.\nYou can now run with NSPR_LOG_MODULES=signaling:9 without crashing.\nThere is a test patch above that redefines the logging to printf if you want to check the warnings on your build.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have a friend that can consistently reproduce this crash when starting a call: https://crash-stats.mozilla.com/report/index/a6117985-e56a-4696-8186-d94c20171031.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Apparently this is not the case; the patch consistently times out on Mac GTests, while being OK everywhere else.  Henry wrote this code in bug 1339050...Henry, why are we not waiting inside NS_ProcessNextEvent here?  What do the threads doing the async update look like at this point?  Does having to busy-wait here mean that |done| is getting written from some other thread than the one doing the waiting (ugh)?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/1ef77d653c4f7f5ea0452b010a9c6a85c9e87b5d\nBug 1248726 - Simplify PCLocationMap even further; r=fitzgen\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh, and for the separate-landing bits... where do I land the Gecko patches?  Inbound?  The incubator repo directly?  Something else?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22598640&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-05-04 15:13:07\nslave: t-w864-ix-028\n15:23:20     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by sclements@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b26a56aab365\nUpdate history sidebar telemetry r=mak,kcochrane\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 662062\npart C - mozFMRadio v5.1\n- Rebased the lastest m-c\n- Removed signalStrength related codes\n- Fixed nits based on the comment 124 and comment 125\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by alissy@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/05e994e8e3b5\nAdd gtest coverage for AsyncBlockers r=nika\nhttps://hg.mozilla.org/integration/autoland/rev/5e334e2e3906\nImmediately resolve AsyncBlockers when no blocker are registered r=nika\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I believe this regression could be caused by part 3 of this patch series (although I'm not 100% sure). If we take out that part then it might make the regression go away at the expense of killing the tab far more frequently. And if this is regression is a result of my patch then it should be limited to subframes and at high zoom levels.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8876111\nBug 1357049 - add one button in the Private Browsing and Search tour of onBoarding overlay to demonstrate the corresponding features.\nhttps://reviewboard.mozilla.org/r/147540/#review152210\nThank you for the works.\n::: browser/extensions/onboarding/content/onboarding.css:172\n(Diff revision 1)\nNit: please use `.onboarding-no-button` since we are scoping our selectors and have doen this with other selectors, thanks.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8876111\nBug 1357049 - add one button in the Private Browsing and Search tour of onBoarding overlay to demonstrate the corresponding features.\nhttps://reviewboard.mozilla.org/r/147540/#review152214\nNice to got some progress here!\nTo make a correct button action I think we should also take `setCompleted` into consideration\n::: browser/extensions/onboarding/content/onboarding-tour-agent.js:10\n(Diff revision 1)\nlet's organize with alphabet order\n::: browser/extensions/onboarding/content/onboarding-tour-agent.js:11\n(Diff revision 1)\nThough `setCompleted` is now a placeholder, we still need to call `setCompleted` from the target tour to mark the call-to-action as completed (and implement the action later). \nSo to complete a button action, we need find a way to access `tour.setCompleted` in this script.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1515101 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 587686\nPatch part.3 Findbar shouldn't do incremental search during composition\nFindbar shouldn't find a word for unconverted composition string.\nFor example, if user wants to convert \"ABC\" to \"DEF\" by IME, user types \"ABC\" by keyboard. Then, if findbar did incremental search in \"DEFABCDEF\", the \"ABC\" would be selected. And when the user did convert to \"DEF\", findbar found the *second* \"DEF\". It's bad behavior. The first \"DEF\" should be selected.\nTherefore, I think that findbar shouldn't do incremental search during composition.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out 4 changesets (Bug 1624268) for causing brwoser-chrome failure at toolkit/components/antitracking/test/browser/browser_partitionedSharedWorkers.js\nPush with failure: https://treeherder.mozilla.org/#/jobs?repo=autoland&selectedJob=298095356&resultStatus=testfailed%2Cbusted%2Cexception&classifiedState=unclassified&revision=d58da2438eee32708ab04a2a2313c9d6a5d27fbe\nFailure log: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=298089873&repo=autoland&lineNumber=50228\nBackout link: https://treeherder.mozilla.org/#/jobs?repo=autoland&resultStatus=testfailed%2Cbusted%2Cexception&classifiedState=unclassified&revision=0c70ad5623dc33fc7af66625ebcde34bd73f984e\n```\n[task 2020-04-17T13:07:37.679Z] 13:07:37     INFO - TEST-PASS | toolkit/components/antitracking/test/browser/browser_partitionedSharedWorkers.js | We expected 1 connection - true == true - \n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - Buffered messages finished\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - TEST-UNEXPECTED-FAIL | toolkit/components/antitracking/test/browser/browser_partitionedSharedWorkers.js | We expected 2 connection for 3rd party SharedWorker - false == true - got false, expected true (operator ==)\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - Stack trace:\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - ok@resource://specialpowers/SpecialPowersSandbox.jsm:86:21\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - msg@chrome://mochitests/content/browser/toolkit/components/antitracking/test/browser/dynamicfpi_head.js:95:19\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - EventListener.handleEvent*@chrome://mochitests/content/browser/toolkit/components/antitracking/test/browser/dynamicfpi_head.js:87:21\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - @chrome://mochitests/content/browser/toolkit/components/antitracking/test/browser/dynamicfpi_head.js:68:17\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - execute@resource://specialpowers/SpecialPowersSandbox.jsm:140:12\n[task 2020-04-17T13:07:37.680Z] 13:07:37     INFO - _spawnTask@resource://specialpowers/SpecialPowersChild.jsm:1729:15\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - receiveMessage@resource://specialpowers/SpecialPowersChild.jsm:281:21\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - JSWindowActor query*receiveMessage@resource://specialpowers/SpecialPowersParent.jsm:1063:12\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - JSWindowActor query*spawn@resource://specialpowers/SpecialPowersChild.jsm:1684:17\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - runTest/<@chrome://mochitests/content/browser/toolkit/components/antitracking/test/browser/dynamicfpi_head.js:58:27\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - Async*Tester_execTest/<@chrome://mochikit/content/browser-test.js:1039:34\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - Tester_execTest@chrome://mochikit/content/browser-test.js:1074:11\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - nextTest/<@chrome://mochikit/content/browser-test.js:904:14\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - SimpleTest.waitForFocus/waitForFocusInner/focusedOrLoaded/<@chrome://mochikit/content/tests/SimpleTest/SimpleTest.js:918:23\n[task 2020-04-17T13:07:37.681Z] 13:07:37     INFO - Removing the tab\n```\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Setting 103 to disabled,  Bug 1773712 was backed out of central\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664321\nWIP - Part 3: Add send Location Event in RIL. v6\nMoved writing location info of TLV into a helper function.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        log: https://treeherder.mozilla.org/logviewer.html#?repo=mozilla-central&job_id=1161490\nrepository: mozilla-central\nstart_time: 2015-03-13T06:57:18\nwho: philringnalda[at]gmail[dot]com\nmachine: tst-linux32-spot-1001\nbuildname: Ubuntu VM 12.04 mozilla-central debug test mochitest-4\nrevision: 9dbb2d41bb2c\n144 INFO TEST-UNEXPECTED-FAIL | dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Proper mitre link is http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-0823.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9317392\nBug 1407955 - Display text shadow with fill and stroke specified r=jfkthame\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Right sorry. I'll explain a little here and then update the commit message with some more details.\nThe last patch is basically to make clicking in the scrollbar track outside of the scrollthumb \"work\", so it's pretty close to bug 1639450. Clicking in the scrollbar track usually does a page scroll via nsSliderFrame::PageScroll. This eventually ends up in ScrollFrameHelper::ScrollBy where turn the request from a relative one (\"scroll by a page\") into an absolute one (\"scroll to this position\").\nThis page scroll is typically a smooth scroll and is currently done on the main thread/layout side. Once we start scrolling the visual viewport offset with the scrollbars we can no longer do this purely on the layout side, we at least need the help of the compositor side. I think the simplest way to do this is to hand the scroll request off to the compositor and have it handle the whole thing.\nNow we need to consider the following situation: user clicks scrollbar track to page scroll, smooth scroll gets partway complete on the compositor, user clicks again on scrollbar track for a further page scroll. The main thread can't send an absolute scroll offset update request to the compositor at this point because it has outdated information (it needs a 'starting position' to add the page scroll offset amount) so it'll end up scrolling to the wrong place. It has to send a relative scroll offset update.\nWe already have a mechanism to send relative scroll offset updates. It is implemented by sending a base scroll offset and the desired scroll offset, and then on the compositor send the difference between those two is computed and then added to the scroll offset.\nI used a new mechanism (so called \"pure relative\") that just sends a relative offset update without any absolute scroll positions. The reason I did this is because the existing relative scroll offset update mechanism is not aware of visual viewport offsets, but rather only layout scroll position. For example, here\nhttps://searchfox.org/mozilla-central/rev/8d55e18875b89cdf2a22a7cba60dc40999c18356/layout/generic/nsGfxScrollFrame.h#446\nthe value we use for the base scroll offset (mApzScrollPos) is set to the layout scroll position. It may be entirely reasonable to make this existing mechanism vv offset aware, but I wanted to implement something to get it working with a smaller chance of regressions to things that already exist and work. We could unify these two mechanisms either before or after landing this bug by either: 1) making the existing relative scroll update mechanism work with vv offsets and using it for this bug, 2) moving the existing relative scroll offset updates consumers to the new \"pure relative\" way.\n2) assumes that there isn't a good reason to encode relative scroll offset updates as the difference between two scroll positions that I missed. \nSo there are a couple of open questions there. Is a purely relative scroll offset update a good idea? Should we move to the pure relative way? Or to the existing difference between absolute scroll offsets way? And how much of that work is what we want to do right now vs follow ups.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mleplatre@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/4e111da82652\nRead Normandy recipes from Remote Settings on Nightly r=mythmon\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22694712&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-05-07 11:08:51\nslave: t-w864-ix-048\n11:19:13     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 867498 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8398502\nPart 1 - Tests\nSome tests I wrote for issues I ran into, also a test for bug 889158.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The crashes are gated to nightly build, so no need to track for 102 and 102ESR, but we should track for nightly as this is a top crasher on macOS and we should decide rapidly on backing out or not bug 1773712 on Nightly.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/8da76b2d3d1c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 565359\nDon't remove unread in preview mode (next try)\nAdditionally moved leading comment into the 'if' to avoid confusion with that other patch.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 613023\npatch\nState of patch before our discussion on IRC.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664326\nWIP - Part 4: xpcshell test case for writing Location Info\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9200133\nBug 1689742 - Stop using XUL <deck> for #setDefaultPane.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 548676\nadd logging\nThe attached patch helped me debug why my build was not starting on 10.5. I tried to change fprintf to PR_LOG, but got undefined references to _PR_LogPrint.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 629353\nupdated_patch\nMade SelectLibrary a static function of WGLLibrary and typedef'd WGLLibrary::Library. \nJust L1 for now.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This sounds good to me. Agree with the alert overload upon first run experience. \nThis may require a update to the Snippet Service. From the Engagement perspective, serving out custom communication based on user life-cycle is something we've wanted to have the ability to do for a while. Perhaps we look at it that way instead of focusing on having the \"default\" snippet do this job. Those default snippets contain evergreen content designed to show when the snippet service is down. They have generic messaging to fit any user experience. Ideally in this snippet we would want to say \"Welcome to Firefox! Did you know...\" \nPerhaps file a bug for the Snippet Service, and focus this bug on simply removing the Alert bar?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The server is not looking for any `Sec-*` or `sec-websocket-*` headers. I'm quite positive about that because I'm one of the authors.\nI can run some experiments, but it would be helpful to have candidate headers I can use to ping off of the server.\n(As an aside, in the future it would be super useful if server impacting changes to the client like these could be be run by the Services Engineering group (services-engineering@/ slack#services-engineering). We can notify other services groups if need be, but it would give us a good start.)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I don't reproduce this on my Linux machine so it might be Mac-specific. Are you in e10s mode or not? If you are then can you try running in non-e10s mode and see if the problem goes away?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh, and I still have to add a purge-to-size mechanism. (That's how we emulate HashTable shrink-to-size these days.) The number of entries will drop to zero on GC later due to bug 673189.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It's in the diff!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sorry - branch 43 means webrtc.org (upstream) stable branch 43, which landed in our tree in Firefox 45.  Upstream stable branches of webrtc.org use numbering that matches the version of Chrome they shipped in (for the last year or so).\nAs for ESR-38 - The issue would be we need to create a patch to do the right checking (which shouldn't be hard) and land it in 44 and ESR-38.  This would be (very) hard to exploit since it depends on an allocation failure on a reallocation to a larger size, and then there's a good chance that it would just lead to a crash.  However, as the checking should be simple we could look to land a patch for 44/ESR-38 early next week (I'm on PTO until the 21st, but am checking sec issues).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8891891\nwebm movie from MediaRecorder  (no duration metadata)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9024894\nbug 1479989 - Update test262 exclusions for BigInt. r=anba\nDisable BigInt variants of tests disabled due to bug 1079853, bug 1129202, or bug 1317416.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        jwalden\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11975750&tree=Try\nRev3 WINNT 5.1 try opt test mochitests-1/5 on 2012-05-22 22:49:12\nslave: talos-r3-xp-033\n60694 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8356796\nRollup parts 1-4\nI also was unable to get b2g to crash with the patch.  The tab reliably got killed.\nI did, however, see some content fail to draw with this patch.  See time 45s to 50s in this movie:\n  https://www.dropbox.com/s/vguya4xf6rgeqwh/20140107_apzc_etherpad_v1_2_patch.mov\nIt appears to occur when you zoom in while simultaneously dragging up a bit causing a scroll.  I could not reproduce without the patch.\nOn IRC kats indicated this might be explainable given that the patch shrinks the displayport.  Is this regression fixable?\nIf not, is this regression serious enough to hold back the patch?  Jason, what do you think?\nI will try to see if I can reproduce it on any other websites tomorrow.  Maybe its isolated to sites with very large iframes like this etherpad.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        from bug 664344 - a description of receiving first-frag, ping, last-frag causing multiple pongs in response along with general wonkiness.\nproblem is in removing the ping from the fragment frame, length reset to 0 before a calculation was made.\n1 line fix.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9162116\nBug 1651332. Update scrollbar attrs to use visual viewport offset. r?kats\nDepends on D82684\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Can you elaborate on how to use timeout() for fuzzing?  Should I just have the fuzzer call \"timeout(1800)\" sometimes?  Or do you want something like bug 831046?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 441439\nLittle-endian, IEEE-754 C implementation.\nIt's unlikely to outperform the optimized i386 version, but it might be worth a try. I've attached it for reference, but note that it isn't at all polished in its current state, and it's in the form of a C function, not a patch. (I didn't generate a patch when I tested it in the JS engine, but the code is the same.)\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes, you're right. I was working from memory of what I believed to be the root cause when I started working on the bug. I just pared back my patches to the minimal fix (which you've already reviewed, thank you) plus test and things look good locally. I'm doing a try server run to see if it's landable. I honestly don't know what changed between my initial landing attempt and now, but it looks like it might go through.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Probably yes.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/3f307f37b77a\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1065466 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 815216\nbug-897027-fix.patch\nReview of attachment 815216:\n-----------------------------------------------------------------\nNice!\nr=me with a license header added to the test. Not all tests have them, but all should. Personally, I'd go with\n// Any copyright is dedicated to the Public Domain.\n// http://creativecommons.org/licenses/publicdomain/\n::: js/src/tests/ecma_6/Math/20.2.2.ToNumber.js\n@@ +2,5 @@\nNit: remove stray spaces at the last three lines' ends.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This seems to have a dedicated straight forward test. Sylvestre, do you think it needs some additional manual testing outside of what's covered automatically?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        4 failures in 824 pushes (0.005 failures/push) were associated with this bug in the last 7 days.    \nRepository breakdown:\n* autoland: 4\nPlatform breakdown:\n* windows7-32: 2\n* windows7-32-stylo-disabled: 1\n* linux32-stylo-disabled: 1\nFor more details, see:\nhttps://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1390087&startday=2017-10-02&endday=2017-10-08&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8730638\nBug 1203871 - Part 1. Add nsIFrame::GetCharacterRectsInRange.\nhttps://reviewboard.mozilla.org/r/40057/#review56566\n::: layout/generic/nsIFrame.h:1549\n(Diff revision 2)\nThe comment here needs to be updated now that you're getting a list of character rects in a range, not just a rect for a single offset.\n::: layout/generic/nsTextFrame.h:799\n(Diff revision 2)\nPlease add a comment to clarify why aInOffset is passed as a reference here (as it seems unexpected); looks like it's being clamped to the content range by this method.\nIt would be nice to pass aProperties as a const reference, so it's clearly an inparam only. I guess to do that, you'd need to pull the InitializeForDisplay() call out of this method and let the caller do it.\nAlso, the \"Get...\" name seems a bit wrong, as the iterator was already created, this method is just changing its position. Maybe something like \"UpdateIteratorForOffset\"? And reorder the params so that aIter (the outparam result) is last, please.\n::: layout/generic/nsTextFrame.h:802\n(Diff revision 2)\nHere as well, I think aIter and aProperties should both be const references. And the point can be returned as the function result rather than through an outParam.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 567610\npatch\nThis is nice to have.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes Alice that is true, but you have to do it everytime you restart Minefield.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8878271\nRemove support for <meta http-equiv=\"msthemecompatible\" content=\"no\">\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22715462&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-05-07 21:07:56\nslave: t-w864-ix-044\n21:18:00     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/e0679448fd3b\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        log: https://treeherder.mozilla.org/logviewer.html#?repo=mozilla-aurora&job_id=1066816\nrepository: mozilla-aurora\nstart_time: 2015-08-23T11:46:13\nwho: rvandermeulen[at]mozilla[dot]com\nmachine: tst-linux32-spot-615\nbuildname: Ubuntu VM 12.04 mozilla-aurora debug test mochitest-4\nrevision: 20a79fcdc75f\n130 INFO TEST-UNEXPECTED-FAIL | dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Success callback should not have been called after setting geolocation.enabled to false.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8449937\nProperly composite when using an unbounded operator even if the extents don't intersect\nI believe this is the correct fix this time, I'd like to hear what you think :-).\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I could not reproduce this bug using Fx 48.0a1 build ID:20160407062903 and ID:20160309030419, on OS X 10.11.1 (tested with both e10s enabled and disabled).\nCan you please confirm if it is still reproducible on your platform?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like a security bug to me. I'm getting various crashes [@ js::jit::InlineFrameIteratorMaybeGC<(js::AllowGC)1>::findNextFrame] with bad reads.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8748730\ngtk3-scrollbars-comparison.mp4\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 574773\npatch without the sqlite hack\nThis can't land until bug 702815 is done, obviously.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This ended up being a red-herring. Re-landed.\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/0c5c83ed0385\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 815582\nbug-897027-fix.patch\nReview of attachment 815582:\n-----------------------------------------------------------------\nI'm terrribly sorry for the late review - this fell off my radar completely.\nLooks great. And thank you so much for the thorough tests of Number functions.\n::: js/src/jsmath.cpp\n@@ +298,5 @@\nthis hasDefined isn't necessary, as we'll have returned above if it were false\n@@ +647,5 @@\nSame here about hasDefined\n::: js/src/tests/ecma_6/Math/20.2.2.ToNumber.js\n@@ +3,5 @@\nNit: can you add the date of the spec draft this numbering refers to. It will get outdated at some point, otherwise.\n@@ +8,5 @@\nPlease just remove this entire paragraph: the EcmaScript spec's license isn't compatible with Public Domain. While this is very likely to fall under fair use, no need to go anywhere near the boundaries of that.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8796698\nfix-MemoryProtectionExceptionHandler.patch\nErk, more non-unified bustage? Sorry about that.\nI don't have Mac to compile this on locally, and we don't have a non-unified build in automation for OSX, but if this fixes compilation for you then it's fine.\nJust did a non-unified build on Windows (was easier than I expected), confirmed nothing is missing there.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi,\nI have tested this issue on Mac OS X 10.10 with FF Nightly 48.0a1 (2016-04-10) and I can't reproduce the issue. Can you please retest this with the latest build?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What I meant was, the security discussion indicated that WebFM will be\navailable implicitly to all apps and (with a prompt) to any webpage.\nSince this API will be so widely accessible, I don't think we should add hacks\nlike \"speaker on\" to this API.\nhttps://wiki.mozilla.org/WebAPI/Security/FMRadioAPI\nYeah, it's a consistency argument.  We don't need 52 bits of precision for\neither signal strength or FM frequency, so neither of them /needs/ to be a\ndouble.\nBut double is JavaScript's natural floating-point type (it does not have a\n32-bit float, except as a typed array), so in the absence of any good reason to\nuse a float, I think we should use a double.\nI think we're not talking about the same thing.  There are two separate things here.\n  * \"The current band\", which indicates the parameters (AM/FM,\n    frequency upper and lower bounds, and channel interval) that the radio is\n    currently using.  There is only ever one current band.\n  * \"The band ranges\", which indicates all possible values that the current\n    band might be set to.\nThe FM app needs only \"the current band\" in order to show the dialier.  It does\nnot need a list of all band ranges that the FM chipset supports.\nBut apps implementing an FM radio cannot necessarily read settings.  The\nsettings API is not available to unprivileged web content (or even many apps).\nIf the FM app were able to read settings, then we would not need to expose \"the\ncurrent band\" to the FM app; we could define that information in the settings,\ntoo.  In fact, we would not need the FM API at all; we could define everything\nabout this API in the settings.\nThat settles that, then.  :)\nAh, I remember this now.\nAs you discovered, nsIDOMEventTarget is a builtinclass.  That means that if\nnsIDOMFMRadio inherits from nsIDOMEventTarget, you can't implement it in JS.\nThat's probably why nsIDOMWifiManager doesn't inherit from it.\nBut if you don't inherit from nsIDOMEventTarget, then you can't do\naddEventListener on it.\nIn other words, you can't implement event targets in JS!\nIt's bad that nsIDOMWifiManager is not an event target, but I think it would be\nworse if the FM radio was not an event target, because we're exposing it to all\nof the web.  So I think you're going to have to rewrite the implementation of\nnsIDOMFMRadio in C++.  I don't think we want to create a public interface where\nyou have to use the onX handlers.\nUnless Jonas has different thoughts?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8334005\nNew fix with requested changes\nThanks for the comments and the last-minute help on IRC, much appreciated!\nHere's the latest version containing the requested changes.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9035876\nBug 1519164 - Update content blocking UI tour url. r=nhnt11\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Filed by: cbook [at] mozilla.com\nhttps://treeherder.mozilla.org/logviewer.html#?job_id=84231756&repo=mozilla-inbound\nhttps://archive.mozilla.org/pub/firefox/tinderbox-builds/mozilla-inbound-macosx64-debug/mozilla-inbound_yosemite_r7-debug_test-mochitest-gl-e10s-1-bm107-tests1-macosx-build124.txt.gz\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Maybe it's helpful or not, but if you restore session from about:home this bug does not reproduce.  What is it doing that's different from update or on restart session restore?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 475890\nfix v3\nFind the top non-systemPrincipal docshell in our parent chain to avoid comparing principals with chrome documents (who are allowed to frame X-F-O pages).\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9158318\nBug 1644719 - Add a new API that tells us if SUMO is unreachable. r=prathiksha\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8398689\nPart 2 - Make arrow functions fast\nReview of attachment 8398689:\n-----------------------------------------------------------------\n::: js/src/jsfun.cpp\n@@ +519,5 @@\nThe caller is responsible for populating this slot, right? If so, populating it with a different value here seems like a bit of a red herring. Delete this block?\n@@ -1243,5 @@\nthank you\n::: js/src/jsfun.h\n@@ +539,5 @@\nCan we name this offsetOfArrowThisSlot()? Otherwise each caller has a magic constant 0 in it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        var o = Array;\no.p = function() {};\no.watch('p', function() { });\nObject.keys(o);\ndelete o.p;\no.p = function() {};\nprint(o.p);\nThe iteration seems necessary here (keys), I don't know why.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I thought about this a bit, and realized we have a small bug in how feature gates manage prefs. I filed (and added a patch for) bug 1541469 for that issue. Once that is done, we should be able to turn this on for Nightly users only by updating the feature definition to have:\n```toml\ndefault-value:\n  default: false\n  nightly: true\n```\nThen later when we want to turn this on for all channels and let it ride the train, we can update it again to be\n```toml\ndefault-value: true\n```\nAdditionally, QA will be able to test this by setting the pref to true. After bug 1541469 they'll need to add the pref, as it won't exist by default.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by elee@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/0cdebe3c53f8\nAdd rating stars to CFR r=ahillier\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8482089\nDo not pause when playbackRate = 0. Instead don't play anything\nFollow r+\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes. That and we concatenate it with the l10n string so there's really very little way to tell anything what/how to truncate otherwise.\nFair! I would just lowball it at 60 characters, take the first/last 30 and add an ellipsis in the middle. That will still not be good enough for customized windows themes that have a really high font-size for message-box text, but that's not the 99% case, and this dialog isn't either, so it doesn't seem to me like we should do the (significant amount of) work here to get it right 100% of the time.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8977045\npng compression\nLooks like there's some savings to be made in the newly added pngs.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://tbpl.mozilla.org/?tree=Try&rev=1b53cc2d9792\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 656423\nall-in-one patch, WIP, v2\nIt depends on the patches of bug749053.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22499971&tree=Mozilla-Inbound\nRev4 MacOSX Snow Leopard 10.6 mozilla-inbound debug test reftest on 2013-05-02 05:05:38\nslave: talos-r4-snow-079\n05:17:28     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///Users/cltbld/talos-slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 574989\npatch without the sqlite hack (actual)\nSorry, here's the right patch.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/bdb0a8c2902d\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/9a768dc05d7e\nhttps://hg.mozilla.org/mozilla-central/rev/86c08096f8c4\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8769835\npatch for check-in\nTry:  https://treeherder.mozilla.org/#/jobs?repo=try&revision=a591ade2dbd3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/a10f5ab758b4\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8536243\nRetrieve SPS and PPS from AVCC stream when necessary\nReview of attachment 8536243:\n-----------------------------------------------------------------\n::: media/libstagefright/binding/AnnexB.cpp\n@@ +80,5 @@\nThis should use ByteReader because it protects against all the run-time out of range conditions.\n::: media/libstagefright/binding/DecoderData.cpp\n@@ +192,5 @@\nNow would be a good opportunity to move this logic and the above >=7 and |= 3 into the AnnexB class.\n::: media/libstagefright/binding/mp4_demuxer.cpp\n@@ +191,5 @@\nUpdating the video config seems like a nasty side-effect to have in DemuxVideoSample(). This could perhaps be solved by moving extra_data out of VideoConfig altogether.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/afd90049af4c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9311569\nBug 1809080 - Pinch-to-zoom in pdf viewer when using the trackpad on Mac r=#pdfjs-reviewers,RyanVM\nApproved for 109.0rc2, thanks.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Also, (for verification) inspecting the GMail js file by hand I see 31 instances where RegExp is called directly (despite minification), at least in a handful of cases with tiny literal strings.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 583721\nfix\nSkia code will not able to compile for MacPPC and Android-x86 (and Windows/arm).\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The same person reports this crash still being present in Aurora for him. Latest report: https://crash-stats.mozilla.com/report/index/bp-ab204c45-08b7-4cb4-a2e0-864822111205.\nRequesting tracking to get this one on the radar.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/bb0f9802f0d0\nRefactor parsing code for '-moz-text-size-adjust' to use the (more conventional) keyword table approach to calculate computed style. r=dholbert\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 704743\nv1\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/3c95ca16eb66\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/f1ff5388e591\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 485837\nFix character class range with builtin character class on any side.\nPlain true/false don't do it for me for readability, suggest checkRangeValid/checkRangeInvalid methods forwarding to one common method.\nAdd in some tests with \\b and \\B since those aren't treated as character class escapes.\nGood style appears to suggest m_sawCharacterClass, to make upstreaming easier.\nAs far as good style goes, it appears that this code parenthesizes equality expressions that aren't the whole of conditions -- so |((m_character == '-') && m_sawCharacterClass)|.\nI think this would be more readable if you didn't put the sawCharacterClass in the else-block.  It makes more sense (even if one doesn't subscribe to else-after-return being evil) to say that *if* the just-passed character class starts a range, *then* it's an error and you exit.  But the sawCharacterClass assignment applies to both arms of the if below, so it seems it makes more sense to something like this:\n(Add parentheses per the earlier comment.)\nI had trouble understanding both parts of your condition here -- suggest adding something noting that the first part handles things like [a-\\d] and the second part handles things like [\\w-\\s].  For that matter, the most obvious place for any of these checks, in |case cachedCharacter|, is only hit (I think) in the case of [\\w-a] or [\\w-\\b] -- may as well add a comment to that effect there, too.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Added to Fx56 (Beta) release notes.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        log: https://treeherder.mozilla.org/logviewer.html#?repo=mozilla-inbound&job_id=10226328\nrepository: mozilla-inbound\nstart_time: 2015-05-28T08:20:58\nwho: rvandermeulen[at]mozilla[dot]com\nmachine: tst-linux64-spot-285\nbuildname: Ubuntu VM 12.04 x64 mozilla-inbound opt test mochitest-4\nrevision: db3d40e8b4de\n144 INFO TEST-UNEXPECTED-FAIL | dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I. \nInitial Scenario:  Using steps from comment 1 and referring only to the update scenario which breaks search settings.\n44.02 (update to) 45.0\n44.02 (update to) 45.0.1\n45ESR (update to) 45.0.1 ESR\nWindows10 -> reproducible\nMac -> not reproducible\nUbuntu -> reproducible\nThe update/migration bug can be verified fixed on WINDOWS and UBUNTU for 45.0.1, 45.0.1 ESR with the note that (comment 1) wasn't reproducible on MAC. \nII. \nWhat I noticed for all OS'es was that installing the language pack and setting the \" general.useragent.locale to 'de' \", then just restarting FF was causing the search engines settings to break. (behavior reproducible for 44.02, 45, 45.01, 45.01ESR)\nI also went back a bit and checked if I. and II. scenarios are reproducible for older releases: 42.0 and 43.0.1 with the following result: I. No  II. Yes.\nPlease advise if scenario II. should be split up into a separate issue.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 601521 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        submit_timestamp: 2014-10-26T18:40:01\nlog: https://treeherder.mozilla.org/ui/logviewer.html#?repo=mozilla-beta&job_id=114827\nrepository: mozilla-beta\nwho: rvandermeulen[at]mozilla[dot]com\nmachine: tst-linux64-spot-271\nbuildname: Ubuntu VM 12.04 x64 mozilla-beta debug test mochitest-4\nrevision: 080cfa7f5d79\n122 INFO TEST-UNEXPECTED-FAIL | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Re-triage - this doesn't have proof of being a user facing crash on devices, it only happens in debug build situations & tests. So renoming to reevaluate.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8819516\npart-1-remove-Windows-version-checks.patch\nReview of attachment 8819516:\n-----------------------------------------------------------------\nr+\nYou should try mozreview&autoland!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://tbpl.mozilla.org/?tree=Try&rev=b8a1b38b172c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 434724\nv1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8969164\nPatch for Beta\nApproval Request Comment\n[Feature/Bug causing the regression]:\nNot sure. This root cause must be a long standing bug. However, the crash must be caused by Quantum Flow since a lot places started to assume native anonymous subtree in <input>/<textarea> are always expected structure. Therefore, the crash is not reproducible with ESR 52.\n[User impact if declined]\nMight get odd HTML tree (i.e., |foo.innerHTML = bar.innerHTML;| doesn't create same DOM tree since <input> cannot have any children at parsing HTML document). And of course, may meet the crash.\n[Is this code covered by automated tests?]:\nNot yet. We should land it after release.\n[Has the fix been verified in Nightly?]:\nNot yet, but I confirmed it with local build.\n[Needs manual test from QE? If yes, steps to reproduce]:\nYes, load attachment 8967914 and check if it won't cause crash.\n[List of other uplifts needed for the feature/fix]:\nNothing.\n[Is the change risky?]:\nNo.\n[Why is the change risky/not risky?]:\nThis adds an additional check to HTMLEditor::GetBetterInsertionPointFor(). The additional new check is, if it's not in native anonymous subtree.  If it's in, it returns host element of the native anonymous subtree.\n[String changes made/needed]:\nNothing.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 687560\npatch v2\nI added some extra assertions that ensure that phases are always properly nested. This found one or two problems in the previous version. Here's the updated patch.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8822400\npart 13.  Make sure Device has a ComputedValues for stylo\nReview of attachment 8822400:\n-----------------------------------------------------------------\nProbably worth filing a bug depending on bug 1290228 and blocking the stylo metabug to make sure that we end up updating these values.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ah, I understand.  There are a lot of moving parts here!\nI'm happy to land this how it is and then change everything all at once.\nOh, right.  :)  Either channelWidth or channelInterval is fine with me, but yeah, it would be good to be consistent.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 616963\npatch v1\nMade changes to handle the loading of an addtional library, Mesallvmpe.dll. In addition, i am currently running tests to provide performance comparison to Chrome using both fraps and the phoronix test suite.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks for looking into this, Daniel, and sorry that I didn't speak up sooner.\nUh oh, shame on me for lack of test coverage. I'll write a test that would break asap.\nThe call to InvalidateDirectRenderingObservers has the purpose of invalidating (purely visually) any elements that use the current element as a -moz-element paint server. The fact that it can also cause reflows is unfortunate, and in fact it's never necessary, at least not from nsIFrame::InvalidateInternal. (It is necessary when, for example, a filter's overflow actually changes, but then we're notified elsewhere and don't need to do anything in InvalidateInternal.)\nMaybe we should split rendering observers into two types? One \"visual\" type for -moz-element and another for filters, masks, etc. Then we'd only invalidate visual observers from nsIFrame::InvalidateInternal, which must not cause reflows, and the problem is gone.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8921364\nBug 1410565 - add gtest for mTimescale checking.\nReview commit: https://reviewboard.mozilla.org/r/192398/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/192398/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'd like to take a crack at this.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 609119\n(AAv1) Remove MIGRATION_BUNDLE leftover\n[Checked in: Comment 27]\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/52557de563d7\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9324558\nBug 1823751: Make macOS pasteboard use NSString for urls, and don't convert to NSData.\nRelease uplift request same as comment 15.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8334961\nPatch with review comments addressed. r=luke\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It looks like this was caused by 777174. The problem reduces to gcc 4.2 not accepting\ntypedef bool (*NativeImpl)();\ntemplate<NativeImpl Impl> inline bool CallNonGenericMethod() {\n}\ntemplate<typename NativeType> class TypedArrayTemplate  {\n  typedef TypedArrayTemplate<NativeType> ThisTypeArray;\n  template<int ValueGetter()>\n  static bool     GetterImpl()     {\n    return CallNonGenericMethod<  ThisTypeArray::GetterImpl<ValueGetter> >();\n  }\n};\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22687190&tree=Mozilla-Inbound\nRev5 MacOSX Mountain Lion 10.8 mozilla-inbound debug test reftest on 2013-05-07 08:35:15\nslave: talos-mtnlion-r5-081\n08:43:27     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///builds/slave/talos-slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi jmuizelaar,\nI don't know who did the magic that passed -Wno-error=maybe-uninitialized to g++...\nSo it is against the warning as error.\nAlso I think removing goto statement is benefit for C++ code.\nPlease help to review this patch for fixing those warnings.\nThank you!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh no, that's not it, because MP4Reader::Shutdown does AwaitIdle while shutting down its task queues, and so it's effectively synchronous. I'll explain what's actually happening here in the next comment.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by jandemooij@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9c62ab1bfb8a\nEliminate unnecessary null check from Ion post barriers when we know the object is non-null. r=jonco\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 627430\nPatch for bug v4\nThe comment doesn't match the code anymore. Maybe you should mention why the pageproxystate check is needed even though you already set pointer-events: none.\nYou could also make this a separate if (...) return; block or add it to if (this._mode == this.IDENTITY_MODE_CHROMEUI) for the sake of the above block's readability.\nSince the globe icon doesn't represent an identity state anymore and since the icon isn't clickable anymore, making winstripe and pinstripe follow gnomestripe might make more sense.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8477354\nDo not pause when playbackRate = 0. Instead don't play anything\nReview of attachment 8477354:\n-----------------------------------------------------------------\nLooks good, sorry for the slow review.\n::: content/html/content/src/HTMLMediaElement.cpp\n@@ +3836,5 @@\nThis should not be necessary, because if we are pausing (internally, while showing that we are in playing state) the media, no sound will be output anyways.\n::: content/media/MediaDecoder.cpp\n@@ +1429,5 @@\nnit: always use braces, even for single line statements.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8356535\nnamespace consistency for netwerk/protocol/http\nReview of attachment 8356535:\n-----------------------------------------------------------------\nLooks good. Couple of really minor nits about indentation. I won't mind if you want to ignore them ;) r=me.\n::: netwerk/protocol/http/nsHttpConnection.h\n@@ +262,5 @@\nnit: indentation.\n::: netwerk/protocol/http/nsHttpHandler.h\n@@ +455,5 @@\nnit: indentation to match mCriticalRequestPrioritization?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Filed by: apavel [at] mozilla.com\nhttps://treeherder.mozilla.org/logviewer.html#?job_id=160139385&repo=mozilla-central\nhttps://queue.taskcluster.net/v1/task/Zkxi9RvxS5u84kr60XIRPA/runs/0/artifacts/public/logs/live_backing.log\nhttps://hg.mozilla.org/mozilla-central/raw-file/tip/layout/tools/reftest/reftest-analyzer.xhtml#logurl=https://queue.taskcluster.net/v1/task/Zkxi9RvxS5u84kr60XIRPA/runs/0/artifacts/public/logs/live_backing.log&only_show_unexpected=1\n[task 2018-02-02T20:35:07.544Z] 20:35:07     INFO -  REFTEST TEST-START | http://10.0.2.2:8888/tests/layout/reftests/w3c-css/submitted/test-template-001.xht == http://10.0.2.2:8888/tests/layout/reftests/w3c-css/submitted/references/test-template-001.xht\n[task 2018-02-02T20:35:07.544Z] 20:35:07     INFO -  REFTEST INFO | RESTORE PREFERENCE pref(image.downscale-during-decode.enabled,false)\n[task 2018-02-02T20:35:07.545Z] 20:35:07     INFO -  REFTEST TEST-LOAD | http://10.0.2.2:8888/tests/layout/reftests/w3c-css/submitted/test-template-001.xht | 141 / 311 (45%)\n[task 2018-02-02T20:35:39.566Z] 20:35:39     INFO -  INFO | automation.py | Application ran for: 0:29:11.407899\n[task 2018-02-02T20:35:39.567Z] 20:35:39     INFO -  INFO | zombiecheck | Reading PID log: /tmp/tmpgglIf5pidlog\n[task 2018-02-02T20:35:40.664Z] 20:35:40     INFO -  REFTEST INFO | Copy/paste: /usr/local/bin/linux64-minidump_stackwalk /tmp/tmpoz21zD/36959e31-3443-5df1-1351-2e516ea6264d.dmp /builds/worker/workspace/build/symbols\n[task 2018-02-02T20:35:50.085Z] 20:35:50     INFO -  REFTEST INFO | Saved minidump as /builds/worker/workspace/build/blobber_upload_dir/36959e31-3443-5df1-1351-2e516ea6264d.dmp\n[task 2018-02-02T20:35:50.085Z] 20:35:50     INFO -  REFTEST INFO | Saved app info as /builds/worker/workspace/build/blobber_upload_dir/36959e31-3443-5df1-1351-2e516ea6264d.extra\n[task 2018-02-02T20:35:50.089Z] 20:35:50     INFO -  REFTEST PROCESS-CRASH | http://10.0.2.2:8888/tests/layout/reftests/w3c-css/submitted/test-template-001.xht == http://10.0.2.2:8888/tests/layout/reftests/w3c-css/submitted/references/test-template-001.xht | application crashed [@ mozilla::image::Downscaler::Downscaler]\n[task 2018-02-02T20:35:50.089Z] 20:35:50     INFO -  Crash dump filename: /tmp/tmpoz21zD/36959e31-3443-5df1-1351-2e516ea6264d.dmp\n[task 2018-02-02T20:35:50.089Z] 20:35:50     INFO -  Operating system: Android\n[task 2018-02-02T20:35:50.090Z] 20:35:50     INFO -                    0.0.0 Linux 2.6.29-gea477bb #1 Wed Sep 26 11:04:45 PDT 2012 armv7l\n[task 2018-02-02T20:35:50.090Z] 20:35:50     INFO -  CPU: arm\n[task 2018-02-02T20:35:50.090Z] 20:35:50     INFO -       ARMv7 ARM Cortex-A8 features: swp,half,thumb,fastmult,vfpv2,edsp,neon,vfpv3\n[task 2018-02-02T20:35:50.090Z] 20:35:50     INFO -       1 CPU\n[task 2018-02-02T20:35:50.090Z] 20:35:50     INFO -  GPU: UNKNOWN\n[task 2018-02-02T20:35:50.091Z] 20:35:50     INFO -  Crash reason:  SIGSEGV\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -  Crash address: 0x0\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -  Process uptime: not available\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -  Thread 45 (crashed)\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -   0  libxul.so!mozilla::image::Downscaler::Downscaler [Downscaler.cpp:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 30 + 0x0]\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -       r0 = 0x000000cc    r1 = 0xd4f7cd15    r2 = 0x600cdb1e    r3 = 0x0000001f\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -       r4 = 0x0000001f    r5 = 0x00000000    r6 = 0x00000020    r7 = 0x560ff6d8\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -       r8 = 0x6a8ad90c    r9 = 0x6a8ad800   r10 = 0x00000020   r12 = 0x00000003\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -       fp = 0x0000000c    sp = 0x560ff6d0    lr = 0x5c8dd0f1    pc = 0x5d2e34e6\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -      Found by: given as instruction pointer in context\n[task 2018-02-02T20:35:50.094Z] 20:35:50     INFO -   1  libxul.so!mozilla::Maybe<mozilla::image::Downscaler>::emplace<mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits> &> [Maybe.h:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 459 + 0x5]\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r4 = 0x6a8ad808    r5 = 0x6a8ad90c    r6 = 0x00000020    r7 = 0x560ff6e8\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r8 = 0x6a8ad90c    r9 = 0x6a8ad800   r10 = 0x00000020    fp = 0x0000000c\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       sp = 0x560ff6e0    lr = 0x5d2e2753    pc = 0x5d2e2753\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -      Found by: call frame info\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -   2  libxul.so!mozilla::image::Decoder::PostSize [Decoder.cpp:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 431 + 0x3]\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r4 = 0x6a8ad800    r5 = 0x00000020    r6 = 0x00000020    r7 = 0x560ff720\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r8 = 0x6a8ad90c    r9 = 0x6a8ad800   r10 = 0x00000020    fp = 0x0000000c\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       sp = 0x560ff6f0    lr = 0x5d2e2609    pc = 0x5d2e2609\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -      Found by: call frame info\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -   3  libxul.so!mozilla::image::nsICODecoder::FinishDirEntry [nsICODecoder.cpp:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 309 + 0x7]\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r2 = 0x00000020    r3 = 0x00000000    r4 = 0x54962828    r5 = 0x54962828\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r6 = 0x00000001    r7 = 0x560ff770    r8 = 0x6a8ada00    r9 = 0x6a8ad800\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -      r10 = 0x00000020    fp = 0x0000000c    sp = 0x560ff728    lr = 0x5d31463f\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       pc = 0x5d31463f\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -      Found by: call frame info\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -   4  libxul.so!<name omitted> [nsICODecoder.cpp:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 690 + 0x3]\n[task 2018-02-02T20:35:50.095Z] 20:35:50     INFO -       r4 = 0x55cea770    r5 = 0x6a8ad800    r6 = 0x6a8ad94c    r7 = 0x560ff790\n[task 2018-02-02T20:35:50.096Z] 20:35:50     INFO -       r8 = 0x6a8ad94c    r9 = 0x560ff7e8   r10 = 0x560ff830    fp = 0x6a8ad884\n[task 2018-02-02T20:35:50.096Z] 20:35:50     INFO -       sp = 0x560ff778    lr = 0x5d322979    pc = 0x5d322979\n[task 2018-02-02T20:35:50.096Z] 20:35:50     INFO -      Found by: call frame info\n[task 2018-02-02T20:35:50.096Z] 20:35:50     INFO -   5  libxul.so!mozilla::image::nsICODecoder::DoDecode [StreamingLexer.h:5d6d869ec7becc99b8c3dc639fc52e49b1af3ef1 : 649 + 0x3]\n[task 2018-02-02T20:35:50.097Z] 20:35:50     INFO -       r0 = 0x560ff7e8    r1 = 0x560ff7b0    r2 = 0x00000002    r3 = 0x57d23016\n[task 2018-02-02T20:35:50.097Z] 20:35:50     INFO -       r4 = 0x55cea770    r5 = 0x6a8ad800    r6 = 0x6a8ad94c    r7 = 0x560ff820\n[task 2018-02-02T20:35:50.097Z] 20:35:50     INFO -       r8 = 0x6a8ad94c    r9 = 0x560ff7e8   r10 = 0x560ff830    fp = 0x6a8ad884\n[task 2018-02-02T20:35:50.097Z] 20:35:50     INFO -       sp = 0x560ff798    lr = 0x5d31587d    pc = 0x5d31587d\n[task 2018-02-02T20:35:50.098Z] 20:35:50     INFO -      Found by: call frame info\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Please file a new bug, blocking this one.  And please change the AbstractThread::MainThread()->Dispatch(...) bit to just use NS_DispatchToMainThread instead.  Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        STR.\n1. set pref \"media.autoplay.enabled=false\" and \"media.autoplay.enabled.user-gestures-needed=true\".\n2. goto https://alastor0325.github.io/htmltests/autoplay_tests/autoplay_test2.html\n3. click the video, then video starts playing\n4. close the tab\n5. restore tab by keyboard shortcut \"command + shift + T\"\nExpect.\n6. video from restored tab should not start playing\nActual.\n6. video from restored tab starts playing\n---\nWe listen \"key-up\" event to activate the document then it could gain the autoplay permission. If the event is sent to the wrong target, then the thing would go wrong.\nAfter some investigation, the root cause should be that the \"key-up\" event is sent to the restored tab, then causes its document activation.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        TI+JM is slower than trunk JM on all Kraken crypto tests. TI and JM should do very well on crypto tests, so I'd like to investigate what's happening here. \nTI is also slower on SS crypto-aes, it's probably related.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like Android uses a different hostname.  Fixed the test to deal with that and reenabled it on Android: https://hg.mozilla.org/integration/mozilla-inbound/rev/732f04efe8f5\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/integration/mozilla-inbound/rev/224e1e3e1483\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/9ba10704b7e3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The browser doesnt do any zooming, its purely implemented inside Gecko/APZC, the graphics changes are very likely to effect it\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/1ea94dacda68\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8741930\nMozReview Request: Bug 1265066 - Hide the separator em dash in bookmark keyword awesomebar results. r?mak\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/46849/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8843977\nPatch\nReview of attachment 8843977:\n-----------------------------------------------------------------\nNice.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        That's an authoring conformance requirement because <ol reversed> is not valid XML.\nTechnically, in HTML (non-XHTML) there are only two valid ways of writing this: <ol reversed> and <ol reversed=\"reversed\">.  Again, as an authoring conformance requirement.\nThe UA conformance requirement is the same for HTML and XHTML, and is given at http://www.whatwg.org/specs/web-apps/current-work/multipage/grouping-content.html#attr-ol-reversed and following.  Note that all that text talks just about whether the attribute is set at all, not what values it's set to.  That's just how boolean attributes work in HTML.\nI addressed the rest of the comments.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This bug is fixed, but it crashed at another point randomly (same as Bug 987251).\nhttps://tbpl.mozilla.org/?tree=Try&rev=03e110fde6b3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I used |firefox - reftest| on a x86 platform.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out the changes to nsDeviceSensors for not building on Windows.\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c68b8da6ec5a\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8768358\npatch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/d2a030d452cb\nhttps://hg.mozilla.org/mozilla-central/rev/91d822ac2647\nhttps://hg.mozilla.org/mozilla-central/rev/acd8b80087e0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 565763\nWIP: Cache |RegExpPrivate|s.\nPuts a RegExpPrivate cache on the ThreadData for JSAtom sources only. Hurray immutability!\nI want to do a little bit of browsing-in-the-name-of-science before I put it up for review. Particularly, I want to see how many non-atom sources we \"could have hit on if we cached those\" and how much memory overhead that produces.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8858807\nBug 1357065 - Add a PushClip/PopClip API to WebRenderAPI to more easily distinguish between scrolling clips and non-scrolling clips.\nhttps://reviewboard.mozilla.org/r/130834/#review133802\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Or NS_MIN(signalStrength, 100u)?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8520896\nPatch v1.1\nReview of attachment 8520896:\n-----------------------------------------------------------------\nAs a browser peer, I will delegate review for this to bgrins.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Can y'all prioritize this? Thx!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have no intention, it's your regression ;)\nAre you implying that there's no good way to fix this regression? In that case we should just go ahead and remove the clip-path without waiting for UX input, since the current behavior is clearly broken and the worst of all available options.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8730638\nBug 1203871 - Part 1. Add nsIFrame::GetCharacterRectsInRange.\nIME wants to need the width per character.  Now nsTextFrame/nsIFrmae has only API to get point of string.  So I want to add this method to calculate simply by comment #3.\nIf you cannot review this, please change reviewer.\nReview commit: https://reviewboard.mozilla.org/r/40057/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/40057/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh, whoops. As Lee points out, `XP_LINUX` evaluates true on Android [here](https://searchfox.org/mozilla-central/rev/a3decf626dabd89620171f0ea7840cc4351fe218/modules/libpref/init/StaticPrefList.yaml#14023), so we are still enabling the pref on Android by accident.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 443137\npatch 5: cleanup\nA bunch of cleanup from earlier patches; remove obsolete WebGL pbuffer interfaces, remove non-layers code paths from canvas.\nThings that are still to do:\n- Linux pbuffers\n- Use the context attribs in pbuffers better, and teach webgl how to request the proper ones\n- Check callers of RenderContextsExternal (such as d&d code) to make sure that they still work\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/mozilla-central/rev/e8dfe85fca00\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This is what I will do:\n* python client.py update_nss NSS_3_13_2_MOZILLA_10_PRERELEASE_1.\n* verify that security/coreconf/coreconf.dep is +/- a line\n* update configure.in to require NSS 3.13.2 or later for --use-system-nss.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Also browser_search_favicon.js.  I can see the same problem intermittently with e10s on Windows, and see no reason to believe they are different - so I'm opening a new bug to also disable these tests with e10s keeping this bug number as the reason.\nAs to the reason: I'm seeing that the failure in e10s is caused due to detachController in autocomplete.xml being called during the test, causing the search to stop before we've got the results we expect.  detachController is called via:\n_adjustFocusAfterTabSwitch@chrome://browser/content/tabbrowser.xml:1251:9\n_finalizeTabSwitch@chrome://browser/content/tabbrowser.xml:3273:11\nset_selectedIndex/<@chrome://browser/content/tabbrowser.xml:5252:15\nHandler.prototype.process@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:865:23\nthis.PromiseWalker.walkerLoop@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:744:7\nwhich is tabbrowser focusing the new tab asynchronously.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        When using a slow-ish internet connection, the captcha wizard page is a UX nightmare. There's little to no indication that there's even something loading. When using a custom server, we briefly display the page until we find out that there's a 404 and we move on. That flicker should also go away.\nThe solution that I'm proposing is to preload the captcha as soon as the user decides to create a new sync account rather than connect to an existing one.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Well, removing the clip-path is one option to \"fix\" the regression instance. I am not sure whether or not there are (immediate/easy/upliftable) others, which is why I asked - I don't know that there's a way to restrict the drag stuff without e.g. applying the clip path to the tabstrip (and even then... not 100% that would fix it) which I'd expect to cause other issues (e.g. with dnd on the tabstrip).\nHowever, I disagree that the current state is necessarily worse than the result of removing the clip path. If we accept the original reason for having the clip path, which was to avoid misclicks/drags on tabs when trying to interact with the titlebar, then the failure mode that results from removing the clip path is worse than having the clip path be dead space. That is, if you try and move a window or otherwise interact with the titlebar and \"miss\" and hit the tabs instead, \"nothing happens\" is better than \"you detach a tab into a window\" or \"you change tab selection and lose your context\".\nAs a result I don't think this bug warrants doing anything right now. We can ping Stephen when he's awake and see if we can make progress that way.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 687761\nScreenshot with Firefox17\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We'd like to add rating stars for CFR according to the UX spec:\nhttps://mozilla.invisionapp.com/share/V9LVKJUACMD#/screens\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664335\nWIP - Part 4: xpcshell test case for writing Location Info. v3\nFixed indent.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        For the record - I can build FF on ppc64/ppc64le/s390x with the last fix.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        landed https://hg.mozilla.org/integration/mozilla-inbound/rev/ee5b6efa9bda\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22599806&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-05-04 15:48:06\nslave: t-w864-ix-012\n15:58:10     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9162410\nBug 1651593 - Check the return value of db::GetKnownBodyIds();\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Forwarding this to the reviewer since the assignee is a new contributor.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Steps to Reproduce\n---------------------------------------\n1. go to http://dev.openclic.fr/\n2. click on arrows arround the photo\n3.\nWhat should have happened:\n---------------------------------------\nPhotos should slide (using css -moz-transition)\nWhat actually happened:\n----------------------------------------\nthey don't\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Dragana, Valentin, I'll do more debugging as I have time. Anything you could think of why websockets would start failing because we are adding sec-fetch-* request headers? See comment 31, for details about testing. If there is anything you could think of, please let me know. I tried all the obvious places, if you have any pointers, please let me know.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by eoger@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/5dfa3982d405\nListen to service start notification in Synced Tabs sidebar. r=markh\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 605749\nscreenshot\nI've tested using the try build and the favorites from IE9 are imported in Bookmarks Menu but items are not present in a new directory and also are not in the same order as in IE9.\nSee the screenshot.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 626341\nfix test\nPlease update the \"0-interval timer\" part in the is() comment too.  r=mats\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hm, this test is still failing: `browser/base/content/test/performance/browser_startup_mainthreadio.js | unused whitelist entry before handling user events: Z:\\task_1566235067\\build\\application\\firefox\\omni.ja`\nhttps://treeherder.mozilla.org/#/jobs?repo=try&selectedJob=262304880&revision=54abbee14a13ef75cc30aab0cbab3d2887f6d9d8\nmconley/florian, this is behind a ` Services.tm.idleDispatchToMainThread()` in `BrowserGlue.jsm` now, is that somehow expected, or did I miss something? Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Mats,\nIt's just a kind reminder that this patch I submitted half a month a ago is waiting for your review. I've already explained the timeline of this bug with logging message in a previous comment.\nCould you review this patch now? Or if you don't have time, could point me to someone who is also eligible to review this patch? I'm afraid I would probably forget some of the detail in the bug if it takes too long.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by htwyford@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/0ab19ed23861\nContext menu clicks ignore browser.urlbar.clickSelectsAll pref. Add tests for selectAll behaviour. r=mak\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8858807\nBug 1357065 - Add a PushClip/PopClip API to WebRenderAPI to more easily distinguish between scrolling clips and non-scrolling clips.\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/130834/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bulk assigning P3 to all open intermittent bugs without a priority set in Firefox components per bug 1298978.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8843801\n1343787_aurora_53_fix.patch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        According to our discussion, the storage in one tab doesn't have to reflect the storage permission grant from the other tab who has the same configuration. We would expect users to refresh the tab to really get their storage updated in this case. So, we don't really need to update the hasStoragePermission for the other tab.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        his refactoring is a rewrite, will have to apply this fix to his patch as well (added dependency).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        :sandor, ok I understand the backout.\nI'm pretty sure that this patch is not the real culprit since it just aims to remove an infobar from pdf reviewer and there nothing related to text selection here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Harry, could you please ask for Beta uplift?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This bug doesn't affect me on my Mac. I think the bad behaviour is caused by the Windows platform gate (removed in the attached patch), meaning this issue only affects Windows. This bug is independent of the `browser.urlbar.clickSelectsAll` pref and whether `clickSelectsAll` happens at all -- it only affects contextmenu clicks, and only the contextmenu handler has the Windows platform gate.\nThe Windows platform gate originates here: https://searchfox.org/mozilla-central/source/toolkit/content/widgets/textbox.xml#248. I ported it over to the UrlbarInput contextmenu handler when I was removing the clickSelectsAll behaviour from XUL textboxes. This bug shows that the platform gate now causes issues -- I believe Windows was getting its contextmenu clickSelectsAll behaviour from somewhere else in `textbox.xml`, and that is now removed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 656423\nall-in-one patch, WIP, v2\nReview of attachment 656423:\n-----------------------------------------------------------------\n::: dom/fm/FMRadio.cpp\n@@ +16,5 @@\nI think we want the hal backend to tell us this.\n::: dom/fm/FMRadioService.jsm\n@@ +5,5 @@\nHmm.. This doesn't really sound like a fallback since it's being run when we actually have a fm radio.\n@@ +366,5 @@\nYou should add the event listener before enabling the radio. If enable immediately enables the radio, your listener won't be called. Same thing goes for the disable listener.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes, you are right.\nWe have two methods to enable and disable the FM radio, so i think it's OK to keep two events here.\nOK, i will update the IDL patch for WebFM first.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 637559\nWith a test for appending\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I will investigate why the parent process is getting killed and if there is anything we can do to address it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm happy to investigate this further, do you have any specific requests? A sampling of stacks is certainly doable.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 732768\nKnow Your Rights notification box has moved to be shown as default snippet on first startup\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8921364\nBug 1410565 - add gtest for mTimescale checking.\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/192398/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Csmith (http://embed.cs.utah.edu/csmith/) is a high-quality C fuzzer.  They say that they've found bugs in every tool they've tested with it.  The same research group also produces a test case reducer: http://embed.cs.utah.edu/creduce/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        yes\nmaybe not many of them\nwell, we do that, maybe it's not super nice but it's hard to keep things separately.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        :RT, do you want to have this patch in 89 ?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8520894\nPatch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=12010097&tree=Firefox\nRev3 WINNT 5.1 mozilla-central opt test mochitests-1/5 on 2012-05-23 19:38:38\nslave: talos-r3-xp-039\n60673 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks Emilio. I tried to do a similar test using only HTML (no MathML) and indeed on macOS links are not tab-navigable by default, so the test fails... \n(see also the related https://github.com/Igalia/chromium-dev/issues/50)\n@Boris: Not sure what would be the easiest way to move forward? Add a failure expectation on mac? Do not test navigation of mathml link? Find a way to force the link to be tab-navigable?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 584371\ntestcase\nThe first assertion is like in bug 698340, but the other issues are new.\n###!!! ASSERTION: Unnecessary MakeFullScreen call: 'mFullScreen != aFullScreen', file widget/src/cocoa/nsCocoaWindow.mm, line 1163\n###!!! ASSERTION: Full-screen element should be the requested element!: 'GetFullScreenElement() == aElement', file content/base/src/nsDocument.cpp, line 8921\n###!!! ASSERTION: Should be full-screen doc: 'IsFullScreenDoc()', file content/base/src/nsDocument.cpp, line 8922\nNull deref crash [@ nsDocument::RequestFullScreen], but only in debug builds?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9317067\nBug 1815706 - Update history sidebar telemetry r=mak,mkaply\nApproved for 111.0b5\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I saw the crash on unagi, but none of this code is device specific.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Let's get this landed when all of the patches have been reviewed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8677111\nUse gfxCriticalNote where appropriate for brevity.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looking at this list I see a bunch that could cause crashes in the future.  \nI'm going to take this bug and start with a patch that resolves the -Wformat warnings.  After that we can tackle the -Wformat-security and -Wformat-extra-args\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9012899\nRemove fuzzy-if\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8876111\nBug 1357049 - add one button in the Private Browsing and Search tour of onBoarding overlay to demonstrate the corresponding features.\nhttps://reviewboard.mozilla.org/r/147540/#review152264\nI saw you modified that in the polish bug, should I just leave that to you?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/1f64197c3878\nhttps://hg.mozilla.org/mozilla-central/rev/1a71337e5cf7\nhttps://hg.mozilla.org/mozilla-central/rev/78e58e679fca\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sure, though most of those are to import from an external file or a pre-places file, not for default bookmarks that is the only case affected by omni.ja. Btw, will look and file eventual follow-ups as needed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664519\nUpdate pdf.js to version 0.5.184\nDave, mind taking a look?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9125951\nBug 1614706 - ThreadSanitizer: data race [@ Release] vs. [@ CloseWithStatusLocked] in CacheFileInputStream\nAcquiring the lock is moved from CacheFile::RemoveInput() to CacheFileInputStream::Release(). This fixes the data race and is consistent with CacheFile::RemoveOutput() which is also called under the lock.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        From bug 1097601 - I have this whenever I'm using session restore which is all the time on my main profile as I've got tab groups.\nIt happens on all sites. Whereas opening in non-e10s is fine.\nI've also replicated this with not using tab groups, but using the History -> Restore Previous Session option.\nI'm using MacBook Pro 10.8 with a retina display on the laptop, and a non-retina external display.\nI noticed something this morning: I happened to be on just the laptop display, and the scrollbars were there. Now I've switched back to my normal setup I've lost them again (it took a couple of restarts though). My normal setup has the non-retina display as the \"master\" showing the app bar and menu bar.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Follow up from Bug 1364355 comment 25\nLet's land the missing piece of Bug 1364355 when the popup OMTC issue was fixed by Bug 1369488.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9270003\nBug 1761826 - Enable disallowing relaxing referrer policies. r?#anti-tracking-reviewers\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        submit_timestamp: 2014-12-15T12:49:10\nlog: https://treeherder.mozilla.org/ui/logviewer.html#?repo=b2g-inbound&job_id=997552\nrepository: b2g-inbound\nwho: rvandermeulen[at]mozilla[dot]com\nmachine: tst-linux64-spot-179\nbuildname: Ubuntu VM 12.04 x64 b2g-inbound debug test mochitest-4\nrevision: debd2ce34bf9\n122 INFO TEST-UNEXPECTED-FAIL | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Upstream PR merged by jgraham\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8825263\nBug 1329110. Part 5 - split Split StateObject::HandleVideoNotDecoded into small functions.\nReview commit: https://reviewboard.mozilla.org/r/103438/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/103438/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/51e004a9b248\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8813613\ndir.patch\nApproval Request Comment\n[Feature/Bug causing the regression]: Entries API\n[User impact if declined]: wrong last-directory in nsIFilePicker\n[Is this code covered by automated tests?]: none\n[Has the fix been verified in Nightly?]: not yet\n[Needs manual test from QE? If yes, steps to reproduce]: it's described in the bug.\n[List of other uplifts needed for the feature/fix]: none\n[Is the change risky?]: no\n[Why is the change risky/not risky?]: this patch is already in aurora. The code just takes the directory path as last visited directory, in case the nsIFilePicker is in directory mode.\n[String changes made/needed]: none\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Since 20100917 build, I have the same issue with a new profile.\nI checked that webgl.enabled_for_all_site is set to true.\nIt seems to be linked to bug 594874 fix.\nEvery Intel card as been declared as \"Webgl not recommended\", so webgl is not enabled. \nEither, \"webgl not recommended\" status must not disabled webgl, or at least some recent graphic cards must have \"webgl available\" status.\nAdapter Description : Mobile Intel(R) 4 Series Express Chipset Family\nVendor ID : 8086\nDevice ID : 2a42\nAdapter RAM : Unknown\nAdapter Drivers : igdumd64 igd10umd64 igdumdx32 igd10umd32\nDriver Version : 8.15.10.2202\nDriver Date : 8-25-2010\nDirect2D Enabled : true\nDirectWrite Enabled : true\nGPU Accelerated Windows1/1 Direct3D 9\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9036318\npart 3 - reject_cookie policy\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/releases/mozilla-1.9.2/rev/c0c261de23ec\nhttp://hg.mozilla.org/releases/mozilla-1.9.1/rev/e532600954d0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sound the trumpets!\nHere's the first part of the review.  It covers everything except the JS bits.  I'm working on the JS code now.\nI'm sorry again this took so long.  The next round should go faster.\n\"The addEventListener, removeEventListener, and dispatchEvent methods below are\na temporary hack, which will be removed once nsIDOMFMRadio can inherit from\nnsIJSDOMEventTarget.  See bug 731746.\"\n(The main problem here is that we use \"this\" when we mean \"these\".)\nDoes this file not work if you don't include these to files?  It's not clear\nwhy you need them.\nPlease add a brief comment here explaining what nsIFMRadio is for.\nPlease indicate what the units are here.  (I don't see why this shouldn't be a\ndouble like nsIDOMFMRadio.)\nPlease match nsIDOMFMRadio by making signalStrength a double.\nPlease add a comment explaining what settings are expected.\nIn fact, we really should create a new interface (e.g. nsIFMRadioSettings) and\nuse that as the argument type here.\nRelying on FM_RADIO_SEEK_DIRECTION_{UP,DOWN} is problematic here, because\ncallers from JS don't have access to those constants.\nInstead, you should add constants to this IDL file, like:\n      const long SEEK_DIRECTION_UP = 0;\n      const long SEEK_DIRECTION_DOWN = 1;\n(Notice that these are |long|'s, that is, int32's.  I don't think it makes\nsense to use a short here; this is effectively an enum, and we use XPIDL |long|\nfor that.)\nAgain, switch this to nsIFMRadioSettings, so that if I called this from C++, I\nwouldn't have to unpack a mysterious jsval.\nAgain, indicate what the units are on frequency, and consider using a double\nhere (unless there's a good reason not to?).\nThese should all be nsIRunnable.  That will give you a strongly-typed callback\nfunction, which is what you're going for here, I think.  (In other words, if\nyou used nsIRunnable here, you wouldn't have to change any of the JS code which\ncalls this interface.)\nIt looks like FM radio support is guarded by MOZ_B2G_FM, but this JSM is\nincluded on all B2G builds.  Should you add a check here that MOZ_B2G_FM is\nset?\nWe never put |using namespace| inside a header file.  That causes serious\nbreakage, because it means that every header file which is included below this\none also |uses namespace mozilla::hal|, which effectively puts mozilla::hal\ninto the global namespace!\nThis is defined in hal/HalTypes.h, which is included above.  Do you need this here?\nThis comment is not adding anything; please remove it.\nFix spacing, please.  (Align everything to the first |public| above.)\n       Dispatch a trusted, non-cancellable, not-bubbling event to ourself.\nint32_t, or uint32_t, but almost never raw |int|.\nBut it looks like this should actually have the type hal::SwitchState.\nPlease add a comment indicating what this is the status of, and rename the\nvariable to something more meaningful than |mStatus|.\nWhy are these protected and not private?  Does someone inherit from this class?\nThese are virtual methods, no?  Notify(SwitchEvent&) comes from SwitchObserver,\nand Notify(FMRadioOperationInformation&) comes from FMRadioObserver.  Both\nSwitchObserver and FMRadioObserver are instances of mozilla::Observer, defined\nin xpcom/glue/Observer.h.\nIn that case, these need to be marked as virtual.  Also, please put them up\nwith the other public methods.\nA bunch of things will be changing in this file, per my comments in the IDL.  I\nhaven't commented on them further here.\nAs far as I can tell, these log statements are the only android-only feature of\nthis file.  Please guard them with an ifdef.  (You can just define LOG to do\nnothing if we're not on Android.)\nThe right solution would be to use prlog, but that's kind of a pain to use in\nb2g.  We have a pretty bad logging story. :(\nYou use these only once, and the macros aren't any shorter than what they're\nreplacing, so I'd inline the macros, if it was me.  Whatever you prefer is fine.\nThis comment isn't adding anything; please remove.\nWe format this like:\nFMRadio::FMRadio()\n  : mStatus(1)\n  , mHasInternalAntenna(false)\nWe use NS_FAILED instead of !NS_SUCCEEDED and format this like\n    if (NS_FAILED(Preferences::GetBool(DOM_FM_ANTENNA_INTERNAL_PREF,\n                                       &mHasInternalAntenna)) ||\n        !mHasInternalAntenna) {\nBut even better, I think, would be to do\n    mHasInternalAntenna = Preferences::GetBool(\"dom.fm.antenna.internal\",\n                                               /* default = */ false);\n    if (mHasInternalAntenna) {\n      LOG(\"We have an internal antenna.\");\n    } else {\n      ...\n    }\nPlease do\n    if (...) {\n(We almost never put the brace for an if statement on the next line.)\nGecko style is to brace all if/else statements.\nAlso, when you switch mStatus to the |SwitchState| type, please use\nSWITCH_STATE_{ON,OFF}, not \"0\", here and elsewhere.\nNit: This is a comma splice.  Replace the comma with a period.\nBut I also don't understand this comment; the signal strength is [0-100], but\nit can be bigger than 100?  Perhaps you could elaborate a bit in the comment.\nNit: how about\n    *aSignalStrength = NS_MIN(signalStrength, 100) / 100.0;\nblean\nNit: |const JS::Value& settings|.  But this whole thing is going to change\nanyway, per the comments on the IDL.\n|oldStatus| would be more idiomatic.\nNit: Please do\n    event->InitEvent(aEventName, /* bubbles = */ false, /* cancelable = */ false);\nAgain, it's not clear to me why this guy is B2G only.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 562836\nunread - fix (corr)\nComments deleted, typo corrected\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 565092\nDon't remove unread in preview mode\nFix on old position\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Dan, if it is sec-moderate, we would most likely wontfix it for esr38. Should I go ahead and do that? Or do we need more discussion/comments on this? Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9083353\nbug_1565273_beta_updated.diff\n### Beta/Release Uplift Approval Request\n* **User impact if declined**: \n* **Is this code covered by automated tests?**: Yes\n* **Has the fix been verified in Nightly?**: Yes\n* **Needs manual test from QE?**: Yes\n* **If yes, steps to reproduce**: \n* **List of other uplifts needed**: None\n* **Risk to taking this patch**: Low\n* **Why is the change risky/not risky? (and alternatives if risky)**: \n* **String changes made/needed**:\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 627430\nPatch for bug v4\nI made this change for consistency between the three themes.\n- Winstripe was set to 0.5 opacity when the blank favicon was updated to the dotted outline.\n- Pinstripe was set to 0.5 opacity somewhere around Bug 587901 (which was backed out). The history is a little cloudy here because a lot of lines got moved around so I couldn't find a more definitive answer.\n- Gnomestripe was set to 0.3 opacity by the patch for bug 621091, which switched Linux to using the stock icon for gtk files for blank documents instead of the default favicon.\nNow that all platforms use the same icon for generic documents, I think we should standardize on the opacity of the icon for its disabled state.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I was thinking the same thing, then I thought about it more. All image decodes should be finished when the reftest finishes. and we haven't seen this failure for years, so why are we seeing it now?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This has also fixed the OS X nightly builds\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 640083\nWith some assertions also fixed so this passes tests\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I kind of wish we could avoid spreading the use of the horribly-named \"pageproxystate\" attribute and use some other name, but I guess inconsistency with the URL bar attribute name would be a worse problem (and I can't really think of a better name).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This regressed between 5976b9c673f8 and 0888e29c83a3 (yesterday's and today's build), changesets: http://hg.mozilla.org/mozilla-central/pushloghtml?fromchange=5976b9c673f8&tochange=0888e29c83a3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Marty, is this patch appropriate for aurora? If so, please request aurora approval on the patch!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Need a regression range.  Doesn't seem to be reproducible on Mac.  :(\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8403724\n983489.patch\nReview of attachment 8403724:\n-----------------------------------------------------------------\nPlease refer: https://bugzilla.mozilla.org/show_bug.cgi?id=922680#c97 and https://bugzilla.mozilla.org/show_bug.cgi?id=983489#c19\nGLContext release too early, and we have many chance to release it. So, mark two line which will release GLContext.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bug 1508292 broke send tab and I would guess Push Notifications in general. See Push log from Firefox Nightly startup:\n```PushServiceWebSocket: onTimerFired() PushServiceWebSocket.jsm:174\nPushServiceWebSocket: onTimerFired: Reconnecting after backoff PushServiceWebSocket.jsm:182\nPushServiceWebSocket: beginWSSetup() PushServiceWebSocket.jsm:508\nPushServiceWebSocket: beginWSSetup: Connecting to wss://push.services.mozilla.com/ PushServiceWebSocket.jsm:532\nPushServiceWebSocket: wsOnStop() PushServiceWebSocket.jsm:1081\nPushServiceWebSocket: wsOnStop: Reconnecting after socket error 2152398861 PushServiceWebSocket.jsm:1084\nPushServiceWebSocket: reconnect() PushServiceWebSocket.jsm:347\nPushServiceWebSocket: shutdownWS() PushServiceWebSocket.jsm:353\nPushServiceWebSocket: startBackoffTimer() PushServiceWebSocket.jsm:417\nPushServiceWebSocket: startBackoffTimer: Retry in 40000 Try number 4 PushServiceWebSocket.jsm:426\n```\nAnd mozregression:\n```\n 6:58.96 INFO: Narrowed integration regression window from [23c4c99d, a0508ae6] (3 builds) to [f6b26481, a0508ae6] (2 builds) (~1 steps left)\n 6:58.96 INFO: No more integration revisions, bisection finished.\n 6:58.96 INFO: Last good revision: f6b264818bbfc385da9010ed49dfecf2efd436f3\n 6:58.96 INFO: First bad revision: a0508ae6c037928981ac2733860b6ec84d7069ec\n 6:58.96 INFO: Pushlog:\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=f6b264818bbfc385da9010ed49dfecf2efd436f3&tochange=a0508ae6c037928981ac2733860b6ec84d7069ec\n```\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/8abfd1252969\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8529252\nEllipsize long unresponsive script locations so they don't make the slow script dialog too big\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Also, note that migrating mozilla::Move to C++11 move() is not going to be an automatic process, and cannot be done very easily unless you know the exact semantics of the code involved.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 810737\ncycle creation stack\nCaught that cycle being created. This presumably has something to do with how we process all descendants of a fixed position layer specially, and a bad interaction of that with sticky position layers.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Forget about it. You just gave me the explanation.\n \n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out since this contained a typo (mismatched brackets) that completely broke Firefox.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We should disable webgl out-of-process on 107, since we turned it on \"because why not\".\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks a lot for correcting my english written sentences. If you feel\nre-writting the whole sensence is a lot easier for you, please do it.\nEither way works for me. I am really appreciate.\nI think the interface is kind of a hal::FMRadioSettings \"copy\", i am trying to make them consistent.\nBTW, in the WebFM idl, we call this \"channelWidth\", should we change it too? or call this \"channelWidth\" in anywhere?\nCool~\nI am trying to make it consistent with the hal part.\nBecause there is hal::FMRadioSettings, it is easy to be confused, I prefer keep the \"ns\" prefix, and move it to the top-level namespace.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1124209 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/4d76ec905c11\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks, I've opened bug 1497351 to fix the WebRTC parts.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/49bef2408c15ae8e76ee485bd8c338573fa8a1c7\nBug 1287522 - Apply ToString in correct order in RegExp.prototype.toString. r=evilpie\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I filed bug 999864\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The latest specs have become as adding one button in the Private Browsing onBoarding tour which highlights the Private Window button in the hamburger menu\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Awesome!\nWe are aware of this problem with these streams and we plan to reissue them with valid trun boxes very soon.\nIn the meantime, we have another test asset which should be valid: http://rdmedia.bbc.co.uk/dash/ondemand/testcard/1/client_manifest-events.mpd\n(Note that this stream contains in-band DASH Events ('emsg' boxes) which the parser will need to ignore. If this is a problem, we will want to raise a bug for graceful support of those. In this case, an additional stream - http://rdmedia.bbc.co.uk/dash/ondemand/testcard/1/client_manifest.mpd - has the same media content without DASH events.)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It would indeed if we think there's a sec-critical bug lurking here. Do we need this on the ESR-10 branch as well?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Excellent, thanks.\nI would propose that the first step is to run debugging all the way up to 9, run a text call, and then fix the first message that causes a segfault. Repeat as necessary.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like I was missing a header file that b2g didn't use.\nHere's a new try that's looking pretty green:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=f87eaa8bf913\nI'll wait for these last few to come in and re-land.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes and yes.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by eakhgari@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/688f10a74c64\nEnsure that speculative connect and DNS prefetching aren't disabled when annotating tracking channels; r=mayhemer\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        In order to drive homepage remediation through the CFR/messaging. We need to set up an action that remedates the page away from custom domains. The use case here would be as follows\n* I have search.com as my homepage\n* CFR tells me to switch\n* I click CFR\n* My homepage is now set to a search-only default experience\nHere's a little fake Schema that is meant to just describe requirements\n```\nname: SET_HOMEPAGE \nparams: {\n  home: one of 'default', 'blank', <url>\n  newtab: one of 'default', 'blank', <url>\n  layout: <optional, specified to update layout of default page> one of 'search_only' or 'standard'\n}\n```\nWe could get fancy and make the layout parametric for different layouts (ie, topSiteRows: 5) or whatever, but that seems like follow up here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/1f64197c3878\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/1a71337e5cf7\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/78e58e679fca\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I removed two `console.log` statements that snuck their way into the previous patch. I'll prepare a patch removing those statements from Nightly as well.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8543075\nassertion stack\n1. Make sure e10s is enabled.\n2. Open the browser console.\n3. Navigate to www.google.com in the main browser window.\nI tried this same thing in my regular Nightly session, and nothing obviously bad happened, so maybe it is just an overly strict assertion.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22510556&tree=Mozilla-Inbound\nRev5 MacOSX Mountain Lion 10.8 mozilla-inbound debug test reftest on 2013-05-02 09:56:18\nslave: talos-mtnlion-r5-074\n10:05:08     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///builds/slave/talos-slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Same with /[f-\\d]/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7329/#review6159\n::: widget/cocoa/nsLookAndFeel.mm:652\n(Diff revision 4)\nso here's a question - on Windows I can go in and set ui.useOverlayScrollbars to true and get overlay behavior. This works with e10s. I'm assuming we can do the same on mac, but I'm wondering if the change takes effect?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I guess that might be bug 620002.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm not sure what to do here. We don't restyle the document because HasDocumentStateDependentStyle doesn't find the :-moz-window-inactive rule because it's in an XBL stylesheet. For normal content state changes we can inspect XBL stylesheets because we can get the binding from the content node (in nsBindingManager::WalkRules), but when the document state changes we only have the root node and no way of getting to the right binding.\nDoes this mean we'll have to iterate over the whole content tree whenever the document state changes?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 647943\nDOMFmManager, FmAdaptor and FmAntenna\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/296412895f45\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think we don't need to include the full UITour-lib into onboarding.\nSince the only function we use in UITour is `showHighlight`, we can pick the message sending portion from UITour and do it in onboarding. I tested the following script on about:home, about:newtab, and activity-stream, they all works fine.\nPut `_sendEvent` as one of the onboarding method\n```\n  _sendEvent(action, data) {\n    var event = new this._window.CustomEvent(\"mozUITour\", {\n      bubbles: true,\n      detail: {\n      action,\n      data: data || {}\n      }\n    });\n    this._window.document.dispatchEvent(event);\n  }\n```\nEmbed this in button action (this might be too simple to not worth wrap another layer)\n```\nthis._sendEvent(\"showHighlight\", {\n  target: \"addons\"\n});\n```\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8890481\nBug 1384677 - remove com.apple.cookied access from content processes;\nhttps://reviewboard.mozilla.org/r/161614/#review166932\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8878063\nBug 1373249 - Enable OMTC for composited popups,\nReview commit: https://reviewboard.mozilla.org/r/149476/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/149476/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Opened up Bug 1067207\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/2359/#review1735\nbz can you look at (at least) the xhr part?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It is my understand that when playback rate is 0, it should play. E.g. it is not in pause state but in play state.\nIt just happens to play nothing as the rate is 0.\nAs such, the control bar appears to be playing, showing the pause button.\nThis is how chrome handles it as well\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/5d416b2096d7\nhttps://hg.mozilla.org/mozilla-central/rev/d7be751c9b43\nhttps://hg.mozilla.org/mozilla-central/rev/074c9b0a8e77\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The patch in bug 643037 fixes the truncate-double paths and brings the JM+TI time down to 361 (still with the modification to the Math calls).  Other things that should help:\n1. Know that 'a' is an integer within the loop in the C function.  It is initially an array but is then reused as an integer.  Could use SSA-style techniques to add some flow sensitivity to let the inference distinguish its uses, or (probably better) make a Crankshaft-style speculation it is an integer within the loop body and hoist a check to the loop header.  This is worth about 20ms (easy to test by hand).\n2. Hoist array bounds checks and LICM the slots pointer computation on the 'd' array.\n3. Regalloc tuning on the loop, get another GPR (heavy register pressure here).\n4. Typed natives or inline code for various Array natives.  Shark thinks we spend a decent amount of time in these.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/82ae3ed4c30c\nhttps://hg.mozilla.org/mozilla-central/rev/f230c3fb62f5\nhttps://hg.mozilla.org/mozilla-central/rev/94daa42ee46f\nhttps://hg.mozilla.org/mozilla-central/rev/6d4f963d3655\nhttps://hg.mozilla.org/mozilla-central/rev/47a58ef26a92\nhttps://hg.mozilla.org/mozilla-central/rev/ac84ae5fa2da\nhttps://hg.mozilla.org/mozilla-central/rev/4ccc8126ea20\nhttps://hg.mozilla.org/mozilla-central/rev/6994a692b48c\nhttps://hg.mozilla.org/mozilla-central/rev/0978881c4e10\nhttps://hg.mozilla.org/mozilla-central/rev/e743dff9dca1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8954680\nBug 1441779 - Part 2: Add nsTArray::RemoveLastElement() and nsTArray::PopLastElement()\nReview commit: https://reviewboard.mozilla.org/r/223782/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/223782/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9313321\nBug 1811466 - Restore menubar activation behavior from before bug 1811466. r=smaug\nApproved for 110 beta 8, thanks.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mozilla@christophkerschbaumer.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/96875dd613f8\nGather telemetry for toplevel data: URI loads. r=dveditz,francois\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Track this as risk mentioned in comment #36.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/bea5b6f80aa6\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 536539\npatch\nReview of attachment 536539:\n-----------------------------------------------------------------\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Actual results:\n[object Array] of length 2: [\"one\",\"two\"]\n[object Array] of length 2: [\"one\",\"two\"]\nVerified fixed on FF 10.0.3 ESR on Win 7, Ubuntu 11.10 and Mac OS X 10.6.8\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out for assertions:\neg https://tbpl.mozilla.org/php/getParsedLog.php?id=28934657&tree=Mozilla-Inbound\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/45f35cc52ceb\nWere the jit-tests run locally on a debug build before requesting checkin-needed..? :-)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes, sr for that change isn't needed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Heh, exactly the opposite. Inbox performs normally on Mar 7 build, and later builds perform terribly. I don't know that the problem started on the Mar 8 build though - all I could find that was older at the time I reported was Mar 7, which works fine so I stuck with it ;)\nWe really just need someone from QA who's got the mozregression stuff installed and dialed to try and reproduce and narrow the window of regression.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/ebc6cc2ac67a\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oops, disregard comment #11. I see we need that for the drag code, not Aero Peek.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I don't reproduce either this or bug 931450 in the latest Nightly. Discussion on bug 919156 suggests that they could have been fixed in bug 919144?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        **Filed by:** apavel [at] mozilla.com\n**Parsed log:** https://treeherder.mozilla.org/logviewer.html#?job_id=293080829&repo=autoland\n**Full log:** https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/fBOF6Va9QAeOZf42j1TrGA/runs/0/artifacts/public/logs/live_backing.log\n---\n[task 2020-03-13T18:47:45.440Z] 18:47:45     INFO - TEST-START | /web-animations/timing-model/timelines/update-and-send-events-replacement.html\n[task 2020-03-13T18:47:45.448Z] 18:47:45     INFO - Closing window 11\n[task 2020-03-13T18:47:47.083Z] 18:47:47     INFO - \n[task 2020-03-13T18:47:47.083Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to another animation's current time \n[task 2020-03-13T18:47:47.083Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to its current time \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to another animation's timeline \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to its timeline \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to another animation's effect's properties \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Does NOT remove an animation after making a redundant change to its effect's properties \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Updates ALL timelines before checking for replacement \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Dispatches remove events after finish events \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Fires remove event before requestAnimationFrame \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-PASS | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Queues all remove events before running them \n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-UNEXPECTED-FAIL | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | Performs removal in deeply nested iframes - assert_equals: expected \"removed\" but got \"active\"\n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - @http://web-platform.test:8000/web-animations/timing-model/timelines/update-and-send-events-replacement.html:1013:16\n[task 2020-03-13T18:47:47.084Z] 18:47:47     INFO - TEST-INFO | expected TIMEOUT\n[task 2020-03-13T18:47:47.441Z] 18:47:47     INFO - TEST-UNEXPECTED-OK | /web-animations/timing-model/timelines/update-and-send-events-replacement.html | expected TIMEOUT\n[task 2020-03-13T18:47:47.441Z] 18:47:47     INFO - TEST-INFO expected TIMEOUT | took 1998ms\n[task 2020-03-13T18:47:48.376Z] 18:47:48     INFO - Closing logging queue\n[task 2020-03-13T18:47:48.376Z] 18:47:48     INFO - queue closed\n[task 2020-03-13T18:47:48.392Z] 18:47:48     INFO - Setting up ssl\n[task 2020-03-13T18:47:48.473Z] 18:47:48     INFO - certutil | \n[task 2020-03-13T18:47:48.568Z] 18:47:48     INFO - certutil | \n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO - certutil | \n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO - Certificate Nickname                                         Trust Attributes\n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO -                                                              SSL,S/MIME,JAR/XPI\n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO - \n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO - web-platform-tests                                           CT,, \n[task 2020-03-13T18:47:48.584Z] 18:47:48     INFO - \n[task 2020-03-13T18:47:51.480Z] 18:47:51     INFO - adb Granting important runtime permissions to org.mozilla.geckoview.test\n[task 2020-03-13T18:47:52.871Z] 18:47:52     INFO - adb launch_application: am start -W -n org.mozilla.geckoview.test/org.mozilla.geckoview.test.TestRunnerActivity -a android.intent.action.MAIN --es env9 MOZ_DISABLE_NONLOCAL_CONNECTIONS=1 --es env8 R_LOG_DESTINATION=stderr --es args \"-no-remote -profile /sdcard/tests/profile --marionette about:blank\" --es env3 MOZ_HIDE_RESULTS_TABLE=1 --es env2 R_LOG_VERBOSE=1 --es env1 MOZ_WEBRENDER=0 --es env0 MOZ_CRASHREPORTER=1 --es env7 MOZ_CRASHREPORTER_SHUTDOWN=1 --es env6 MOZ_IN_AUTOMATION=1 --es env5 MOZ_LOG=signaling:3,mtransport:4,DataChannel:4,jsep:4 --es env4 STYLO_THREADS=1 --ez use_multiprocess True --es env12 R_LOG_LEVEL=6 --es env11 MOZ_PROCESS_LOG=/tmp/tmpvix8Fspidlog --es env10 MOZ_CRASHREPORTER_NO_REPORT=1\n[task 2020-03-13T18:47:54.684Z] 18:47:54     INFO - Starting runner\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 625287\nPatch for bug\nThis reverts the identity block to the generic state when the pageproxystate is invalid.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm doing the tests from the same machine that I am running nightly on, so the pathing should be the same.\nAttempting to establish a new push subscription to the test site fails when the GET wss://push.services.mozilla.com/ does not return a response within the browser.\nMaking the same call using the same header values outside of firefox nightly succeeds as \nI don't have the ability to delve into the active User Agent Push internals but there are a few possible reasons for the failure:\n1) The client is failing to send the push \"hello\" packet for some reason. \n2) The client is failing to accept the push \"hello\" response for some reason.\n3) Something in between the WebPush.jsm calls outlined in #20 and the actual websocket network dispatch is intercepting or preventing the data. \nThe push server is deeply, deeply indifferent about any additional header values. It ignores anything that is unknown or unexpected.\nAs noted, setting the `dom.security.secFetch.enabled` to false allows the socket data to be exchanged and the push service to resume. (I'll note that even in the case of a success, the browser console does not display the exchanged information, so I can only verify off of expected DOM event behaviors.) Therefore, I strongly assert that this is not a server based issue, and urge examining anything that may interfere with either websocket data transmission or reception, particularly around elements related to the `dom.security.secFetch` component.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The attached crash information was detected while running CI tests with ThreadSanitizer on mozilla-central revision 66531295716a.\nThis race looks very similar to bug 1533521 with the exception that the writing code here is in the Rust function `set_len` instead of the `SetLength` C++ counterpart. Not sure if we can apply the same or a similar fix like we did in bug 1533521. Fixing this race is highly desirable because it is by far one of the most frequent races we currently have in tests (over 500 times in Mochitests alone).\n### General information about TSan reports\n#### Why fix races?\nData races are undefined behavior and can cause crashes as well as correctness issues. Compiler optimizations can cause racy code to have unpredictable and hard-to-reproduce behavior.\n#### Rating\nIf you think this race can cause crashes or correctness issues, it would be great to rate the bug appropriately as P1/P2 and/or indicating this in the bug. This makes it a lot easier for us to assess the actual impact that these reports make and if they are helpful to you.\n#### False Positives / Benign Races\nTypically, races reported by TSan are not false positives [1], but it is possible that the race is benign. Even in this case it would be nice to come up with a fix if it is easily doable and does not regress performance. Every race that we cannot fix will have to remain on the suppression list and slows down the overall TSan performance. Also note that seemingly benign races can possibly be harmful (also depending on the compiler, optimizations and the architecture) [2][3].\n[1] One major exception is the involvement of uninstrumented code from third-party libraries.\n[2] http://software.intel.com/en-us/blogs/2013/01/06/benign-data-races-what-could-possibly-go-wrong\n[3] How to miscompile programs with \"benign\" data races: https://www.usenix.org/legacy/events/hotpar11/tech/final_files/Boehm.pdf\n#### Suppressing unfixable races\nIf the bug cannot be fixed, then a runtime suppression needs to be added in `mozglue/build/TsanOptions.cpp`. The suppressions match on the full stack, so it should be picked such that it is unique to this particular race. The bug number of this bug should also be included so we have some documentation on why this suppression was added.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 666171\nPart 3: Add send Location Status Event in RIL. v11\nrebase\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Does FF 10.0.2 ESR contain https://hg.mozilla.org/releases/mozilla-esr10/rev/771afd1e6247?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks Bill!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 736858\nFix IPC for fixed layer margins\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8594783\nMozReview Request: bz://1096093/mconley\n/r/7307 - Bug 1096093 - Add infrastructure for LookAndFeel metric caching, and allowing the parent process to send down cache to content process. r=?\n/r/7327 - Bug 1096093 - Send ThemeRefresh message from parent down to content process. r=?\n/r/7329 - Bug 1096093 - Have Cocoa widget backend cache overlay scrollbar metrics. r=mstange.\nPull down these commits:\nhg pull -r f5ff3638d841e7e5297538acd0e1bd6866dec6ae https://reviewboard-hg.mozilla.org/gecko/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        If we have been warning devs of this change via a console warning for at least three releases, let's go ahead and land this change.\nIf not, please file a blocking bug to land a console warning and then we can land this change after three additional releases.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        1.4+ this blocks a blocker\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 456428\nUse GetDC where we can\nFor opaque SYSTEMMEM textures we can call the GetDC method on the primary surface to draw directly to a DC. We should use this for layers where mIsOpaqueContent is true.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hmm.  I guess the UI can't do that because we're using a generic dialog?\nThe big issue is this: what width to truncate at?  I don't see a way for this code to tell....\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        There were already 24K assertions?  I'm having trouble viewing the log, can you cut+paste some of them for me?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/de9c2a2f67eb\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        ttaubert\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11701724&tree=Firefox\nRev3 Fedora 12 mozilla-central pgo test mochitests-1/5 on 2012-05-12 04:03:55\nslave: talos-r3-fed-032\n58660 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        ... \nPotentially yes, I'm not sure if extensions couldn't just read any file they wanted anyway.\nMaybe that's not true now that (I think) web extensions will be running in their own process.\nMaybe this could also just be done for IsDevelopmentBuild().\nPerhaps that wouldn't work if you were running tests on a packaged build.\nAlex - what do you think? (I think you hit these problems initially)\nIdeally, of course we should fix the tests that rely on opening files in the content process, but I'm not sure how much work that is.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        See comment 4\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 732985\nKnow Your Rights notification box has moved to be shown as default snippet on first startup\nupdated commit message, carrying over r+\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n         0:03.87 Warning: -Wreorder in /Users/jyavenard/Work/Mozilla/mozilla-central/media/libstagefright/binding/include/mp4_demuxer/SinfParser.h: field 'mDefaultEncryptionType' will be initialized after field 'mDefaultIVSize'\n 0:03.87 /Users/jyavenard/Work/Mozilla/mozilla-central/media/libstagefright/binding/include/mp4_demuxer/SinfParser.h:20:7: warning: field 'mDefaultEncryptionType' will be initialized after field 'mDefaultIVSize' [-Wreorder]\n 0:03.87     : mDefaultEncryptionType()\n 0:03.87       ^\n 0:03.87 1 warning generated.\nSomething weird on my box:\n1:05.58 ../../../dist/include/mp4_demuxer/MoofParser.h:8:10: fatal error: 'mp4_demuxer/Atom.h' file not found\n 1:05.58 #include \"mp4_demuxer/Atom.h\"\njyapro:mozilla-central jyavenard$ ls -l media/libstagefright/binding/include/mp4_demuxer/Atom*\n-rw-r--r--+ 1 jyavenard  staff  425 20 Jan 17:39 media/libstagefright/binding/include/mp4_demuxer/Atom.h\n-rw-r--r--+ 1 jyavenard  staff  833 20 Jan 17:39 media/libstagefright/binding/include/mp4_demuxer/AtomType.h\nit's there!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by htwyford@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/e59677a62de7\nClicking empty parts of the toolbar should collapse the megabar. r=dao\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8877980\n(part 1) - Remove TickSample::mTimeStamp\nWe can just TimeStamp::Now() directly when needed.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I meant:\n    if (box.IsType(\"sinf\")) {\n       ParseSinf(box);\n       if (mSinf.IsValid()) {\n         break;\n       }\nthough ParseSinf should return a boolean that it has succeeded.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8527295\n0001-Bug-1073339-Enable-autocomplete-tests-for-Linux-and-.patch\nThis is based off of the patches from bug 1075450.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 895181 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks - I will incorporate that change in the next iteration of the devtool when we are going to extend the functionality of it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        OK, the reason we're doing that is to ensure that the ancestors' overflow areas are updated. But during reflow that's going to happen anyway. So we need to suppress that additional reflow request when the frame affected is currently being reflowed. I think you can just check FRAME_IN_REFLOW somewhere.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I've been looking at this. The getters return visual viewport (nsIPresShell::GetVisualViewportSize) only when the visual viewport is overridden, and return the layout viewport (nsPresContext::GetVisibleArea) otherwise. Setters behave similarly. That means that most of the time we're using the layout viewport. Visual viewport override occurs when Responsive Design Mode is enabled.\nI'd like to fix this right away because it is a blocker for Responsive Design Mode bugs like Bug 1504659. Given that RDM already has bugs regarding the visual viewport, is there a problem with making the change now to make innerWidth and innerHeight ALWAYS use the layout viewport?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8892265\ntest_duration.html\nA simplified version of the test case.\nFirefox output:\ngot durationchange, duration=Infinity, currentTime=0\ngot loadedmetadata, duration=Infinity, currentTime=0\ngot ended, duration=Infinity, currentTime=Infinity\nChrome output:\ngot durationchange, duration=Infinity, currentTime=0\ngot loadedmetadata, duration=Infinity, currentTime=0\ngot durationchange, duration=6.558, currentTime=3.981834\ngot ended, duration=6.558, currentTime=6.558\nThere are several issues revealed by this bug:\n1. We have MediaDecoder::mInfiniteStream==true to present an infinite stream. However, mDuration==inf can also present an infinite stream. This causes inconsistency and fails to mark the stream as finite when playback reaches the end.\n2. http://searchfox.org/mozilla-central/rev/bbc1c59e460a27b20929b56489e2e55438de81fa/dom/media/MediaDecoderStateMachine.cpp#2009-2012\nMDSM adjust playback position to max(clockTime, mMaster->Duration()) when playback reaches the end. Since mMaster->Duration() returns inf in this case, we end up having mediaElement.currentTime==inf.\n3. http://searchfox.org/mozilla-central/rev/bbc1c59e460a27b20929b56489e2e55438de81fa/dom/media/MediaDecoderStateMachine.cpp#2252\nIt is bad to modify mDuration directly which should the result of RecomputeDuration(). Changing mDuration directly will break data consistency because any changes to mExplicitDuration or mObservedDuration will overwrite mDuration.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9275986\nBug 1768744 - Add aria-current to active theme button. r=dao\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/ed08c1246e77\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This just started failing in the last day or two on both Windows and Linux so far.\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11532937&tree=Firefox\nRev3 Fedora 12x64 mozilla-central pgo test mochitests-1/5 on 2012-05-07 07:04:01 PDT for push 448f554f6acb\n58629 INFO TEST-START | /tests/content/events/test/test_bug607464.html\n58630 INFO TEST-INFO | /tests/content/events/test/test_bug607464.html | must wait for load\n58631 INFO TEST-INFO | /tests/content/events/test/test_bug607464.html | must wait for focus\n58632 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n58633 INFO TEST-END | /tests/content/events/test/test_bug607464.html | finished in 233ms\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8643091\nPart 3 - Make getting a MediaStreamGraph for a channel more explicit. r=\nHopefully this wil also prevent getting the wrong graph.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 476815\nrelax WebGL feature test\nok, let's play safe and only do this for WebGl.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Mats,\nI'm not sure whether you're the correct person to review this patch, I set the reviewer to you because I found multiple comments from you in `layout/generic` code.\nCould you assign this bug to me and review my patch? In case I got the reviewer wrong, could you forward the patch to a correct reviewer?\nThanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hmmm, given that we're now using harfbuzz in most cases (OSX being the notable exception), I'm sort of surprised that this is happening so much. I think removing the warning is fine but we should probably investigate why this happens so much as it may indicate other bugs.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 482286\nFix character class range with builtin character class on RHS.\n[jwalden@find-waldo-now src]$ dbg/js\njs> /[C-\\s]/.exec(\"-\")\ninvalid range in character class\njs> /[\\s-C]/.exec(\"-\")\n[\"-\"]\nTest needs to make sure to address the reversed cases, too.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I don't think collapsing with the top margin could ever be eliminated, due to compatibility issues, so I'll leave it as-is.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        bug 565594 opened. Thansk Ehsan :)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        David, you have any interest in fixing this perhaps?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1634592 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        needs rebasing for beta\napplying 1319370.patch\npatching file dom/html/HTMLInputElement.cpp\nHunk #1 FAILED at 479\n1 out of 3 hunks FAILED -- saving rejects to file dom/html/HTMLInputElement.cpp.rej\npatch failed, unable to continue (try -v)\npatch failed, rejects left in working directory\nerrors during apply, please fix and qrefresh 1319370.patch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9157259\nBug 1644719  -  Add a new API that tells us if SUMO is unreachable. r=prathiksha\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This bug has probably existed before, though. We just didn't need step (4) because there was no cache in between.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This blocks a blocker.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        That is a neat set of test pages, thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/2359/#review1753\nSo I was worried about binary extensions, but the good news is that testing an int64_t for equality against UINT64_MAX is the same as testing it for equality against -1, both in terms of machine code and C/C++ integer promotion behavior.  So there should be pretty minimal fallout, if any.\n::: dom/base/nsXMLHttpRequest.cpp\n(Diff revision 2)\nI would prefer we had an actual constant for MAX_SAFE_JS_INTEGER or JS_MAX_SAFE_INTEGER or whatever somewhere, either in jsapi headers (probably preferred) or at least somewhere in mfbt or something.\nThen we could also static_assert things like the value being < INT64_MAX.\n::: netwerk/base/public/nsITransport.idl\n(Diff revision 2)\nThe \"tbd\" comment here should go away, right?\n::: netwerk/protocol/file/nsFileChannel.cpp\n(Diff revision 2)\nYeah, this is why I'd prefer a named constant.\n::: netwerk/protocol/ftp/nsFtpConnectionThread.cpp\n(Diff revision 2)\nNamed constant.\n::: netwerk/protocol/http/nsHttpTransaction.cpp\n(Diff revision 2)\nNamed constant.\nr=me with the nits fixed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Justin,\nThinker and I proposed a method.\nWe will implement a class, say JSDOMEventTargetHelper.\nJSDOMEventTargetHelper inherits from nsDOMEventTargetHelper and\nnsIJSEventTargetHelper.\nJSDOMEventTargetHelper is another eventtarget for initializing \nand setting helpers from JS code.\nnsIDOMFMRadio provides nsIDOMEventTarget interface.  But, its\nQueryInterface returns an JSDOMEventTargetHelper.\nSince almost all the functions we need are done in\nnsDOMEventTargetHelper, we do not need much effort to implement\nJSDOMEventTargetHelper.\nSo we have \n- JSDOMEventTargetHelper\n - implements nsIJSDOMEventTargetHelper\n - inherit nsDOMEventTargetHelper\n- nsIJSDOMEventTargetHelper\n - provide an interface for JS component code for setting helpers\nFor JS components who want to implement nsIDOMEventTarget, it \ncreates an instance of JSDOMEventTargetHelper returned by QueryInterface for nsIDOMEventTarget interface.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8641210\nPatch v2\nr+, naturally assuming tryserver results look good\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Videos are supposed to pause when the playbackRate is set to 0. However they just play muted.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Replicating this in a local build generates this console output:\n```\nMozilla has caught an Obj-C exception [NSInvalidArgumentException: Calling -setString:forType: on NSPasteboard or NSPasteboardItem with object of type NSConcreteMutableData instead of NSString.]\n```\nwhich seems to indicate that the pasteboard will only accept `NSString` for the `\"public.file-url\"` key.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by emilio@crisal.io:\nhttps://hg.mozilla.org/integration/autoland/rev/752786e0dd01\nfollowup: Add a missing check. r=me\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Huh - still orange. It's complaining about the other omni.ja whitelist entry also being unused... maybe I misinterpreted the first log, and you can just wipe out those whitelist entries entirely?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8445772\nscreenshot after :hover over buttons\nButton's background gets green (and stays green) onmouseover.\nThe second button is opaque, so you see a green border only.\nThis is on XP and of course it differs depending on OS specific button styling.\nExpected: Display native buttons (no green background-color or border) after hovering over it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/432033434b3a\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hah, no problem! I did take a look (before my dinner ;)), and I was way off base. I'll just look around for another one.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have some idea how whitelisting suffixes could look like:\nPref could be something like `browser.fixup.suffixwhitelist.yoursuffix`, so all searches which end with `.yoursuffix` would be considered as URLs. Additionally, if pref is set to, for example `browser.fixup.suffixwhitelist.local.domain`, searches which end with `.local.domain` would be considered as URLs, but searches ending on  just `.domain` won't be.\nFor extensions API for whitelisting TLDs, there are more approaches:\n1. If an extension requires host permission (in the manifest) for specific domain/URL, automatically treat that URL as whitelisted domain/suffix. For example, if extension requires `*://*.bit/*`, automatically treat all searches ending with `.bit` as whitelisted suffixes, and if extension requires `*://*.local.domain`, treat searches ending with `.local.domain` as URLs. The benefit is that it doesn't require changing most of the extensions. However, the problem with this is that it is not really configurable. But much configuration is probably not really needed here, because if extension wants to access websites on some suffix, we can assume that that suffix contains websites.\n2. Providing another manifest permission similar to host permission, which is only used to tell Firefox that specific suffix should be whitelisted. The advantage is that it is more configurable. Disadvantages are that the extension would need to be updated to start using it, and would probably result in duplicated configuration/permissions (you would need to set both normal host permission and this new \"suffix permission\" in manifest). And in most, if not all, cases, separate configuration probably won't be needed.\n3. Exposing API to JavaScript in some way. The advantage is that it is dynamic. Disadvantage is also that is dynamic, which means that is is probably harder to handle it, and can also cause security and usability problems. And probably also results in duplicated configuration.\nOf those three approaches, I most like first, because it doesn't result in too much configuration and can work with existing extensions.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9037674\npart 1 - exposed PartitionedOrDeny differently\nFinally, a green result. This patch exposed rejectedReason in StorageAllowedForNewWindow. This will be mainly used in the next patches.\nIt also moves the privacy.restrict3rdpartystorage.partitionedHosts check in the localStorage code.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 692886\nSet remaining time to 0 if battery level is 1 [v4]\nI made a similar assumption about the remaining time in my first attempt to fix the problem.\nFor v4 of the patch I fixed the invalid test of the scanf return value and the test for successfully reading a value from the sysfs file.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        And definitely a followup on memory-reporting those hashtables in the loader, please!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/8315a152ccb1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9037675\npart 2 - SessionStorage\nsessionstorage works when rejectedReason is STATE_COOKIES_BLOCKED_FOREIGN and when StorageAccess is ePartitionedOrDeny\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 438648\nPatch v1.0\nI'm hoping to get a bit different patch.\nPing me on IRC if you have any questions.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        ni=emilio in case he's up for taking a look, since he just landed a fix for related bug 1686606.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Kindly disregard comment 19. My clarification wasn't going to be correct anyway. (If item 2 isn't clear, wait for the patch -- there's a test.)\nI found another bug.\n7. A method is ostensibly an ordinary data property--but getting its value the first time will trigger a watchpoint on that property.\n  var obj = {m: function () {}};\n  obj.watch(\"m\", function () { throw 'FAIL'; });\n  var f = obj.m;  // FAIL\nPatch coming!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/21aac86d6658\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9045942\nPatch.\nReview of attachment 9045942:\n-----------------------------------------------------------------\nOh, I hadn't thought of that approach. I was thinking of allowing Rooted<Variant<...>> to contain untraceable types. But come to think of it, your approach seems good -- it keeps the exception localized to types involved.\nSo I'm going to mark this feedback+ from me because I think it's a good approach, but I want to check with jonco for which one he thinks is better. I'll attach a sample patch with the approach I was originally thinking of.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11916441&tree=Mozilla-Inbound\nRev3 WINNT 5.1 mozilla-inbound pgo test mochitests-1/5 on 2012-05-21 06:58:53\nslave: talos-r3-xp-021\n60674 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by nsilva@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/212ff2476899\nReport more specific error messages when buffer.mapAsync fails. r=jgilbert\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8535551\n0001-Bug-1073339-Enable-autocomplete-tests-for-Linux-and-.patch, v3\nReview of attachment 8535551:\n-----------------------------------------------------------------\n::: browser/base/content/test/general/browser.ini\n@@ -110,5 @@\nLook like browser_action_keyword.js should get updated too.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        No problem, I should have expressed myself more clearly. (I've been working on updating these tests, and I'd rather get closer to my expected end-result than farther away from it :).)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 725795\nPatch (v1)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        55 failures in 1008 pushes (0.055 failures/push) were associated with this bug in the last 7 days. \nThis is the #44 most frequent failure this week.  \n** This failure happened more than 30 times this week! Resolving this bug is a high priority. **\n** Try to resolve this bug as soon as possible. If unresolved for 2 weeks, the affected test(s) may be disabled. ** \nRepository breakdown:\n* mozilla-inbound: 52\n* mozilla-central: 3\nPlatform breakdown:\n* windows10-64: 29\n* windows8-64: 21\n* windows7-32: 3\n* osx-10-10: 2\nFor more details, see:\nhttps://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1382702&startday=2017-07-24&endday=2017-07-30&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bug 1072320 ended up being quite a rabbithole of inproductivity. We have a set of tests that aren't reliable on Linux (and so have been disabled there):\nbrowser_action_keyword.js\nbrowser_action_searchengine.js\nbrowser_action_searchengine_alias.js\nAFAICT, this is because when the test tries to interact with the autocomplete result, nothing happens. My assumption is that this is due to focus issues around popups on Linux, which we've had troubles with in the past.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yep.\nI believe the only scenario where we process a meta viewport tag but don't set a visual viewport size, is fixed by [this patch](https://phabricator.services.mozilla.com/D13173). So, with that patch in place, there should be no problem.\nThat surprises me. The visual viewport size is set [here](https://searchfox.org/mozilla-central/rev/76fe4bb385348d3f45bbebcf69ba8c7283dfcec7/layout/base/MobileViewportManager.cpp#369) based on `MobileViewportManager::GetCompositionSize()`, which subtracts the scrollbar dimensions [here](https://searchfox.org/mozilla-central/rev/76fe4bb385348d3f45bbebcf69ba8c7283dfcec7/layout/base/MobileViewportManager.cpp#357).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Setting qe-verify- based on JW Wang's assessment on manual testing needs (see Comment 11) and the fact that this fix has automated coverage.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This is used to know if the decoder was previously paused should the rate be 0. I guess the logic could be changed and re-use mPlaybackRate instead. But not being the author of that code, I always tend to keep the change to a minimal.\nhaving mPausedForPlaybackRateNull was also required because mInitialPlaybackRate isn't modified when MediaDecoder::SetPlaybackRate is called with a value of 0.\nso it falls back to setting mInitialPlaybackRate to the proper value.\nmInitialPlaybackRate is set to 1.0 in the constructor.\nAs such, the following call to MediaDecoder::SetStateMachineParameters() will now call SetPlaybackRate with a value of 1.0. Meaning the following call to play, will start playback with a playrate of 1.0.\nThe whole concept that playback rate has been set is now lost.\nYou're right, it would cause an assertion (didn't notice it as the state machine isn't defined yet in that particular example).\nI do believe that a playbackrate shouldn't be handled any differently than a non-zero playback rate.\nit does, as Play() checks the value of mPausedForPlaybackRateNull. If you didn't set to false before the call to play, then playback wouldn't restart\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out for causing failures on browser_inplace-editor_maxwidth.js.\nBackout link: https://hg.mozilla.org/integration/autoland/rev/31462a8e07406103e8d97b19faf9af3bd63530b6\nPush with failures: https://treeherder.mozilla.org/jobs?repo=autoland&selectedTaskRun=E9eyDlOnQi6c4aq97GSfGw.0&revision=64682b454ac62a9ad7bccedd3efce40e1dab29ae&searchStr=dt\nFailure log: https://treeherder.mozilla.org/logviewer?job_id=327674911&repo=autoland&lineNumber=4367\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Agreed.  Between Csmith+Emscripten and decoder's mutation-based fuzzer on Emscripten output, it seems like we'll have good coverage of validating and non-validating inputs.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8403724\n983489.patch\nReview of attachment 8403724:\n-----------------------------------------------------------------\nIt's not a problem with your patch but I am a bit worried about CompositorOGL making virtual method calls in its destructor. We should mark it MOZ_FINAL with a comment saying that if we want to add a subclass of CompositorOGL (which we might do at some point to have platform specific opengl optimization), then we should remove the error-prone virtual calls in the destructor. I'll file a followup bug.\nAlso, we should be able to call GLContext::MakeCurrent without crashing even after the destruction of the underlying context (it should return false in that case). Some code already expects that to be the case.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8889544\nbug_1382702_v1.patch\nReview of attachment 8889544:\n-----------------------------------------------------------------\ndont' you have to reset the pref at the end of the test, as these are run in suites? (with clearUserPref or something..)\nalso - this behavior should probly block TFO overall, right?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        User Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0\nSteps to reproduce:\n74.0b3, adding one flexible spacebar to the left of my bookmark toolbar doesn't work, it's there, but when closing customization menu, the bookmark toolbar is still stuck all the way to the left.\nActual results:\nwhen closing customization menu, the bookmark toolbar is still stuck all the way to the left.\nExpected results:\nShould behave just like Firefox 73 behaved/behaves.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8475549\nFix to existing mochitest to make it fail properly\nReview of attachment 8475549:\n-----------------------------------------------------------------\n::: content/media/test/test_playback_rate.html\n@@ +56,5 @@\nThis actually reset playbackRate to defaultPlaybackRate, per spec, so it's wrong.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        jwir3\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22821842&tree=Try\nWINNT 6.2 try debug test reftest on 2013-05-10 08:00:59\nslave: t-w864-ix-010\n08:11:06     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9054927\nBug 1540794 - Remove nsIID.h.\nThis file only includes nsID.h, and is unused.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/47143d875634\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8893196\nBug 1385699. P5 - fix AudioEndTime() and VideoEndTime().\nAudioEndTime() returns 0 if the media sink is not started. This is wrong\nbecause the audio/video end time should be at least the current position\nto ensure playback won't go backwards.\nhttp://searchfox.org/mozilla-central/rev/bbc1c59e460a27b20929b56489e2e55438de81fa/dom/media/MediaDecoderStateMachine.cpp#2009-2012\nThis fix the case where we wrongly set playback position to 0 after seeking\nto the end of resource.\nReview commit: https://reviewboard.mozilla.org/r/164230/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/164230/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 622105\npatch\nIRC discussion -> sorry for self contradicting myself (see comment 26) on whether we want dynamic switching. Will finish the review asap.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Marking firefox86 as fixed based on [comment 4](https://bugzilla.mozilla.org/show_bug.cgi?id=1685379#c4).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/a381a84d7af2\nhttps://hg.mozilla.org/mozilla-central/rev/732f04efe8f5\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It looks like this bug was almost fixed. What's left to do on it?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Trying again. I added an include to work around the (linux32 debug only!) build failure in Sinfparser.cpp.\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=ed269dd0a199\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n         The patch is incomplete, the feature to toggle speaker/headset is not be implemented, it is blocked by bug 749053.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 665244\nPart 3: Add send Location Status Event in RIL. v10\nAddressed to philikon's comment in comment 37\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Reopened for the reason addressed in bug 1357046.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        edmorley\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22493573&tree=Mozilla-Inbound\nRev4 MacOSX Snow Leopard 10.6 mozilla-inbound debug test reftest on 2013-05-02 01:14:21\nslave: talos-r4-snow-079\n01:25:35     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///Users/cltbld/talos-slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        User Agent: Mozilla/5.0 (X11; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0\nBuild ID: 20160402102110\nSteps to reproduce:\nThere is an issue with the scrollbars in gtk3 builds. Under adwaita, the gtk3 builtin default theme, the scrollbars are not colored blue when selected (only when hovered). The behavior in native gtk3 apps is blue colored selected scrollbars.\nThis also works in the gtk2 build so is a regression.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8552063\n1118597.patch v3\nRe-added missing stuff, whipped hg into line, addressed comments.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by jnicol@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/ad0d465dcf91\nMake EGL Surface non-current before destroying. r=gfx-reviewers,aosmond\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Enabling OpenGL plane splitting caused regressions for certain sites:\nhttp://www.simulationcurriculum.com\nhttps://github.com/webcompat/web-bugs/issues/4284\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8996593\nUpdate test262 exclusions for BigInt.\nReview of attachment 8996593:\n-----------------------------------------------------------------\nThanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8909869\nBug 1401249 - Fix getStringPref usage in clicktoplay-rollout.\nFix for click to play system addon, so that new users will get this option. \nThis should be in the 56 RC2 later on this week.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Justin, about the frequency rounding, i tried on the Otoro device, there are three spacing type: 50KHz, 100KHz and 200KHz, whatever spacing type i set, the result is the same:\n  - if set the frequency with 88.05, the frequency will be 88.05\n  - if set the frequency with 88.06, the frequency will be rounded to 88.0\nSo it's for sure the frequency will be rounded by the FM HW, there may be problem with spacing type setting though.\nIMO, the frequency should be rounded, depending on the band settings, for example:\n   - lower: 87.5, upper: 108, interval: 0.2\n     * set with 87.6, the frequency will be 87.5\n   - lower: 87.5, upper: 108, interval: 0.1\n     * set with 88.05, the frequency will be 88\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks for the tips! Will do. It was my understanding that checkin rights were given after some few contributions. Maybe the time has come :-)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks!\nYeah, that's what we have a 3-month testing period for. :)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8496635\npart 1 - Temporarily expose some gfxContext fill/stroke API to help with porting to Moz2D\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ah, I don't know why but I seem to remember that I once wrote a patch to fix this.  I thought that I had gotten reviews and landed it but now I can't even find a bug, which tells me that I must have forgotten to even file the bug. :(\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9173116\nBug 1661727 - Messaging System action to allow configuration of the new tab page\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1454133 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9153591\nBug 1640135 - P1: add new attribute for dFPI;\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can't figure out the fix for this. The test conflates layout and visual viewports starting at `const layoutViewportHeight = window.visualViewport.height;` and though I could make the test pass, I don't know how the various comparisons it makes (scrollRect, document.clientBoundingRect) should be handled. I'll add a part to the patch that disables this test.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think this really needs to block the aurora uplift\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1155060 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I am really sorry about that. To emphasize, the pref [dom.security.secFetch.enabled](https://searchfox.org/mozilla-central/rev/7fba7adfcd695343236de0c12e8d384c9b7cd237/modules/libpref/init/StaticPrefList.yaml#2384) is currently only enabled in Nightly. If needed we could even flip it to false in Nightly. We are not planning to let it ride the trains in the super near future. Let me know!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        To test:\n1. Start a new profile\nExpected: Should look no different than what's in nightly, and should not have any visual regressions.\nExpected: Try different screen sizes, should also not regress anything.\nExpected: Dark mode or other themes should not look any different.\n1. Start a new profile.\n2. Go to about:config\n3. Flip browser.newtabpage.activity-stream.discoverystream.compactLayout.enabled to true\n4. Open a new tab\nExpected: Cards should now be more compact.\nExpected: Should have 4 cards per row.\nExpected: read time should show a number in minutes, it could also fallback to nothing, which is ok but rare. This is also the part that's translated with Fluent.\nExpected: Spocs should have their sponsored by label under the thumbnail now.\nExpected: Different screen sizes should look reasonable.\nExpected: Dark mode or other themes should look reasonable.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The leaks on try are due to an unrelated commit that was backed out of fx-team shortly after I refreshed my local copy.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9036319\npart 4 - tests\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9289618\nBug 1769254 - Add TextureHost type check for using update in AsyncImagePipelineManager::UpdateImageKeys()\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        That seems like a good thing to fix, but I don't plan on doing it in this bug.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Given gal's analysis and several agreements that the code was a mess, is [sg:critical?] more accurate a severity rating?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I believe Huffington Post is also affected by this bug. The \"Most Popular\" column is rendered on top of the logo, navigaton bar and the top story, making it impossible to click on some sections on the site.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Mike, Benjamin r+ the previous patch. The current one adds the extra logging you asked for. Is it OK?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm against the mass uplift.  Those patches are touching also a different code and there can easily be dependencies we are not aware of and totally break the stable b2g 2.0 branch.\nThere are two issue when this bug is left unfixed:\n- when disk cache size is set to 0, there are some problems with showing favicons, images, sometimes pages (1036939 1064408 1067103); this is a non-standard setting that some people from some reason used to set to disable the cache\n- null crash in nsHttpChannel::OnDoneReadingPartialCacheEntry\nThe first one can be left as a known issue because of the non-standard setting.\nThe second one can be worked around by one of the options:\n1. we can null check and fail on null entry (can lead to a failed response and not sure of all other consequences)\n2. we can disobey a single entry limit when doing a partial request (safe and easy to do)\nI'll create a branch patch with the second solution (one line).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        So after a long investigation, I've found some interesting information. This appears to be a bug in cairo clipping, it appears that the clip at nsCSSRendering.cpp:1526 fails to be applied properly if there's already a clip present for the small rectangle surrounding the button (which would be disjoint with this clip) (i.e. if I remove that clip the button always gets a green background, if I leave it in it only has a green background when doing a partial invalidation of the button). I know we've had clipping bugs with Cairo in the past, Jeff, does this sort of issue ring a bell for you?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/1972ca2531d9\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        With the current plan to harden the security of Firefox, we want to disallow internal privileged pages to use inline JavaScript. Since their amount is fairly limited, we start this by rewriting them bit by bit.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We need native theming of <input type=range> on Windows.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8665416\nPatch v2\nTest-only change; ok to uplift to aurora.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I hope that you have tested this with FF4beta and not only with 3.6.x ?\nPlease attach a testcase if you get this with FF4.6beta6 or later\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Definitely, I haven't connected to an external display since leaving home on Saturday and I've restarted Firefox multiple times since then.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        There's a r+ patch which didn't land and no activity in this bug for 2 weeks.\n:bryce, could you have a look please?\nFor more information, please visit [auto_nag documentation](https://wiki.mozilla.org/Release_Management/autonag#not_landed.py).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It guarantees that the mEditor is nsHTMLEditor or its sub class. If I remove this, we need to QI in nsHTMLEditorEventListener instead of cast by GetHTMLEditor.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8475549\nFix to existing mochitest to make it fail properly\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Btw you're right, mesa-users sounds like the better mailing list for that.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Marcos, I'm so sorry for the delay in getting back to you! I filed bug 1497427 to capture the work to update the Push API; bug 1497429, bug 1497430, and bug 1497431 are for the IDL bits. Unfortunately, I don't have cycles to work on them. :-(\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1133707 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can definitely still repro this. I looked into it a bit and it seems like layerization is going crazy. My guess is that we end up putting every message into its own layer. Matt/Jamie can one of you look?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 554574 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/797a60d83008\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8408087\n983489.patch v2\nReview of attachment 8408087:\n-----------------------------------------------------------------\nThanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        If we use async notifications (as we want to in bug 1317562) during painting, we will not be able to determine if the decoding we do during painting resulted in a complete image. So we add a way to tell so we can still draw the image in the current paint.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        If you do want to rule out the extra memory usage due to GL acceleration, just set:\npref(\"gfx.canvas.azure.accelerated\", false);\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The failure happens on [this line](https://searchfox.org/mozilla-central/rev/652014ca1183c56bc5f04daf01af180d4e50a91c/dom/base/test/file_viewport_metrics_on_landscape_content.html#44), we can just replace `is` with `todo_is` for now.\nThe content in the test case has `minimum-scale=0.5` and a `width: 200%` element, but the root element height is `height: 100%`, so the content is shrunk to fit the 200% width to the screen, but nsPresContext.mVisibleArea (i.e. height:100%)is unchanged, so once we return the nsPresContext.mVisibleArea for window.innnerHeight, it's no longer correct, it should be size of the expanded size by the minimum-scale.  And of course Chrome does returns the expanded size for window.innerHeight. \nBrad, would you mind filing a bug for this issue and leave a comment in the `todo_is`?\nOops, a collision happened.  I'd prefer to use todo_is instead of disabling whole test.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We have detected a build metrics regression from push:\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?changeset=79ab9d3259944b808a88f0c6783504e269bcff2c\nAs author of one of the patches included in that push, we need your help to address this regression.\nRegressions:\n  >100KBytes  installer size windows2012-64 pgo      60,131,949.00 -> 60,304,238.58\n  >100KBytes  installer size osx-cross opt           66,436,988.83 -> 66,610,752.67\n  >100KBytes  installer size windows2012-32 pgo      55,905,641.67 -> 56,047,577.67\nYou can find links to graphs and comparison views for each of the above tests at: https://treeherder.mozilla.org/perf.html#/alerts?id=13279\nOn the page above you can see an alert for each affected platform as well as a link to a graph showing the history of scores for this test. There is also a link to a treeherder page showing the jobs in a pushlog format.\nTo learn more about the regressing test(s), please see: https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Automated_Performance_Testing_and_Sheriffing/Build_Metrics\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8936562\nBug 1424993 - Fix PresentationTransport to correctly throw NS_ERROR_NOT_AVAILABLE.\nReview commit: https://reviewboard.mozilla.org/r/207308/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/207308/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backout by cbook@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c928f0602185\nBacked out changeset 2b92af4575ae \nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c51a2eaa0078\nBacked out changeset 59567c6c1e71 for landing with wrong bugnumber\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        edmorley\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11754689&tree=Mozilla-Inbound\nRev3 WINNT 5.1 mozilla-inbound pgo test mochitests-1/5 on 2012-05-15 00:47:00\nslave: talos-r3-xp-065\n60226 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This patch hasn't made it yet to beta. As this would break string freeze on Aurora and is something normal users won't see, I recommend to wontfix it on that branch. NI flod for confirmation.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8893193\nBug 1385699. P2 - rewrite the code of calculating duration in MDSM.\nhttps://reviewboard.mozilla.org/r/164224/#review170064\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8516772\ntabstoolbar-overflowing-tabs.patch\nstealing again\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8877982\n(part 3) - Overhaul TickSample and things around it\nReview of attachment 8877982:\n-----------------------------------------------------------------\nThis is a great improvement.\n::: tools/profiler/core/platform.cpp\n@@ +1730,5 @@\nCould we pass the Registers object to the aDoSample func, instead of returning them as an outparam which the caller then captures into its lambda?\n@@ +2830,4 @@\nCan we have a follow-up to replace all instances of \"new ProfileBuffer\" with MakeUnique<ProfileBuffer>?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        There is a potential for foreign (unknown) code be called while AutoRedirectVetoNotifier is on stack.  So it's actually not possible to say whether it can happen to be multiple times on the stack or not.  I think we can easily use mRedirectChannel of the channel to indicate whether we have called OnRedirectResult or not.  ~AutoRedirectVetoNotifier drops it from the channel (I've added an assert to check it's always non-null there and xpcshell tests that cover all codepaths for this class).  But a flag might be more reliable and also we'd have more control over the behavior...  \nQuestion is, what happens when the nested notifier's dtor is called with FAILED and the other is called with SUCCEEDED.  Which one is right?  But I think this is a broader problem, since in this case the code would be seriously broken.  More arg for a flag...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Depends, but here, we're talking about software compositing, Firefox uses Cairo for that, which wants BGRA. We actually pay for the conversion cost between RGBA and BGRA. So if we have an interface somewhere that wants RGBA, that means we're paying the conversion twice. Very interesting stuff, but please move it to a separate bug to keep the conversation tractable.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have just upgraded from 44.0.2 to 45. And I don't have search engine related extensions neither. No extra steps.\nMy default search provider is DuckDuckGo that remains as-is. The order of other search providers, Google was first in my case, was lost, and some of my disabled search providers, Bing and Chanbers (UK), were enabled once upgraded.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8407744\nbug-948882.patch\nReview of attachment 8407744:\n-----------------------------------------------------------------\nThis looks good, aside from the small nits below :)\n::: toolkit/crashreporter/content/crashes.xhtml\n@@ +13,5 @@\nNit: Change the extra space here at the end to a />\n(instead of `...crashes.css\" >`, have `...crashes.css\"/>`)\n::: toolkit/crashreporter/jar.mn\n@@ +4,5 @@\nNit: There's an extra space, try to align the parentheses.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Please rebase on top of bug 851748\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'd still like to use the <script> method of running the script in the webpage, it will ensure that we're using the webpage's privileges to run it safely.\nHave you tried using a resource URI instead of a chrome one. Both should work from the content process in theory but maybe because we're loading from chrome we're getting the wrong privileges.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The BOM should be treated as whitespace by regexps, indeed. Thanks for reporting.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8909869\nBug 1401249 - Fix getStringPref usage in clicktoplay-rollout.\ngetStringPref(.., undefined) actually returns null instead of undefined.\nReview commit: https://reviewboard.mozilla.org/r/181366/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/181366/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh, I see. That sounds like a bug in the framework. It should actually delete those pictures and only use the picture that was added in the test.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        OK, I guess I just don't understand what the current integration testing story is.  On the _gecko_ side we will certainly want all commits to be bisectable; I guess I should build just the Gecko parts one by one without the servo parts and see if they actually compile when not doing --enable-stylo...\nThe git commands are not relevant to me, because I'm not using git here to start with.  ;)  I know how to produce patches; the question is what patches to produce.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1824966 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Verified fixed on Windows 10, Mac OS 10.14.6 and Ubuntu 18.04 using Firefox Beta 69.0b13 (20190812173625)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/3c4b72b9610d\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like Mathieu took care of my ni?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi guys, \nYes, I can verify that the nightly build has fixed that issue, thank you!!!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Replacing the focus manager with a mock (controllable by preference) might be an interesting possibility, although preserving ability to dispatch and respond to OS-level events seems tricky.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by bcampen@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/23a43d83ae41\nDispatch these DisconnectIfExists calls to the call thread. r=pehrsons\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        layout/style/test/test_visited_image_loading.html\nlayout/style/test/test_visited_image_loading_empty.html\nlayout/style/test/test_visited_lying.html\nlayout/style/test/test_visited_pref.html\nlayout/style/test/test_visited_reftests.html\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have reproduced this bug with Nightly 54.0a1 (2017-02-19) on Windows 10, 64 bit!\nThe Bug's fix is now verified on Latest Nightly 54.0a1\nBuild ID \t20170228030203\nUser Agent \tMozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0\n[bugday-20170301]\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/5ec8c0e30942\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This is the same issue I'm trying to fix in bug 1102974. Unfortunately I don't think there's an easy way to fix it - I have to find the right patches to uplift. I'm having issues figuring out what those are though without causing other problems to surface :/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9198793\nscreenshot of rough expected rendering, using textarea on Win10 with Firefox release (v84)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Setting qe-verify- based on Jon's assessment on manual testing needs and the fact that this fix has automated coverage.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        First step, assume that arithmetic involving objects produces integers (rather than unknown values), monitor double/string/XML results dynamically.\nhttp://hg.mozilla.org/projects/jaegermonkey/rev/897c257e5405\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The return value of `db::GetKnownBodyIds()` is not checked at https://searchfox.org/mozilla-central/rev/85ae3b91/dom/cache/Manager.cpp#136.\nThis function executes SQL and thus is not infallible. Is there any reason to skip the check?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Another possibility is to just rip out most of this code, and instead dup() as needed to keep the source and destination fd ranges disjoint, at which point everything gets dup2()ed and this isn't a special case.\nThat could also help for the posix_spawn implementation on Mac, which isn't using this and should be (that's another bug I'm in the middle of filing), because I've heard that OS X doesn't like identity mappings with posix_spawn_file_actions_adddup2 (which, if true, is an OS bug, and also I have no idea how it interacts with POSIX_SPAWN_CLOEXEC_DEFAULT).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        [Affected versions]:\n- Latest Nightly 60.0a1 (2018-02-01) (64-bit)\n[Affected platforms]:\n- Windows 10x64\n- Mac OS Sierra 10.12\nPreconditions\nFx build with WebAuth enabled\nUSB hardware key\n[Steps to reproduce]:\n1.Go to this site: https://webauthn.bin.coffee/\n2.Insert USB hardware key\n3.Click on button labeled \"Create Credentials\" and perform USB verification steps\n4.Click on button labeled \"Get Assertion\" and perform USB verification steps\n5.Remove USB token\n6.Click on button labeled \"Create Credentials\"\n   Click on button labeled \"Get Assertion\"\n7.Insert USB hardware key again\n  Click on button labeled \"Create Credentials\" and perform USB verification steps\n[Expected result]\n7. Debug output on page should indicate successful credential creation.\n[Actual result]\n7. After clicking on \"Create Credentials\" the output indicates failure \n   https://i.imgur.com/dK7u2lQ.png\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/801fa27ae7b8\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 443133\npatch 1: basic CanvasLayer + 2D code\n- Implement basic CanvasLayer (gfxASurface only)\n- Teach 2D context how to return a CanvasLayer\n- move nsHTMLCanvasElement.h into public dir\n- teach HTMLCanvasFrame how to render using layers\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 566392\nCache |RegExpPrivate|s, purge cache on global GC.\nDepends on laziness patch from bug 673188.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8398541\nPart 2 - Make arrow functions fast\nRequesting review from bhackett for the JIT changes, jorendorff for everything else.\nPasses jit_test.py --tbpl. Pushed to Try:\nhttps://tbpl.mozilla.org/?tree=Try&rev=acbba33d927c\nFortunately the browser uses a ton of arrow functions; let's see how this turns out.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like the builds are green, at least. Is that sufficient for you? I don't think we'll be able to get all the tests green on try, since it will always be using m-c's test configuration on try, not b2g32's. Some of them may be easy to address (for example, it looks like the android tests just need an updated tooltool manifest), but from what I can gather I don't think we'll get much further without a lot of effort.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8536244\nMSE/MP4 Delay video decoder creation until we can retrieve SPS\nDelay decoder creation until we have all the information to do so.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi, Stone,\nCould you help with this issue or NI someone who is familiar with this part?\nThanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        JSBugMon: This bug has been automatically verified fixed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8949519\n0001-Bug-1435456-Remove-asserts-checking-that-downscale-o.patch, v1\nFix all the broken windows! :)\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9033510\nBug 1516605 - Turn on NEON on aarch64 when using gcc or clang. r?aosmond\nlibpng has NEON support using intrinsics, not assembler, so we should use it\neven if aarch64.\nMSVC build still turns off NEON since libpng doesn't support it on stable\nversion although upstream has it.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We can do that. I think I changed to this why because of how we pass in the glname for other objects, such as textures, render buffers, frame buffers, etc.\nGood spot on explicit. This function used to be single-arg ctor.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Can we open this bug or is there a reason not to do so, since we've already fixed the issue in bug 696390?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9084952\nBug 1571472 - use idle dispatch to start up corroborator r?bdanforth\nDepends on D41692\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks for reviewing, please see my reply below.\nIf I use |while (false)|, it will break the loop without continuing, the logic is not as expectation.\nIsn't it a good habit to use {} even it is only one line?\nOr any policy that I should not modify this part.\nThank you.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Patch 2 contains your LayerManagerOGL canvas implemention, shouldn't that be in patch 1 or its own patch?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by ntim.bugs@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/462c85ecfe5b\nAfter animating out from the toolbar, the widget no longer remains invisible. r=jaws\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9146093\nBug 1634650 - Add whitelisting of domain suffixes for URIFixup. r=harry\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Please nominate this for Beta approval when you get a chance.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by zbraniecki@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/353baf72f789\nExpose Intl.NumberFormat.prototype.formatToParts. r=anba\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I attempted to DMD firefox with the given URL and got quite a number of double reports:\n==14443== Double report of heap block 0x3F62BE20:\n==14443==  Allocated\n==14443==    at 0x4C284AF: malloc (vg_replace_malloc.c:267)\n==14443==    by 0x74630D8: moz_xmalloc (mozalloc.cpp:54)\n==14443==    by 0x7F6E76C: nsCSSStyleSheet::nsCSSStyleSheet() (mozalloc.h:200)\n==14443==    by 0x7F6E7B2: NS_NewCSSStyleSheet(nsCSSStyleSheet**) (nsCSSStyleSheet.cpp:2158)\n==14443==    by 0x7F46304: mozilla::css::Loader::CreateSheet(nsIURI*, nsIContent*, nsIPrincipal*, bool, bool, nsAString_internal const&, mozilla::css::StyleSheetState&, bool*, nsCSSStyleSheet**) (Loader.cpp:1202)\n==14443==    by 0x7F483A1: mozilla::css::Loader::LoadStyleLink(nsIContent*, nsIURI*, nsAString_internal const&, nsAString_internal const&, bool, nsICSSLoaderObserver*, bool*) (Loader.cpp:1884)\n==14443==    by 0x80BEEF6: nsStyleLinkElement::DoUpdateStyleSheet(nsIDocument*, nsICSSLoaderObserver*, bool*, bool*, bool) (nsStyleLinkElement.cpp:280)\n==14443==    by 0x80BEF63: nsStyleLinkElement::UpdateStyleSheetInternal(nsIDocument*, bool) (nsStyleLinkElement.cpp:190)\n==14443==    by 0x81B73DC: nsStyleLinkElement::UpdateStyleSheetInternal() (nsStyleLinkElement.h:58)\n==14443==    by 0x81B6ECF: nsRunnableMethodImpl<void (nsHTMLLinkElement::*)(), true>::Run() (nsThreadUtils.h:349)\n==14443==    by 0x804A914: nsContentUtils::RemoveScriptBlocker() (nsContentUtils.cpp:4879)\n==14443==    by 0x8079BF4: nsDocument::EndUpdate(unsigned int) (nsDocument.cpp:3956)\n==14443==  Previously reported by 'windows'\n==14443==    at 0x82EEDC3: DOMStyleMallocSizeOf(void const*) (nsWindowMemoryReporter.cpp:102)\n==14443==    by 0x7F6DBFC: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:978)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x8061B12: SizeOfStyleSheetsElementIncludingThis(nsIStyleSheet*, unsigned long (*)(void const*), void*) (nsDocument.cpp:9635)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n==14443==    by 0x8A71406: nsVoidArray::EnumerateForwards(bool (*)(void const*, void*), void*) const (nsVoidArray.cpp:704)\n==14443==    by 0x8A71500: nsVoidArray::SizeOfExcludingThis(unsigned long (*)(void const*, unsigned long (*)(void const*), void*), unsigned long (*)(void const*), void*) const (nsVoidArray.cpp:755)\n==14443==    by 0x80639D0: nsDocument::DocSizeOfExcludingThis(nsWindowSizes*) const (nsCOMArray.h:98)\n==14443==    by 0x8215C0C: nsXMLDocument::DocSizeOfExcludingThis(nsWindowSizes*) const (nsXMLDocument.cpp:574)\n==14443==    by 0x8061AF5: nsIDocument::DocSizeOfIncludingThis(nsWindowSizes*) const (nsDocument.cpp:9627)\n==14443==    by 0x82BA622: nsGlobalWindow::SizeOfIncludingThis(nsWindowSizes*) const (nsGlobalWindow.cpp:10167)\n==14443==    by 0x82EF445: CollectWindowReports(nsGlobalWindow*, nsWindowSizes*, nsTHashtable<nsUint64HashKey>*, nsIMemoryMultiReporterCallback*, nsISupports*) (nsWindowMemoryReporter.cpp:157)\n==14443==  Now reported by 'windows'\n==14443==    at 0x82EEDC3: DOMStyleMallocSizeOf(void const*) (nsWindowMemoryReporter.cpp:102)\n==14443==    by 0x7F6DBFC: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:978)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x7F6DC34: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:981)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x8061B12: SizeOfStyleSheetsElementIncludingThis(nsIStyleSheet*, unsigned long (*)(void const*), void*) (nsDocument.cpp:9635)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n==14443==    by 0x8A71406: nsVoidArray::EnumerateForwards(bool (*)(void const*, void*), void*) const (nsVoidArray.cpp:704)\n==14443==    by 0x8A71500: nsVoidArray::SizeOfExcludingThis(unsigned long (*)(void const*, unsigned long (*)(void const*), void*), unsigned long (*)(void const*), void*) const (nsVoidArray.cpp:755)\n==14443==    by 0x80639D0: nsDocument::DocSizeOfExcludingThis(nsWindowSizes*) const (nsCOMArray.h:98)\n==14443==    by 0x8215C0C: nsXMLDocument::DocSizeOfExcludingThis(nsWindowSizes*) const (nsXMLDocument.cpp:574)\n==14443==    by 0x8061AF5: nsIDocument::DocSizeOfIncludingThis(nsWindowSizes*) const (nsDocument.cpp:9627)\n==14443== Double report of heap block 0x15E68730:\n==14443==  Allocated\n==14443==    at 0x4C284AF: malloc (vg_replace_malloc.c:267)\n==14443==    by 0x74630D8: moz_xmalloc (mozalloc.cpp:54)\n==14443==    by 0x7F574CB: (anonymous namespace)::CSSParserImpl::ParseImportRule(void (*)(mozilla::css::Rule*, void*), void*) (mozalloc.h:200)\n==14443==    by 0x7F50C3D: (anonymous namespace)::CSSParserImpl::ParseAtRule(void (*)(mozilla::css::Rule*, void*), void*, bool) (nsCSSParser.cpp:1510)\n==14443==    by 0x7F5B967: nsCSSParser::ParseSheet(nsAString_internal const&, nsIURI*, nsIURI*, nsIPrincipal*, unsigned int, bool) (nsCSSParser.cpp:901)\n==14443==    by 0x7F48972: mozilla::css::Loader::ParseSheet(nsAString_internal const&, mozilla::css::SheetLoadData*, bool&) (Loader.cpp:1611)\n==14443==    by 0x7F48EBE: mozilla::css::SheetLoadData::OnStreamComplete(nsIUnicharStreamLoader*, nsISupports*, unsigned int, nsAString_internal const&) (Loader.cpp:959)\n==14443==    by 0x7CFD2B4: nsUnicharStreamLoader::OnStopRequest(nsIRequest*, nsISupports*, unsigned int) (nsUnicharStreamLoader.cpp:92)\n==14443==    by 0x7CD7889: nsBaseChannel::OnStopRequest(nsIRequest*, nsISupports*, unsigned int) (nsBaseChannel.cpp:713)\n==14443==    by 0x7CE0AB5: nsInputStreamPump::OnStateStop() (nsInputStreamPump.cpp:555)\n==14443==    by 0x7CE0D83: nsInputStreamPump::OnInputStreamReady(nsIAsyncInputStream*) (nsInputStreamPump.cpp:373)\n==14443==    by 0x8A96589: nsInputStreamReadyEvent::Run() (nsStreamUtils.cpp:82)\n==14443==  Previously reported by 'windows'\n==14443==    at 0x82EEDC3: DOMStyleMallocSizeOf(void const*) (nsWindowMemoryReporter.cpp:102)\n==14443==    by 0x7F64F3B: mozilla::css::ImportRule::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSRules.cpp:479)\n==14443==    by 0x7F64E0D: mozilla::css::Rule::SizeOfCOMArrayElementIncludingThis(mozilla::css::Rule*, unsigned long (*)(void const*), void*) (nsCSSRules.cpp:93)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n==14443==    by 0x8A71406: nsVoidArray::EnumerateForwards(bool (*)(void const*, void*), void*) const (nsVoidArray.cpp:704)\n==14443==    by 0x8A71500: nsVoidArray::SizeOfExcludingThis(unsigned long (*)(void const*, unsigned long (*)(void const*), void*), unsigned long (*)(void const*), void*) const (nsVoidArray.cpp:755)\n==14443==    by 0x7F6DC17: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCOMArray.h:98)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x8061B12: SizeOfStyleSheetsElementIncludingThis(nsIStyleSheet*, unsigned long (*)(void const*), void*) (nsDocument.cpp:9635)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n==14443==    by 0x8A71406: nsVoidArray::EnumerateForwards(bool (*)(void const*, void*), void*) const (nsVoidArray.cpp:704)\n==14443==    by 0x8A71500: nsVoidArray::SizeOfExcludingThis(unsigned long (*)(void const*, unsigned long (*)(void const*), void*), unsigned long (*)(void const*), void*) const (nsVoidArray.cpp:755)\n==14443==  Now reported by 'windows'\n==14443==    at 0x82EEDC3: DOMStyleMallocSizeOf(void const*) (nsWindowMemoryReporter.cpp:102)\n==14443==    by 0x7F64F3B: mozilla::css::ImportRule::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSRules.cpp:479)\n==14443==    by 0x7F64E0D: mozilla::css::Rule::SizeOfCOMArrayElementIncludingThis(mozilla::css::Rule*, unsigned long (*)(void const*), void*) (nsCSSRules.cpp:93)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n==14443==    by 0x8A71406: nsVoidArray::EnumerateForwards(bool (*)(void const*, void*), void*) const (nsVoidArray.cpp:704)\n==14443==    by 0x8A71500: nsVoidArray::SizeOfExcludingThis(unsigned long (*)(void const*, unsigned long (*)(void const*), void*), unsigned long (*)(void const*), void*) const (nsVoidArray.cpp:755)\n==14443==    by 0x7F6DC17: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCOMArray.h:98)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x7F6DC34: nsCSSStyleSheetInner::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:981)\n==14443==    by 0x7F6DC7A: nsCSSStyleSheet::SizeOfIncludingThis(unsigned long (*)(void const*)) const (nsCSSStyleSheet.cpp:849)\n==14443==    by 0x8061B12: SizeOfStyleSheetsElementIncludingThis(nsIStyleSheet*, unsigned long (*)(void const*), void*) (nsDocument.cpp:9635)\n==14443==    by 0x8A70A12: SizeOfElementIncludingThisEnumerator(void const*, void*) (nsVoidArray.cpp:737)\n...and more like this, but I think those illustrate the point well enough: we have memory shared by nsCSSStyleSheetInner and we're double-counting that.  Looks like the style memory reporting has to become a bit more sophisticated.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Probably don't need to bother with that :)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Here it is: http://dl.dropbox.com/u/80664946/emscripten_test_suite2.zip\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/e9c807b1e3d4\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Actually I was wrong about this; the tabs are now PNGs, not SVGs, so this patch is the culprit.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 732274\npatch\nThe DisplayBorderBackgroundOutline() call should be inside the |if| block, obviously. I've moved that locally.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22717490&tree=Fx-Team\nWINNT 6.2 fx-team debug test reftest on 2013-05-07 21:51:46\nslave: t-w864-ix-052\n22:02:02     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Rebased and sent to Try: https://tbpl.mozilla.org/?tree=Try&rev=001f918d9089\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1097562 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I pushed the patch + a hack to use gcc 4.2 to\nhttps://tbpl.mozilla.org/?tree=Try&rev=3c393fe37a76\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Same as over in bug 1382932 this has last been seen crashing on 58.0b12.\nPossibly fixed though bug 1425780 getting uplifted into 58 Beta on 2018-01-11.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ms2ger%gmail.com\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22605853&tree=Mozilla-Central\nWINNT 6.2 mozilla-central debug test reftest on 2013-05-05 01:33:33\nslave: t-w864-ix-049\n01:44:36     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by rhelmer@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/94045206f9dc\nremove checks for corrupt system add-ons r=bdanforth\nhttps://hg.mozilla.org/integration/autoland/rev/11b5503a39e0\nuse async I/O for checking corrupt omni jar r=bdanforth\nhttps://hg.mozilla.org/integration/autoland/rev/419e84fea55d\nuse idle dispatch to start up corroborator r=bdanforth\nhttps://hg.mozilla.org/integration/autoland/rev/21cc49705ca8\nremove expectation of GreD and decrement XCurProcD omni jar file stats r=mconley\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 476827\nrelax WebGL feature test\nRegenerated the patch (line ending issue)\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        So, we are in testResetEverything.\nThe restart we crash on is apparently the one after the first checkProfile.\nOne thing I don't understand, by looking at a PASS log, is why after the first self.checkProfile(expect_sync_user=True) and the restart, I cannot find traces of the second self.checkProfile(has_migrated=True, expect_sync_user=True), I instead see a TEST-PASS just after the restart.\nFor example, looking for the string \"services.sync.username\" in the log, I see it set by self.createProfileData() and then get by the first self.checkProfile(expect_sync_user=True), then I don't see it again, but the second self.checkProfile call should get it again, it's like we don't run the second checkProfile at all.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Rename the existing one to DeprecatedMove or something, then.  It's going away, make it ugly and obvious that no one should use it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We want to coordinate re-enabling for Release/Beta with Chrome and get the MIME type restrictions for Workers into the specification: https://github.com/whatwg/html/issues/3255.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 813138\nbug-897027-fix.patch\nReview of attachment 813138:\n-----------------------------------------------------------------\nStealing ...\nLooks good, but I think we should have tests added for this. Can you create them from André's initial report? Ask me for review with those.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 792467\nPart 2, v1: Add move constructors to mozilla::LinkedList and mozilla::LinkedListElement.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9136102\nBug 1622369 - Await the async function to make sure any async steps inside the function will be blocked.\nIt's easy to get time out on mac if we await the promise inside\ninsertFrameAndAwaitLoad(), so move it out and let's see if there is\nstill timeout or intermittent.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8765824\npatch\nNot this patch, because this bug is unrelated to 3.16 and \"hovering\" is a different concept.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Compiling the SIPCC code with log macros expanded directly to printf() yields approximately 300 formatting-related warnings. Most of these are benign, but some could be problematic. This bug represents an audit task to examine and fix (or suppress) these warnings.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 811006 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8738042\nWrap promise resolution values before storing\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        so this is wfm with a debug build from this morning's m-c on linux64 - using e10s and both http:// and https:// versions of google.\nis this still an issue? can you provide the info from comment 1?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/44c63bf18e74\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8973029\nBug 1458856 - Handle prefs with only a user value in preference rollout\nReview commit: https://reviewboard.mozilla.org/r/241560/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/241560/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 604531\nAdd all types v1\nAdd the types for nameSetters and make the code more robust.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664409\nPart 3: Add send Location Event in RIL. v8\nAddressed to kk11ff's feedback.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8973029\nBug 1458856 - Handle prefs with only a user value in preference rollout\nhttps://reviewboard.mozilla.org/r/241560/#review247516\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Follow-up patch in Bug 1797347 uplifted to 107. It will be included in Fenix/Focus 107.0b6.\nSetting 107 fixed on this bug, but will monitor Fenix/Focus 107.0b6 stability.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I made the chars we read out of the token stream and the strings we XDR decode into atoms and we look good hit rate wise:\n21787 events\n20526 hits, 1261 misses (94.21% hit ratio)\nkind        | count\n------------+------\ncold        | 648  \nhit         | 20526\neviction    | 22   \nuncacheable | 591\nSince we were be creating fresh JSStrings for those token-stream-read creations the atomizing should have added very little overhead, but I'll make an opt build to time it just to be sure.\nWithout any purging we keep a ~2.5K hash table around to cache all the values. Half the RegExpPrivates that exist are there because they're non-atom sources, so I still need more memory usage and execution time data -- maybe atomizing more things would be worth it to reduce the duplication.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8822402\npart 15.  Rip out the initial() methods on style structs in stylo\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Wait a second, I don't think I correctly understand the issue.  Do you mind attaching a stack trace to the assertion that you're seeing please?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 574773\npatch without the sqlite hack\nIs this the right patch?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8594783\nMozReview Request: bz://1096093/mconley\n/r/7307 - Bug 1096093 - [WIP] Cache overlay scrollbar LookAndFeel metric, and invalidate in the content process when parent sends Refresh message. r=?\nPull down this commit:\nhg pull -r 58f48da582c157e3a25d53dc194840afc31d15cf https://reviewboard-hg.mozilla.org/gecko/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8933378\nBug 1421905 - Listen to service start notification in Synced Tabs sidebar.\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/204290/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 565397\nDon't remove unread in preview mode (final)\nThis feels like a bug with low user impact that can wait until 10 ships. If there's some large number of users having a really bad experience can you please explain that and re-nominate.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 435856\nPatch v2.0\nPerhaps this could be called\nPRBool UseAsyncUpdate() const\nMaybe just\nPRBool NoCSS() const\nMaybe just \nPRBool DontEchoPassword() const\nI think you could make nsEditorListener::mEditor to be\ntype nsEditor. Currently it is nsIEditor. That way you wouldn't need the static_cast.\nThough, it is possible that you'd need a static_cast then elsewhere. But try and see\nwhat leads to easiest-to-read code.\nIf mEditor was nsEditor, this QI wouldn't be needed.\nDontEchoPassword()?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The problem is I don't see anything in test_refresh_firefox.py that may be affected by my changes...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        As is birch (our gcc osx builds) :-)\nhttps://tbpl.mozilla.org/?tree=Birch&rev=716b48dbafe3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8520984\nPatch v1.3\nWell, looks like the comment didn't get added.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 732983\nKnow Your Rights notification box has moved to be shown as default snippet on first startup\nadded proposed changes of Gavin and Marco.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/2170e194fe60\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What's the difference?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks for the fast review :-)\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/d5c6d21109da\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/45249d949463\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 566104\nWIP: cache with purging.\nLooks like this is passing jsreftests. Interesting note to self: you can't legitimately free up memory from a thread-data level cache when you're doing compartmental GCs.\nPushed to try.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The following testcase crashes on mozilla-central revision 20220413-4f936f5e57c8 (debug build, run with --fuzzing-safe --ion-offthread-compile=off --baseline-eager test.js):\n    [].constructor.call(undefined, 2)\nBacktrace:\n    received signal SIGSEGV, Segmentation fault.\n    #0  0x5865e3a2 in js::jit::GetIndexOfArgument(js::jit::ArgumentKind, js::jit::CallFlags, bool*) ()\n    #1  0x588894e9 in js::jit::CacheIRWriter::loadArgumentFixedSlot(js::jit::ArgumentKind, unsigned int, js::jit::CallFlags) ()\n    #2  0x588a9d88 in js::jit::InlinableNativeIRGenerator::tryAttachArrayConstructor() ()\n    #3  0x588a5277 in js::jit::InlinableNativeIRGenerator::tryAttachStub() ()\n    #4  0x588a4b93 in js::jit::CallIRGenerator::tryAttachFunCall(JS::Handle<JSFunction*>) ()\n    #5  0x588aef4d in js::jit::CallIRGenerator::tryAttachStub() ()\n    #6  0x585f7e4d in js::jit::DoCallFallback(JSContext*, js::jit::BaselineFrame*, js::jit::ICFallbackStub*, unsigned int, JS::Value*, JS::MutableHandle<JS::Value>) ()\n    [...]\n    #10 0x58a557b2 in js::jit::MaybeEnterJit(JSContext*, js::RunState&) ()\n    [...]\n    #19 0x57ab58d6 in main ()\n    eax\t0x56845b6d\t1451514733\n    ebx\t0x591587c4\t1494583236\n    ecx\t0x5915a29c\t1494590108\n    edx\t0xf7b74cc7\t-138982201\n    esi\t0xff9fe15b\t-6299301\n    edi\t0xff9fe260\t-6299040\n    ebp\t0xff9fe138\t4288667960\n    esp\t0xff9fe120\t4288667936\n    eip\t0x5865e3a2 <js::jit::GetIndexOfArgument(js::jit::ArgumentKind, js::jit::CallFlags, bool*)+530>\n    => 0x5865e3a2 <_ZN2js3jit18GetIndexOfArgumentENS0_12ArgumentKindENS0_9CallFlagsEPb+530>:\tmovl   $0x1c8,0x0\n       0x5865e3ac <_ZN2js3jit18GetIndexOfArgumentENS0_12ArgumentKindENS0_9CallFlagsEPb+540>:\tcall   0x57b3e9ef <abort>\nMarking as fuzzblocker due to frequent failures since the test is really easy.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 737239\nPart d: Move to WebIDL bindings, remove CI and QS\nWrapObject takes a handle for the scope now.\nr=me with that\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/febf9ee6d477\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        shield-content-frame.js is only needed in content processes when an event received from a shield page. It's only ever really needed when about:studies has been loaded in a process, but the quickest path to getting rid of it it is just loading it when we get a \"ShieldPageEvent\" event in a frame script.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8891892\nduration.html\nupdated to use static video file as requested\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8843977\nPatch\nWe need the null check if the value's type is MIRType::ObjectOrNull, but we don't need it in the more common MIRType::Object case.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Marking this as Resolved based on [Robert's comment from bug 1686384](https://bugzilla.mozilla.org/show_bug.cgi?id=1686384#c4).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/ad0d465dcf91\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The new code is equivalent to your work around and I think the same pattern is used elsewhere in the file so it's okay to leave it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sorry for the brain dump, but here's another. Each email is given its own layer. Previously these were single-tiled layers, so only use memory for the size of the layer. But since bug 1221094 we use mutli-tiled layers for them. So each of these short and wide layers are using tiles that are far too tall for them, hence the massive increase in memory usage. Bug 1243589 made it so that we don't use multi-tiled layers when the layers are smaller than the tile size, but only when both the width AND height are smaller, whereas these layers are short but wide.\nWe need to update that logic to consider width and height separately. I'm not sure what the correct heuristic would be, but these definitely shouldn't be being multi-tiled. That would fix this regression.\nBut I also want to find out why each email is getting its own layer in the first place. I'd guess it's something to do with them being transformed, but ideally they'd all be in the one large multi-tiled layer, at least until you hover over one and it gets animated.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by emilio@crisal.io:\nhttps://hg.mozilla.org/integration/autoland/rev/d9f904ba9e20\nRemove assert that doesn't hold for text-decorations because of presentation hints.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sorry for the delay, some other bugs required my attention.\nI'm debugging this now so I'll get back to you soon...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Try looks good. There's a frequent M-3 failure on B2G but looking at the \"similar jobs\" pane shows a lot of other pushes from the same time hit that too. More retriggers on it are coming up green, so I assume some glitch in the environment caused those.\nI'll land it once inbound reopens.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7307/#review6071\n::: widget/LookAndFeel.h:592\n(Diff revision 4)\nI think this can be\nstatic InfallibleTArray<LookAndFeelInt> GetIntCache();\nnowadays.\n::: widget/LookAndFeel.h:593\n(Diff revision 4)\nBetter make this take a const InfallibleTArray<LookAndFeelInt>& aLookAndFeelIntCache.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        +++ This bug was initially created as a clone of Bug #1629150 +++\nChanges since last update:\n#11800 Remove any mention of Gitpod from the README (issue 11732)\n#11809 Update Prettier to version 2.0\n#11806 [api-minor] Fix the return value of `PDFDocumentProxy.getViewerPreferences` when no viewer preferences are present (PR 10738 follow-up)\n#11810 A couple of small `String.fromCodePoint` improvements (PR 11698 and 11769 follow-up)\n#11805 Always skip over any additional, unexpected, RSTx (restart) markers in corrupt JPEG images (issue 11794)\n#11813 Suppress browser autofill on page number\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8903374\nBug 1395751 - Skip test_stylesheet_clone_import_rule.html with Stylo.\nReview commit: https://reviewboard.mozilla.org/r/175180/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/175180/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 439691\nPatch for placeholder-7.html\nCanceling review per previous comment.\nSomeone else can reproduce this random failure ?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        [Bugbug](https://github.com/mozilla/bugbug/) thinks this bug is a regression, but please revert this change in case of error.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8408443\nbug.patch\nReview of attachment 8408443:\n-----------------------------------------------------------------\nOK, looking good for a first start :-)\nThis removes the inline styles but leaves inline scripts. Can you modify crashes.xhtml so that \"onclick\" and \"onload\" attributes are replaced by JavaScript that adds event handlers (in crashes.js)?\nYou can look how other volunteers have fixed this (In bug 948881 for example).\nSee also our project wiki page! https://wiki.mozilla.org/Security/Inline_Scripts_and_Styles\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8385604\nwindow-close v2\nNull check mFrameElement.\nBut this needs a toolkit/ review, since I'm not sure whether calling window.close() is the right thing.\nI believe BrowserTryToCloseWindow() or closeWindow(some params) should be used.\nAlso, I don't know how b2g app closing works.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8746231\nrunnable3.patch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        we try to import bookmarks.html from the profile folder, but looks like now that file is inside the omni.jar (my guess is this happens from Bug 556644).\nIn debug builds we commonly use, we don't use the omni.jar, so when ProfDef gets copied, bookmarks.html is, and ends up in the profile folder, then everything works fine.\nnsBrowserGlue was updated to import from resource:///defaults/profile/bookmarks.html but the migrators code was not, it still tries to directly read from the profile folder.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9077544\nBug 1565273 - Context menu clicks ignore browser.urlbar.clickSelectsAll pref. Add tests for selectAll behaviour. r?mak\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 672004\npatch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        73 failures in 3966 pushes (0.018 failures/push) were associated with this bug in the last 7 days.\nThis is the #17 most frequent failure this week.\n** This failure happened more than 30 times this week! Resolving this bug is a high priority. **\n** Try to resolve this bug as soon as possible. If unresolved for 2 weeks, the affected test(s) may be disabled. ** \nRepository breakdown:\n* autoland: 50\n* mozilla-central: 14\n* try: 9\nPlatform and build breakdown:\n* macosx1015-64-qr: 61\n  * debug: 51\n  * opt: 10\n* linux1804-64-qr: 1\n  * opt: 1\n* macosx1015-64-devedition-qr: 7\n  * opt: 7\n* macosx1015-64-shippable-qr: 3\n  * opt: 3\n* android-hw-p5-13-0-android-aarch64-qr: 1\n  * debug: 1\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1821213&startday=2023-03-06&endday=2023-03-12&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        So what branches have the fix and does it need uplift?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ah, sounds good. I'll do it before landing the new patch tomorrow.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bug 799796.\nWe just measure sheets in documents and the style-sheet-cache, IIRC.\nCan you file that bug?  I don't understand the idea enough to write something sensible.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Covered by a test landed in bug 949667.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thought so, I've opened bug 743585 .\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Should be fixed by Bug 1239694.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Break the sum out into the component parts\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        No, that should all go back to working the way it did before.  (Actually, this bug notwithstanding, FF10+ should work *better* with cross-origin wrappers b/c of bug 683361!)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/e25127db470c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        security sensitive per jandem's request.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 734285\nPatch v1.2\nGoing to wait until Attr lands.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/606aef8e8c16\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        How should this interact with `general.smoothScroll`? I have it disabled, but now I get the smooth scrolling effect when e.g. pressing the arrow keys. Is that intentional?\nOn a related note, page down sometimes scrolls immediately on the first press, then the animation works on the following ones. Maybe it figures it's running behind and skips the animation.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This fixes it for me on gtk+ 3.20.6\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Updated the [site compatibility note](https://www.fxsitecompat.dev/en-CA/docs/2020/worker-scripts-with-wrong-mime-type-will-be-blocked-from-loading-with-worker-or-sharedworker/).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/releases/mozilla-beta/rev/a95de9874038\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8877982\n(part 3) - Overhaul TickSample and things around it\nBug 1357829 added a third kind of sample, in addition to the existing\n\"periodic\" and \"synchronous\" samples. This patch cleans things up around that\nchange. In particular, it cleans up TickSample, which is a mess of semi-related\nthings.\nThe patch does the following.\n- It removes everything from TickSample except the register values and renames\n  TickSample as Registers. Almost all the removed stuff is available in\n  ThreadInfo anyway, and the patch adds a ThreadInfo argument to various\n  functions. (Doing it this way wasn't possible until recently because a\n  ThreadInfo wasn't available in profiler_get_backtrace() until recently.)\n  One non-obvious consequence: in synchronous samples we used to use a value of\n  0 for the stackTop. Because synchronous samples now use ThreadInfo directly,\n  they are able to use the proper stack top value from ThreadInfo::mStackTop.\n  This will presumably only improve the quality of the stack traces.\n- It splits Tick() in two and renames the halves DoPeriodicSample() and\n  DoSyncSample().\n- It reorders arguments in some functions so that ProfileBuffer (the output) is\n  always last, and inputs are passed in roughly the order they are obtained.\n- It adds a comment at the top of platform.cpp explaining the three kinds of\n  sample.\n- It renames a couple of other things.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm still working on this...\nSessionStorage has been badly busted, possibly for years.  :-(\nDid people realize that mIsSessionOnly <https://searchfox.org/mozilla-central/rev/64ef7bc9fb478ba7c292f9fa57813d3fe864201e/dom/storage/Storage.cpp#53> is *never* set to true?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It's definitely too early to tell definitively whether this has worked, but there's been no crashes on nightly in the 24h since it shipped. Let's uplift to beta.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        url:        https://hg.mozilla.org/integration/mozilla-inbound/rev/c281b91bf5f854499806f45c38ca03b6baf126e8\nchangeset:  c281b91bf5f854499806f45c38ca03b6baf126e8\nuser:       Eric Rahm <erahm@mozilla.com>\ndate:       Thu Jul 16 16:43:04 2015 -0700\ndescription:\nBug 1184282 - Remove break suggested inside cluster warning. r=roc\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1097143 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This has been fixed on trunk by some of the patches that I landed as part of the work in bug 240933.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/2361/#review1699\n::: dom/base/nsXMLHttpRequest.cpp\n(Diff revision 2)\nWe can well get to loaded < 0 here, but out of scope of this bug.\n::: embedding/components/webbrowserpersist/nsWebBrowserPersist.cpp\n(Diff revision 2)\nHere are some weird casts left..\n::: netwerk/protocol/http/nsHttpPipeline.h\n(Diff revision 2)\nindent\n::: netwerk/test/TestPageLoad.cpp\n(Diff revision 2)\nlld ?\n::: uriloader/base/nsDocLoader.cpp\n(Diff revision 2)\nno need to cast\n::: dom/base/nsXMLHttpRequest.cpp\n(Diff revision 2)\nIsn't there a define?  if not, can you please create one in some \"net.h\" or so?\n::: embedding/components/webbrowserpersist/nsWebBrowserPersist.cpp\n(Diff revision 2)\nAnd this still uses unsigned\n::: netwerk/protocol/http/HttpChannelChild.cpp\n(Diff revision 2)\nIf you find some way to split this assert so that we know the progressMax value, I'd love that\n::: netwerk/protocol/http/HttpChannelChild.cpp\n(Diff revision 2)\naCount's already uint64\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It's actually strange that it doesn't do that, because in bug 1044019 this was done supposedly.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/1ef77d653c4f\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I confirm the fix is verified on MacOS 10.8, Windows 7 x64 and Ubuntu 12.04 on FF 20RC:\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0\nMozilla/5.0 (X11; Linux i686; rv:20.0) Gecko/20100101 Firefox/20.0\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:20.0) Gecko/20100101 Firefox/20.0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 734285\nPatch v1.2\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.2.10) Gecko/20100914 Firefox/3.6.10 (.NET CLR 3.5.30729)\nBuild Identifier: Mozilla/5.0 (en-US; rv:1.9.2.10) Gecko/20100914 Firefox/3.6.10\nHTML 5's <li> reversed attribute is ignored. It was supposed to reverse the list numbering.\nReproducible: Always\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/533f35feb9eb\nhttps://hg.mozilla.org/mozilla-central/rev/d15621c6f424\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Should this be required for 70/Skyline, or do you want to make it a lower priority? I'd still take a patch for this in beta.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I would say so, but if Markus or you strongly disagrees I'm happy to add it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://twitter.com/sayrer/status/19304989209\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8449368\nExpose pressed state on menu buttons, too\nReview of attachment 8449368:\n-----------------------------------------------------------------\n::: accessible/generic/Accessible.cpp\n@@ +1581,5 @@\nnit: two spaces between 'button' and 'menus', dot in the end\n::: accessible/tests/mochitest/states/test_aria.xul\n@@ +3,5 @@\nnit: it'd bet good to keep it more generic\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/731c4bc9dd37\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Commit pushed to master at https://github.com/mozilla/activity-stream\nhttps://github.com/mozilla/activity-stream/commit/9ab80ad72851e430ea55bdd4f2dba7033fb508b9\nBug 1485422 - Add rating stars to CFR (#4393)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hey Edouard, I am not sure what I can do here to help. FWIW, adding Sec-Fetch-* headers (implemented in Bug 1508292 ) is behind  the pref 'dom.security.secFetch.enabled' which is only enabled in Nightly and we will not let it ride the trains for a while. I added some more information about what I think the problem is within comment 14 - if there is anything else I can be helpful with, please let me know.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can verify that my friend is no longer crashing, although he apparently can't use any website which requests both camera and microphone (such as appear.in, or appr.tc, or https://janus.conf.meetecho.com/echotest.html). They don't crash anymore, but his camera and microphone never actually work (both me and him can't see/hear him).\nHe can use demos which only request the camera though (such as https://webrtc.github.io/samples/src/content/getusermedia/gum/).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by gijskruitbosch@gmail.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/75df8c6facf7\nMove inline scripts and styles into separate file for toolkit/crashreporter/content/crashes.xhtml (about:crashes). r=freddyb,gijs\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/b38e8adb5318\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 705532\nprocessed dump\nSeen while dogfooding over the weekend.  Was doing heavy browsing and opening/closing a lot of tabs.  No better STR atm.\nCrash reason:  SIGSEGV\nCrash address: 0x6c003a\nThread 0 (crashed)\n 0  libxul.so!mozilla::layers::AsyncPanZoomController::ContentReceivedTouch [AsyncPanZoomController.cpp : 1346 + 0x4]\n     r4 = 0x4aef1800    r5 = 0x00000000    r6 = 0xbe87e090    r7 = 0x00050024\n     r8 = 0xbe87e760    r9 = 0x4030990c   r10 = 0x00000000    fp = 0x00000000\n     sp = 0xbe87de60    lr = 0x40b0ef0f    pc = 0x411ef462\n    Found by: given as instruction pointer in context\n 1  libxul.so!mozilla::layout::RenderFrameParent::ContentReceivedTouch [RenderFrameParent.cpp : 978 + 0x3]\n     r4 = 0xbe87e090    r5 = 0xbe87e6fc    r6 = 0xbe87e090    r7 = 0x00050024\n     r8 = 0xbe87e760    r9 = 0x4030990c   r10 = 0x00000000    fp = 0x00000000\n     sp = 0xbe87de70    pc = 0x40b0ef0f\n    Found by: call frame info\n 2  libxul.so!mozilla::dom::TabParent::RecvContentReceivedTouch [TabParent.cpp : 1304 + 0x5]\n     r4 = 0xbe87e090    r5 = 0xbe87e6fc    r6 = 0xbe87e090    r7 = 0x00050024\n     r8 = 0xbe87e760    r9 = 0x4030990c   r10 = 0x00000000    fp = 0x00000000\n     sp = 0xbe87de78    pc = 0x4105d685\n    Found by: call frame info\n 3  libxul.so!mozilla::dom::PBrowserParent::OnMessageReceived [PBrowserParent.cpp : 1477 + 0xb]\n     r4 = 0x47047ec0    r5 = 0xbe87e6fc    r6 = 0xbe87e090    r7 = 0x00050024\n     r8 = 0xbe87e760    r9 = 0x4030990c   r10 = 0x00000000    fp = 0x00000000\n     sp = 0xbe87de80    pc = 0x410978a7\n    Found by: call frame info\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Brian, the type information for function C (line 344) is really bad. I'm not sure why but the type of all locals, arg and this is all \"unknown\". Better type information may get rid of the monitored setelem and is needed to make this benchmark fast.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        So we chatted on IRC about this.  This is a sucky problem.  I guess our only two options here are either to use thread-safe refcounting or introduce a third special type of non-checked non-threadsafe refcounting.  I'd take the former.\nCan you please file a follow-up to fix all of the remaining cases for other consumers of LazyIdleThread?  Thankfully that class seems to only be used in 5 places.  Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8403724\n983489.patch\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This bug can be reproduced on Fx3.5 too. However, it's going to be dropped but SeaMonkey is going to continue to use 1.9.1 for a while. So, we should fix this bug on 1.9.1 too.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8482088\nDo not pause when playbackRate = 0. Instead don't play anything\nFollow r+\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Let me prepare a new patch including that change as well, no need for a new bug.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        well, no, CreateVideoDecoder may fail.\nNS_ENSURE_SUCCESS will return if rv isn't NS_OK.\nrather confusing macro I admit, but it's how it was used\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pixel differences on reftests are now reported for all reftests in the log, so we can just look at a recent m-c log to see what the current differences are on these tests. [1] is such a log for linux-qr opt, and it shows 0,0 difference. I looked at a couple of other logs too (linux debug, mac opt) and they are all reporting 0 differences, so it's likely fixed. (Could be just an intermittent 0,0 though). I'll do a try push with the fuzzy annotations removed and retrigger a bunch to confirm.\n[1] https://treeherder.mozilla.org/logviewer.html#?job_id=202171044&repo=mozilla-central&lineNumber=11124\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Autoland Patchset:\n\tPatches: 608478\n\tBranch: mozilla-central => try\n\tDestination: http://hg.mozilla.org/try/pushloghtml?changeset=4c9d8f3ff72d\nTry run started, revision 4c9d8f3ff72d. To cancel or monitor the job, see: https://tbpl.mozilla.org/?tree=Try&rev=4c9d8f3ff72d\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bug 1610373 is now fixed, and we have a new method - `nsICookieManager::getCookieSince`. We should use this to get the cookies instead of `Services.cookies.cookies`.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Description:\ntest_gallery_edit_photo test is failing after opening the gallery app and selecting a photo to embiggen. While on large photo view, test taps the edit button but no action resolves, leaving the test to timeout. Saw this issue reproduce once manually but have not discovered STR at this time.\n* http://jenkins1.qa.scl3.mozilla.com/view/UI/job/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/181/HTML_Report/\n* http://jenkins1.qa.scl3.mozilla.com/job/flame-kk.ui.adhoc.bitbar/146/HTML_Report/\nPreReq:\n* picture in gallery app\nRepro Steps:\n1) Update phone to 20150723010205\n2) Open Gallery app\n3) Tap picture\n4) Tap Edit button\nActual:\nPhone does not transition to edit view; test times out\nExpected: \nPhone transitions to edit view; test continues editting\nTraceback (most recent call last):\nFile \"/var/lib/jenkins/jobs/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/workspace/.env/lib/python2.7/site-packages/marionette_client-0.16-py2.7.egg/marionette/marionette_test.py\", line 296, in run\ntestMethod()\nFile \"/var/lib/jenkins/jobs/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/workspace/tests/python/gaia-ui-tests/gaiatest/tests/functional/gallery/test_gallery_edit_photo.py\", line 28, in test_gallery_edit_photo\nedit_image = image.tap_edit_button()\nFile \"/var/lib/jenkins/jobs/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/workspace/tests/python/gaia-ui-tests/gaiatest/apps/gallery/regions/fullscreen_image.py\", line 92, in tap_edit_button\nreturn EditPhoto(self.marionette)\nFile \"/var/lib/jenkins/jobs/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/workspace/tests/python/gaia-ui-tests/gaiatest/apps/gallery/regions/edit_photo.py\", line 27, in __init__\n*self._canvas_locator))))\nFile \"/var/lib/jenkins/jobs/flame-kk-319.mozilla-central.nightly.ui.functional.non-smoke.2.bitbar/workspace/.env/lib/python2.7/site-packages/marionette_driver-0.9-py2.7.egg/marionette_driver/wait.py\", line 143, in until\ncause=last_exc)\nTimeoutException: TimeoutException: Timed out after 10.3 seconds\nEnvironmental Variables:\nDevice firmware (base) \tL1TC000118D0\nDevice firmware (date) \t23 Jul 2015 08:24:55\nDevice firmware (incremental) \teng.cltbld.20150723.042443\nDevice firmware (release) \t4.4.2\nDevice identifier \tflame\nDevice memory \t219772 kB\nDevice serial \t356cd044\nDevice uptime \t0 days 0 hours 2 minutes 8 seconds\nGaia date \t22 Jul 2015 18:44:09\nGaia revision \tf04fdbfa1943\nGecko build \t20150723010205\nGecko revision \t2ddec2dedced\nGecko version \t42.0a1\nReproducible manually: Once, cannot reproduce at this time\nRepro frequency: 3/6\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8933193\nsynced-tabs-sidebar-is-blank.png\nSteps to reproduce:\n1. Launch the latest Nightly\n2. Open synced tabs sidebar with tabs disable state\n   => Shows sync-illustration-issue.svg, message and button\n3. Restart Nightly\nActual Results:\nSynced tabs sidebar is blank. It will be shown after reopening sidebar (or switching menu).\nExpected Results:\nSame with before restarting Nightly.\nRegression range:\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=5043401c5447ab8cfb6edef4b806e1ad52e53ddc&tochange=8696159a170c286813795dba1fe1cebb623e3410\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/releases/mozilla-aurora/rev/ac9e91778eb6\nhttps://hg.mozilla.org/releases/mozilla-beta/rev/12bda229bf83\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 471988\nfix v2\nPending answers to the questions.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This looks great.  Just a few small changes, if you don't mind:\nCan we make the value here null if FM is not enabled?  That way there's no confusion, nor any contract that this API will remember things.\nIf we're only going to expose the current band, I think it would be better to do something simpler:\n  readonly attribute double frequencyLowerBound;\n  readonly attribute double frequencyUpperBound;\n  readonly attribute double channelWidth;\nIf we have fm.availableBands at some later date, they can be {lowerBound, upperBound, width} objects, which would be fine.  We don't need to expose our current band data as an Object in order to make the future availableBands property make sense.\nPerhaps we should have two methods\n  DOMRequest disableRadio();\n  DOMRequest enableRadio(in double frequency);\nOtherwise, you have to enable the radio and then set the frequency.  But after you enable and before you set the frequency, you're in this weird state where the radio is \"on\" but not tuned.\nWhat do you think?\nWhat happens if I set the frequency to 87.6, when the min freq is 87.5 and the channel width is .2?\nI'd guess that can't be an error, because we can't represent all fractions precisely as doubles. Even if I send 87.7, I might actually send 87.70000000000002.  In other words, we have to do some amount of rounding.\nSo I guess I have a question and a suggestion.  My suggestion is that we say that even if setFrequency(x) succeeds, it is not guaranteed that fm.frequency == x, because we may reduce the precision of the given frequency.\nAnd my question is: Do you know if the radio can tune to halfway between a channel, or must it always tune to precisely one of the channels?  That is, should the user expect their given frequency to be rounded to a channel, or just rounded to something?  Whatever it is is fine, but we should document it.\nI have nits on the English in the comments (nothing major).  I was planning to save those for when you post a patch, but I can give them sooner if you'd prefer.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out for bustages in ParseNode.h\nPush with failure: https://treeherder.mozilla.org/#/jobs?repo=autoland&resultStatus=testfailed%2Cbusted%2Cexception%2Crunnable&revision=8c405aa4467dfeb34b9df7e875c1584ed6f6a938\nFailure log: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=235272394&repo=autoland&lineNumber=5157\nBackout: https://hg.mozilla.org/integration/autoland/rev/c99b0f4470527c183d90c1e7191a08e4933ad1ac\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mpalmgren@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/204d0d6a487f\nMove [Excess]OverflowContainers continuations of children we pull in from our prev-in-flow to our principal list to avoid making them unordered.  r=dholbert\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=21381700&tree=Mozilla-B2g18\nRev5 MacOSX Mountain Lion 10.8 mozilla-b2g18 opt test mochitest-1 on 2013-04-02 21:30:57\nslave: talos-mtnlion-r5-027\n46016 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after one refresh driver iteration. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Then i will rename them all to \"channelWidth\".\nAnd what do you think about the comment #107 ?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8408443\nbug.patch\nHi Manish \nAdded !\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/fx-team/rev/eed38188ee0ef70c90db4767dd614508a1a9042c\nBug 1254694 - Fix synchronous code path for search engines metadata migration, r=adw.\nhttps://hg.mozilla.org/integration/fx-team/rev/0837015740ff57ed9c40a6733987f437985b9d9b\nBug 1254694 - Fix search engines metadata migration for engines from language packs, r=adw.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I sent them mail, but if someone who can write French sanely wants to do that too, that would be great!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Fantastic!\nI'm really behind on reviews after the B2G work week, but I'll get to this ASAP (hopefully Wed or Th).  I'm sorry for the long wait.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/278d87108cb0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'll file a separate bug for ARIA\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8552063\n1118597.patch v3\nRequesting 37 uplift of just this patch.\nApproval Request Comment\n[Feature/regressing bug #]: MSE.\n[User impact if declined]: Less consistent testing, harder to port critical fixes.\n[Describe test coverage new/current, TreeHerder]: Landed on m-c some time ago.\n[Risks and why]: This is an EME patch, not an MSE one, but it does no harm and simplifies porting important MSE. Risk is minimal.\n[String/UUID change made/needed]: None.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        In Bug 1768470 the colorway closet theme selector displays a user’s active theme via a check mark. This should be made accessible by announcing the status to screen readers.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 647945\nAdd Permissions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 565093\nDon't remove unread in preview mode (alternative version)\nAlternative version; moved down to use existing if\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 627618\nrename nsAccessible to Accessible\nReview of attachment 627618:\n-----------------------------------------------------------------\n::: accessible/public/nsIAccessibilityService.h\n@@ +41,1 @@\nnit: wrong indent\n@@ +52,1 @@\nnit: wrong indent\n::: accessible/public/nsIAccessibleText.idl\n@@ +6,4 @@\nok, not related though\n::: accessible/src/atk/nsAccessibleWrap.cpp\n@@ +131,3 @@\nwould you please indent it properly?\n@@ +247,2 @@\nindent it?\n@@ +259,2 @@\nsame\n@@ +259,5 @@\nvoid on new line please\n@@ +277,3 @@\nindent it?\n@@ +280,3 @@\nreturn type on own line pls, here and below in this file\n@@ +313,4 @@\ntype* name\n@@ +351,4 @@\nsame\n@@ +600,4 @@\nindent it?\n@@ +764,2 @@\nindent it and no empty line between them?\n@@ +955,3 @@\nindent pls?\n@@ +964,5 @@\ntype* name\n@@ +1262,1 @@\nindent pls\n@@ +1294,1 @@\nsame and type* name\n@@ +1335,1 @@\nsame\n::: accessible/src/atk/nsAccessibleWrap.h\n@@ +48,3 @@\nnit: space before :\n@@ +51,4 @@\nwrong indent and below too\n::: accessible/src/atk/ApplicationAccessibleWrap.cpp\n@@ +521,4 @@\nindent pls\n@@ +710,5 @@\ntype* name\n@@ +737,4 @@\nsame\n::: accessible/src/atk/AtkSocketAccessible.h\n@@ +22,3 @@\nspace before :\n::: accessible/src/atk/nsMai.h\n@@ +46,4 @@\ntype* name\n::: accessible/src/atk/nsMaiHyperlink.cpp\n@@ +203,3 @@\ntype* name\n::: accessible/src/atk/nsMaiHyperlink.h\n@@ +20,4 @@\nindent pls\n@@ +29,4 @@\nsamer\n::: accessible/src/atk/nsMaiInterfaceAction.cpp\n@@ +23,2 @@\nindent pls?\n@@ +43,5 @@\nindent?\n@@ +56,5 @@\nsame?\n::: accessible/src/atk/nsMaiInterfaceComponent.cpp\n@@ +56,5 @@\nwrong indent\n::: accessible/src/atk/nsMaiInterfaceEditableText.cpp\n@@ +21,2 @@\nindent pls?\n@@ +41,2 @@\nsame?\n@@ +61,2 @@\nsame? and below in this file\n::: accessible/src/atk/nsMaiInterfaceHypertext.cpp\n@@ +31,1 @@\nindent them? and below in the file\n::: accessible/src/atk/nsMaiInterfaceSelection.cpp\n@@ +20,2 @@\nindent here and below?\n::: accessible/src/atk/nsMaiInterfaceTable.cpp\n@@ +24,2 @@\nindent here and below in the file?\n@@ +34,4 @@\ntype* name\n::: accessible/src/atk/nsMaiInterfaceText.cpp\n@@ +34,2 @@\nindent here and below in the file?\n::: accessible/src/atk/nsMaiInterfaceValue.cpp\n@@ +18,2 @@\nsame in this file\n::: accessible/src/base/AccIterator.h\n@@ +68,4 @@\ntype* name\n::: accessible/src/base/nsAccCache.h\n@@ +33,4 @@\ntype& name\n@@ +61,4 @@\nsame\n::: accessible/src/base/nsAccTreeWalker.h\n@@ +30,4 @@\nnit: remove inline pls\n::: accessible/src/base/nsAccUtils.h\n@@ +136,1 @@\nextra space before method name and wrong indentation of second arg\n@@ +145,1 @@\nwrong indentation\n::: accessible/src/base/nsAccessNode.cpp\n@@ +35,4 @@\nAccessNode\n::: accessible/src/base/nsAccessibilityService.cpp\n@@ +184,4 @@\nspace at the end of line\n@@ +194,4 @@\nsame\n@@ +204,4 @@\nsame\n@@ +214,4 @@\nsame\n@@ +224,4 @@\nspace at the end of line\n@@ +234,4 @@\nspace at the end of line\n@@ +244,4 @@\nspace at the end of line\n@@ +274,4 @@\nspace at the end of line\n@@ +284,4 @@\nspace at the end of line\n@@ +294,4 @@\nsame\n@@ +337,4 @@\nsame\n@@ +373,4 @@\nsame\n@@ +383,4 @@\nsame\n@@ +393,4 @@\nsame\n@@ +413,4 @@\nsame\n@@ +423,4 @@\nsame\n@@ +433,4 @@\nsame\n@@ +443,4 @@\nsame\n@@ +453,4 @@\nsame\n@@ +463,4 @@\nsame\n@@ +701,4 @@\ntype* name\n@@ +1643,1 @@\nwrong indentation\n@@ +1701,1 @@\nwrong indentation\n@@ +1817,1 @@\nwrong indentation\n::: accessible/src/base/nsAccessibilityService.h\n@@ +61,1 @@\nwrong indentation\n@@ +176,1 @@\nsame\n::: accessible/src/base/nsAccessiblePivot.cpp\n@@ +148,1 @@\nwrong indentation\n@@ +345,3 @@\nwrong indentation\n@@ +374,4 @@\n= nsnull pls\n@@ +406,3 @@\nwrong indentation\n@@ +463,1 @@\nwrong indentation\n::: accessible/src/base/nsAccessiblePivot.h\n@@ +23,4 @@\nspace before : pls\nbtw, you rename the class but you don't rename the file\n@@ +35,5 @@\npls add const\n@@ +62,3 @@\nwrong indentation\n@@ +70,3 @@\nsame\n::: accessible/src/base/nsBaseWidgetAccessible.h\n@@ +33,1 @@\nwrong indentation\n::: accessible/src/base/nsCoreUtils.cpp\n@@ +722,4 @@\ntype* name\n@@ +730,4 @@\nsame\n::: accessible/src/base/nsAccessible.cpp\n@@ +107,5 @@\nreturn type on new line pls\n@@ +198,5 @@\ntype* name\n@@ +208,4 @@\nsame\n@@ +221,4 @@\nsame\n@@ +435,5 @@\nsame\n@@ +448,4 @@\nsame\n@@ +463,4 @@\nsame\n@@ +478,4 @@\nsame and below in this file\n@@ +738,5 @@\nremove this comment pls\n@@ +745,1 @@\nwrong indentation\n@@ +850,1 @@\nwrong indentation\n@@ +865,1 @@\nwrong indentation\n@@ +874,4 @@\nreturn type on own line\n@@ +965,1 @@\nwrong indentation\n@@ +1004,4 @@\nret type on own line\n@@ +1031,4 @@\nsame\n@@ +1429,2 @@\nwrong indentation\n@@ +1729,4 @@\nreturn type on own line, name -> aName pls (btw please file gfb bug to remove this method)\n@@ +1750,1 @@\nwrong indentation\n@@ +1751,5 @@\ntype* name\n@@ +2235,4 @@\nret type on own line\n@@ +2255,4 @@\nret type on own line, here and below\n@@ +2456,1 @@\nwrong indentation\n::: accessible/src/base/nsAccessible.h\n@@ +92,4 @@\nwrong indentation\n@@ +247,1 @@\nwrong indentation\n@@ +675,1 @@\nwrong indentation\n@@ +758,4 @@\ntype* name\n::: accessible/src/generic/ApplicationAccessible.h\n@@ +27,4 @@\nnit: space before :\n@@ +81,1 @@\nwrong indentation\n@@ +95,1 @@\nwrong indentation\n::: accessible/src/generic/DocAccessible.h\n@@ +52,4 @@\nremove that, we aren't in conflict now\n@@ +186,4 @@\npls remove inlines here and below\n::: accessible/src/generic/Makefile.in\n@@ +27,5 @@\ntwo spaces indentation as above?\n::: accessible/src/generic/OuterDocAccessible.h\n@@ +43,1 @@\nwrong indentation\n::: accessible/src/html/nsHTMLImageMapAccessible.h\n@@ +72,1 @@\nwrong indentation\n::: accessible/src/html/nsHTMLSelectAccessible.cpp\n@@ +71,4 @@\nwrong indentation\n@@ +77,5 @@\nwrong indentation\n::: accessible/src/html/nsHyperTextAccessible.cpp\n@@ +218,5 @@\ntype* name\n@@ +837,2 @@\nreturn type on own line pls\n@@ +1019,1 @@\nsame and 2 below\n::: accessible/src/html/nsHyperTextAccessible.h\n@@ +84,4 @@\nremove inline? here and next one\n@@ +138,3 @@\nwrong indentation\n@@ +342,5 @@\ntype* name\n::: accessible/src/msaa/nsAccessibleWrap.cpp\n@@ +71,5 @@\nret type on own line pls, here and below in this file\n@@ +286,1 @@\nwrong indentation\n@@ +1016,1 @@\nwrong indentation\n@@ +1050,2 @@\nwrong indentation\n@@ +1132,1 @@\nwrong indentation\n@@ +1151,2 @@\nwrong indentation\n@@ +1269,2 @@\nwrong indentation\n@@ +1282,2 @@\nwrong indentation\n@@ +1439,1 @@\nwrong indentation\n@@ +1451,3 @@\nwrong indentation\n@@ +1608,1 @@\nwrong indentation\n::: accessible/src/msaa/nsAccessibleWrap.h\n@@ +67,4 @@\nwrong indentation\n::: accessible/src/msaa/CAccessibleText.cpp\n@@ +79,1 @@\nwrong indentation\n::: accessible/src/xforms/nsXFormsFormControlsAccessible.cpp\n@@ +119,4 @@\nmaybe put each of them on own line?\n::: accessible/src/xpcom/nsAccessibleRelation.cpp\n@@ +15,1 @@\nwrong indentation\n@@ +34,4 @@\ntype* name pls\n@@ +42,4 @@\nsame\n@@ +52,4 @@\nsame\n::: accessible/src/xpcom/nsAccessibleRelation.h\n@@ +16,4 @@\nspace before : pls\n::: accessible/src/xul/nsXULTreeAccessible.cpp\n@@ +1227,1 @@\nwrong indentation\n::: accessible/src/xul/nsXULTreeAccessible.h\n@@ +43,1 @@\nwrong indentation\n@@ +181,4 @@\ntype* name\n@@ +198,1 @@\nwrong indentation\n@@ +270,1 @@\nwrong indentation\n::: accessible/src/xul/nsXULTreeGridAccessible.h\n@@ +75,1 @@\nwrong indentation\n@@ +78,4 @@\ntype* name\n@@ +108,4 @@\nremove it pls\n@@ +167,1 @@\nwrong indentation\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi JR, (as bug 1627794 seems to be a duplicate of this) is this a common problem with the default settings of (some) servers? Do we know with which? I assume that then many websites can be bitten by this. In this case we probably should understand, to which extent we are breaking the web with this feature and what we can do about it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Seen with a gecko debug build on sgs2 after letting the device sit for a while charging.\nI/Gecko   ( 2204): ###!!! ASSERTION: Battery API: When charging and level at 1.0, remaining time should be 0. Please fix your backend!: 'Error', file /Volumes/mac/moz/b2ggecko/dom/battery/BatteryManager.cpp, line 158\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22490015&tree=Mozilla-Central\nWINNT 6.2 mozilla-central debug test reftest on 2013-05-01 22:09:41\nslave: t-w864-ix-070\n22:20:02     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/9e364e2eda05\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think this slipped through the startup tests because https://searchfox.org/mozilla-central/rev/0ffa9e372df56c95547fed9c3433ddec4fbf6f11/browser/base/content/test/performance/browser_startup_mainthreadio.js#569-580 was already in the whitelist due to bug 1543090 which is now fixed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8640779\n[tools] Download gtk3 for periodic update script\nxpcshell requires gtk3 now, so we download it via tooltool and then set the LD_LIBRARY_PATH.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I have a workaround for my test now, turns out this was actually cause by bug 1047603. Not sure how important this is to fix in Firefox\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8520984\nPatch v1.3\nApproval Request Comment\n[Feature/regressing bug #]: Devedition theme\n[User impact if declined]: This is an obvious visual glitch in Windows with the devedition light theme.  There is a duplicated icon when there should only be one.\n[Describe test coverage new/current, TBPL]: None, CSS only\n[Risks and why]: Low, CSS only affecting the Windows devedition light theme.\n[String/UUID change made/needed]:\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Or: \"Object initialization shouldn't involve a fixed-point computation\" :)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        People will generally tolerate this to a certain degree, but in general if roughly half of the hunks in the patch are style changes, people will call you on it :)\n\"striving for a uniform codebase\" is relatively low on our list of priorities, particularly given the diversity and breadth of Mozilla's code and dev community. So \"make patches that are simple to review\" often trumps \"converge on a single bracing style\".\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/integration/mozilla-inbound/rev/840fd3069d1f\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8547689\nMozReview Request: bz://1116867/mcmanus\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8865038\nDetailed Crash Information\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out for B2G bustage.\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/376496720a0e\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=37777059&tree=Mozilla-Inbound\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ken,\nHigh repro reate in m7.\nhttps://tbpl.mozilla.org/?tree=Try&rev=5399221c4a8c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created web-platform-tests PR https://github.com/web-platform-tests/wpt/pull/38489 for changes under testing/web-platform/tests\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 476464\nPatch v0.1\nFix it all up and it even includes a test (win/linux only).\nI didn't have a windows machine handy, but Sean has run this and says it passes with the fix, and fails without.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/03c112d9c4df\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9261280\nBug 1751919 - Crash in [@ mozilla::dom::SessionHistoryEntry::ReplaceWith]. r?smaug!\n97 was merged to release, moving the request over.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Keon and Peak that still crash are running v1.0.1 that doesn't contain the fix.\nCurrently, B2G top crashers are almost exclusively on Geekphones, the most widespread Fx OS phones.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        124 failures in 2694 pushes (0.046 failures/push) were associated with this bug in the last 7 days.\nThis is the #8 most frequent failure this week.\n** This failure happened more than 75 times this week! Resolving this bug is a very high priority. ** \n** Try to resolve this bug as soon as possible. If unresolved for 1 week, the affected test(s) may be disabled. ** \nRepository breakdown:\n* autoland: 68\n* mozilla-central: 56\nPlatform and build breakdown:\n* windows10-64-2004-mingwclang-qr: 122\n  * debug: 122\n* windows10-32-2004-mingwclang-qr: 1\n  * debug: 1\n* macosx1015-64-qr: 1\n  * debug: 1\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1769748&startday=2022-05-16&endday=2022-05-22&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8821024\ncreate StartDecodingWithResult\nReview of attachment 8821024:\n-----------------------------------------------------------------\n::: image/RasterImage.cpp\n@@ +1061,5 @@\nnit: extra whitespace at end of line\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/4ce960f145fc\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This looks fixed in latest gum build (https://hg.mozilla.org/projects/gum/rev/f426e446b9aa) using Mac OS X 10.9.5.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'll disable it for beta but keep OOP-webgl enabled on Nightly, in the hopes that a user will come forward with a crashing URL to help us diagnose the crash.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The following test crashes on mozilla-central revision e79245e249c4 (options -m -n -a), armv7-a arch only:\ntry {\nthis.watch(\"b\", \"\".substring);\n} catch(exc1) {}\neval(\"\\\nvar URI = '';\\\ntest();\\\nfunction test() {\\\n  URI += '<zcti application=\\\"xxxx_demo\\\">';\\\n  URI += '<pstn_data>';\\\n  URI += '<dnis>877-485-xxxx</dnis>';\\\n  URI += '</pstn_data>';\\\n  URI >>=  '<keyvalue key=\\\"name\\\" value=\\\"xxx\\\"/>';\\\n  URI += '<keyvalue key=\\\"phone\\\" value=\\\"6509309000\\\"/>';\\\n}\\\ntest();\\\n\");\nThe optimized build does not crash, but stepping through the assertion causes a crash (but the assert also differs here). It might be that the testcase requires additional tweaking to reveal the issue on opt. Marking this as S-s due to the crash. If the crash is debug-only, feel free unhide.\nBacktrace of crash:\nProgram received signal SIGABRT, Aborted.\nAssertion failure: (*insn & 0x012fff30) == 0x012fff30\n(../assembler/assembler/ARMAssembler.h:994 static JSC::ARMWord* JSC::ARMAssembler::getLdrImmAddress(JSC::ARMWord*))\nProgram received signal SIGSEGV, Segmentation fault.\n0x00282b98 in JSC::ARMAssembler::getLdrImmAddress (insn=0x4009a188) at ../assembler/assembler/ARMAssembler.h:994\n994                     ASSERT((*insn & 0x012fff30) == 0x012fff30);\n(gdb) bt\n#0  0x00282b98 in JSC::ARMAssembler::getLdrImmAddress (insn=0x4009a188) at ../assembler/assembler/ARMAssembler.h:994\n#1  0x00282c5c in JSC::ARMAssembler::patchPointerInternal (from=1074373000, to=0x2f6045) at ../assembler/assembler/ARMAssembler.h:1020\n#2  0x002f6772 in JSC::ARMAssembler::relinkCall (from=0x4009a188, to=0x2f6045) at ../assembler/assembler/ARMAssembler.h:1139\n#3  0x002f687c in JSC::MacroAssemblerARM::repatchCall (call=..., destination=...) at ../assembler/assembler/MacroAssemblerARM.h:1523\n#4  0x002f6ec8 in JSC::RepatchBuffer::relink (this=0xbe8ad664, call=..., destination=...) at ../assembler/assembler/RepatchBuffer.h:95\n#5  0x002f6f9e in js::mjit::ic::Repatcher::relink (this=0xbe8ad664, call=..., stub=...) at ../methodjit/ICRepatcher.h:90\n#6  0x002f3c78 in PatchSetFallback (f=..., ic=0x456800) at /home/decoder/LangFuzz/mozilla-central/js/src/methodjit/MonoIC.cpp:150\n#7  0x002f46ce in UpdateSetGlobalName (f=..., ic=0x456800, obj=0x40b00040, shape=0x40b0efb0) at /home/decoder/LangFuzz/mozilla-central/js/src/methodjit/MonoIC.cpp:280\n#8  0x002f4886 in js::mjit::ic::SetGlobalName (f=..., ic=0x456800) at /home/decoder/LangFuzz/mozilla-central/js/src/methodjit/MonoIC.cpp:329\n#9  0x00281352 in JaegerStubVeneer () at /home/decoder/LangFuzz/mozilla-central/js/src/methodjit/MethodJIT.cpp:164\n#10 0x4009a194 in ?? ()\nCannot access memory at address 0x0\n#11 0x4009a194 in ?? ()\nCannot access memory at address 0x0\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7307/#review6165\nShip It!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Kats -- Can I ask you to re-test this (since you were the reporter) and report back if it's fixed?  Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8878271\nRemove support for <meta http-equiv=\"msthemecompatible\" content=\"no\">\nReview of attachment 8878271:\n-----------------------------------------------------------------\n::: dom/base/nsContentSink.cpp\n@@ -345,5 @@\nDo we still need nsIPresShell::DisableThemeSupport? Apparently this is the only caller [1] and nsIPresShell is not scriptable.\nWe could also remove nsGkAtoms::msthemecompatible.\n[1] https://dxr.mozilla.org/mozilla-central/search?q=DisableThemeSupport\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://tbpl.mozilla.org/?tree=Try&rev=8842469f0837(In reply to JW Wang [:jwwang] from comment #25)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        philor\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22693987&tree=Cedar\nWINNT 6.2 cedar debug test reftest on 2013-05-07 10:52:13\nslave: t-w864-ix-080\n11:02:59     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 476053\nfix v4\nThis addresses Boris' review comments, but I'm still struggling to get a test working.  If drivers want to land this in the meantime, by all means...\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by eoger@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/e5e754f197cd\nAvoid initializing Sync on window unload if Sync is not configured. r=markh\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes\nI copied these from DOMWifiManager.js, anyway, i think remove them would be better.\nI think we can just return if takeRequest fails.\nDOMWifiManager.js has the same problem.\nGood idea~\nI think it is called when an error occurs when reading the setting, and i am trying to set those vars with default values.\nThere is no such a method like \"hal::UpdateFMRadioSetting\" to change the settings, the only way i can do is power the radio off, and then turn it on by pass the new settings, i don't think it's good.\nCurrently, the chip will stay quiet until we set a frequency.\nThe callback will be called anyway, the function name or callback name might be kind of misleading, i will change it to make it more clear.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 830627\nbuffer-source-stop-rate-1.html\nThese two testcases should play for 1 second, but play for 4 seconds.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7307/#review6147\n::: widget/nsXPLookAndFeel.h:84\n(Diff revision 5)\nThis semicolon is unexpected. Does it compile?\n::: widget/nsXPLookAndFeel.cpp:710\n(Diff revision 5)\nI think this can just be \"return InfallibleTArray<LookAndFeelInt>()\".\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        try: https://tbpl.mozilla.org/?tree=Try&rev=5920576888ae\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8365135\nv1\nMy recent re-experience with this code tells me there is nothing more to do.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think we should just avoid building this test entirely for clang-cl.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes I agree with you. We can get rid of it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8996593\nUpdate test262 exclusions for BigInt.\nDisable BigInt variants of tests disabled due to bug 1317416.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What should happen, even with leaks, is that we run the CC twice at shutdown: once to free everything, then another time to confirm that there's nothing to free.\nThis wasn't actually always true, due to some weirdness that I fixed.\nAnyways, warning for this will help figure out which shutdown CC we should log, in leaks like bug 858948.\nIf I'm feeling a little more brave, I'll make this an assertion.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can reproduce on Windows8.1update1, Windows7 if OMTC on and HWA off.\nGraphics\nAdapter Description\tATI Radeon HD 4300/4500 Series\nAdapter Drivers\taticfx64 aticfx64 aticfx32 aticfx32 atiumd64 atidxx64 atiumdag atidxx32 atiumdva atiumd6a atitmm64\nAdapter RAM\t512\nClearType Parameters\tGamma: 2200 Pixel Structure: R ClearType Level: 50 Enhanced Contrast: 200\nDevice ID\t0x954f\nDirectWrite Enabled\tfalse (6.2.9200.16492)\nDriver Date\t4-29-2013\nDriver Version\t8.970.100.1100\nGPU #2 Active\tfalse\nGPU Accelerated Windows\t0/1 Basic (OMTC)\nVendor ID\t0x1002\nWebGL Renderer\tGoogle Inc. -- ANGLE (ATI Radeon HD 4300/4500 Series Direct3D9Ex vs_3_0 ps_3_0)\nwindowLayerManagerRemote\ttrue\nAzureCanvasBackend\tskia\nAzureContentBackend\tcairo\nAzureFallbackCanvasBackend\tcairo\nAzureSkiaAccelerated\t0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8955730\nBug 1442559 part 3 - Detect whitelist item which doesn't have any condition.\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/224808/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        So to answer comment 11 a little better -- what happens in the testcase here is basically the following:\n (1) We're reflowing the page\n (2) When we reflow the scrollFrame's child-block-frame, that triggers the InvalidateDirectRenderingObservers call from Ccomment 6\n (3) That uses NS_UpdateHint to request an (asynchronous) reflow.\n (4) At the end of our current reflow, we call HandlePostedReflowCallbacks, which runs a callback to update our scroll frame's scrollbars. (noted in comment 3)\n (5) That callback returns true, which makes us call FlushPendingNotifications at the last line of HandlePostedReflowCallbacks.\n (6) This flush makes us synchronously run the reflow that we'd requested in Step 3.\n   (Return to step 1; repeat until stack is exhausted)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think so. Would be interesting to have a random code generator based on the type system itself, and/or to mutate asm.js from emscripten in ways that *do* keep it asm.js, not just break out of it. Both would test things just emscripten output does not.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8983992\nBug 1456911 - Rewrite the fd shuffling to be simpler & handle identity mappings correctly.\nThis replaces some old Chromium code that tries to minimally disentangle\nan arbitrary file descriptor mapping with simpler algorithm, for several\nreasons:\n1. Do something appropriate when a file descriptor is mapped to the same\nfd number in the child; currently they're ignored, which means they'll\nbe closed if they were close-on-exec.  This implementation duplicates\nthe fd twice in that case, which seems to be uncommon in practice; this\nisn't maximally efficient but avoids special-case code.\n2. Make this more generally applicable; the previous design is\nspecialized for arbitrary code running between fork and exec, but we\nalso want to use this on OS X with posix_spawn, which exposes a very\nlimited set of operations.\n3. Avoid the use of C++ standard library iterators in async signal safe\ncode; the Chromium developers mention that this is a potential problem in\nsome debugging implementations that take locks.\n4. In general the algorithm is simpler and should be more \"obviously\ncorrect\"; more concretely, it should get complete coverage just by being\nrun normally in a debug build.\nAs a convenient side benefit, CloseSuperfluousFds now takes an arbitrary\npredicate for which fds to leave open, which means it can be used in\nother code that needs it without creating a fake fd mapping.\nReview commit: https://reviewboard.mozilla.org/r/249866/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/249866/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 439469\nPatch v2.0 (-w)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8955122\nBug 1441779 - Part 1: Change nsTArray<SourceBufferTask> to nsTArray<RefPtr<SourceBufferTask>>\nReview commit: https://reviewboard.mozilla.org/r/224280/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/224280/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8401449\nPatch\nRather than figure out all the ways in which this stuff is not at parity with the existing stuff, let's just use the thing that already works.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8447783\nSet the proper extent on the clip_path in cairo\nSo as far as my investigation has been able to show this bug is indirectly the results of the extents on a clip path being incorrectly set. At cairo-clip.c:276 we set the extents on the clip_path struct, but those extents no longer contain the real extents but rather the intersection of these clips.\nThis patch fixes that, however it does have the downside of extents of the top level clip no longer being the intersection of all the clips on the stack, I think that's okay and will only make a difference in some rare perf cases though.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/991d6d6efcca\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/757abead90e1\nhttps://hg.mozilla.org/mozilla-central/rev/1245c42d81aa\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        +++ This bug was initially created as a clone of Bug #1061186 +++\nhttps://treeherder.mozilla.org/ui/logviewer.html#?job_id=2865229&repo=mozilla-inbound\nbuilder \tUbuntu VM 12.04 mozilla-inbound debug test mochitest-4\nbuildid \t20141008141406\nbuilduid \t6ce99c438e6548ec8646041864ab0c51\nresults \twarnings (1)\nrevision \t50a379edc315\nslave \t\ttst-linux32-spot-507\nstarttime \tWed Oct 08 2014 17:49:45 GMT-0400 (Eastern Standard Time)\n14:53:48 INFO - 115 INFO TEST-START | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html\n14:53:48 INFO - ++DOMWINDOW == 69 (0x98ceed20) [pid = 1835] [serial = 413] [outer = 0x9b38e760]\n14:53:48 INFO - *** WIFI GEO: shutdown called\n14:53:49 INFO - 116 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | get geolocation object\n14:53:49 INFO - 117 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | set done\n14:53:49 INFO - 118 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | turned off geolocation via mozSettings\n14:53:49 INFO - 119 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to false.\n14:53:49 INFO - 120 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | set done\n14:53:49 INFO - 121 INFO TEST-PASS | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | turned on geolocation via mozSettings\n14:53:49 INFO - 122 INFO TEST-UNEXPECTED-FAIL | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n14:53:49 INFO - JavaScript error: resource://gre/components/SettingsManager.js, line 143: TypeError: this._window.MozSettingsTransactionEvent is not a constructor\n14:53:49 INFO - 123 INFO TEST-OK | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | took 1632ms\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This orange boils down to the fact that the input text boxes are not actually focused.  I think the issue will be solved by making sure that the reftest window is in foreground while reftests are running.  I'm still investigating a solution.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can't reproduce; I see no difference between behaviour on 72, 73, 74 and 75 - the spacer adds several cm of horizontal empty space on the left-hand side of the toolbar.\nCan you find a regression window with mozregression ( https://mozilla.github.io/mozregression/ ), and take screenshots before/after to indicate what you're seeing (presumably different from my machine)? Can you reproduce on a clean profile?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8822386\npart 2.  Pass through an nsPresContext to the PerDocumentStyleData constructor\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yeah, I switched to `GetView()->GetWidget()` because `GetWidget()` wasn't correct, `GetView()->GetWidget()` returns the right thing though.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I've asked Mike to help make the decision here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8641210\nPatch v2\nYeah using RunDOMEventWhenSafe also fixes it, thanks for the tip! Try push at https://treeherder.mozilla.org/#/jobs?repo=try&revision=fe342ec1f1f9\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mnovotny@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/7b78962b156b\nThreadSanitizer: data race [@ Release] vs. [@ CloseWithStatusLocked] in CacheFileInputStream r=mayhemer\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by dteller@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/f3b8f72c3d89\nRemoving leftover putc(stderr, ...) from ParseNode;r=nbp\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh yes, sorry, I thought I had mentioned that.  Good news is that it's pretty simple, see RemoveReference and mozilla::Move in attachment 779237.  (You should be able to steal those parts of that patch verbatim, not touching the existing mozilla::Move of course.)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/129f8c60783c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Justin, do you have a plan to review my code?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by emcdonough@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/b2d26d7b7645\nEnable more wpt page-name tests with the proper pref. r=layout-reviewers,hiro\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by archaeopteryx@coole-files.de:\nhttps://hg.mozilla.org/integration/autoland/rev/9e3f6c988710\nCalculate the data size of a JSScript dynamically. r=tcampbell\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hmm, my patches for bug 1160014 reintroduce this bug again. If I land the mochitest before that, I would probably have hard time then. :(\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://tinderbox.mozilla.org/showlog.cgi?log=Firefox/1269516844.1269518375.8836.gz\nOS X 10.5.2 mozilla-central opt test reftest on 2010/03/25 04:34:04\ns: moz2-darwin9-slave18\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I am reading the comments in the browser, so it seems that the \"monospace\" font is not rendered right in my Firefox ... sorry for that\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9112560\nBug 1600320 - Avoid writing into the empty array header. r=#style,jfkthame\nThe only way for this to happen is calling set_len(0) on an already-empty array.\nWe should be replacing these bindings by the `ThinVec` crate, but this is easier\nfor now.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/700bc7185e64\nhttps://hg.mozilla.org/mozilla-central/rev/188f4b17a553\nhttps://hg.mozilla.org/mozilla-central/rev/c6b3ea360251\nhttps://hg.mozilla.org/mozilla-central/rev/6a1c4140f479\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 652883\nfix gcc 4.2 build.\nReview of attachment 652883:\n-----------------------------------------------------------------\nOh, I don't know that that hack is \"really bad\". It's the circumstances that are bad; the workaround is sensible enough.\nr=me.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8822393\npart 8.  Pass a SharedStyleContext, not a Stylist, to Legalizer methods\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Phabricator choked on the size of the json update patch and I had to manually split it into two.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Well, it passed tests on Linux at least:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=6ffdbe718e26c854bd4ad98b2d15e602453359a8\nAs I said earlier, I'm not going to review this until I understand\nwhat goes wrong in the frame tree with our current code.  It would\nhelp if you can try to explain it to me, otherwise I'll have to\ndebug it myself.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://treeherder.mozilla.org/#/jobs?repo=try&revision=053865aaf0f17504a6232e9023956cf6e2e2cf57\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This is orange on try, but I think 962719 will fix the errors.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 471899\nscreenshot\nOddly, if the \"Get Add-ons\" pane is pre-selected when the addon manager loads (previously open the AOM, click \"get addons\", close the tab, reopen the tab), I get this page loading.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This issue is about how we create a FilePicker and I suspect it is platform depending.\nOn linux, the GTK FilePicker (GTKFileChooser) has a default action. It means that, pressing 'enter', the user confirms the selection of the default selected file/directory.\nWe could remove the default action for GTK, windows and mac, or move the focus out of the action button.\nI think we should move this bug to widget components.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        roc:\nDo you have some idea to retrieve each character rect from nsTextFrames quickly? It seems that current approach of eQueryTextRect which retrieves union rect of characters in specified range isn't useful for the new eQueryCharRectArray: http://mxr.mozilla.org/mozilla-central/source/dom/events/ContentEventHandler.cpp?rev=e22b3043887e#1296\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        #192 in 8.0.1, and #45 in 9.0b4. Tracking for FF9/10.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm pretty sure this is fixed by https://github.com/jcjones/webauthn.bin.coffee/commit/c21d5be2a739b2b061d3ce580eb4aeb069fb7765.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        FYI, I accidentally checked in a patch for bug 817431 with 817341 in the summary\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8868445\nBug 948882 - Move inline scripts and styles into separate file for toolkit/crashreporter/content/crashes.xhtml (URL=about:crashes).\nReview commit: https://reviewboard.mozilla.org/r/140048/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/140048/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Justin, i will introduce the two methods, addEventListener and removeEventListener, to the IDL, i should ask for superreview again, right?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks like even after bug 591884, that fixed toolbar importing, we are failing when trying to import default bookmarks.html file.\ninvestigating.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 721448\nPatch v1.1 (r+'d by bgirard)\nI've de-bitrotted this patch, and I ran some profiles with and without the patch.\nI ran this demo: https://developer.mozilla.org/en-US/demos/detail/kai-opua\nAnd rotated the camera around a bit, and then resized the window.\nHere's the profile without the patch:\nhttp://people.mozilla.com/~bgirard/cleopatra/#report=712ceb292adfe496b85233e2b88d1a1773083593\nand here's the profile with the patch:\nhttp://people.mozilla.com/~bgirard/cleopatra/#report=dc05af436747e583332d9dcb5cfa33245ab9e2da\nDoes anything in there strike you as particularly worrying in terms of performance?\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8529252\nEllipsize long unresponsive script locations so they don't make the slow script dialog too big\nReview of attachment 8529252:\n-----------------------------------------------------------------\n::: dom/base/nsGlobalWindow.cpp\n@@ +11187,5 @@\ninclude\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ah sorry I thought you meant you had the Philip Taylor tests locally, rather than an updated test_canvas.html. Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22662358&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-05-06 19:11:55\nslave: t-w864-ix-075\n19:21:57     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/08674a4a6dc1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What I would absolutely love is for some reliable STR for this bug to aid in my analysis. Anybody got some? bkerensa - are you still able to reproduce this reliably?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8520896\nPatch v1.1\nFixed error in commit message\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        FWIW, this bug is sort-of FIXED due to the backout of bug 1360220, but leaving this open for now till that bug is fixed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22426553&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-04-30 13:11:43\nslave: t-w864-ix-077\n13:24:19     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/mozilla-central/rev/97aec61ae55f\nI'll file a bug for the previous comment.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks! I finally feel like I understand this part of the profiler code now. Clear data structures and good names go a long way.\nSure.\nSure: bug 1373436.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9252267\nTestcase\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664395\nPart 4: xpcshell test case for writing Location Info. v4\nfixed typo in comments.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We are not shipping unprefixed fullscreen in 60, so I don't expect it to become useless. There must be some other reason...\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://tbpl.mozilla.org/?tree=Try&rev=bfe897476327\nSummary\nPROCESS-CRASH | Shutdown | application crashed [@ mozilla::gl::GLContext::MakeCurrent(bool)]\nReturn code: 1\nAttributeError: GzipFile instance has no attribute '__exit__'\nReturn code: 1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This would definitely fix this bug... A second question, though, is whether or not we're actually protecting ourselves from anything here. I tend to lean towards \"no\". I can't actually think of an attack where letting foreign code know that something is a native array (or date object, etc) would actually open up a security hole.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What is the graphics card in the machine that can't run WebGL demos?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mpalmgren@mozilla.com:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/47143d875634\nRemove support for <meta http-equiv=\"msthemecompatible\" content=\"no\">.  r=dbaron\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This came out of bug 596592, where entering PB mode with just a popup and then leaving causes the last opened window to reopen.\n_getCurrentState is actually lying about the current state when there is a single window open and it's a popup (and there was a recently closed non-popup). It shifts a closed window into the open window list\nhttp://mxr.mozilla.org/mozilla-central/source/browser/components/sessionstore/src/nsSessionStore.js#1953\nThis is fine for when quitting and we've been doing such for a long time. But I don't think it's the right thing to do when entering/exiting private browsing mode.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9289156\nBug 1769254 - Check for null texture host. r?aosmond\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Logged Bug 1825782 as an enhancement for this.\nAlso closing this bug as VERIFIED since this will not land in Fx 111.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Taking, since my patch for bug 811206 will take care of this.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8968456\nPatch for m-c\nSee the commit message for the detail. This is caused by creating unexpected anonymous subtree in <input> element.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 737234\nPart a: Reindent some code in nsDOMAttributeMap\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 730179 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/8187818246ad\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        edmorley\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=11671797&tree=Firefox\nRev3 WINNT 6.1 mozilla-central opt test mochitests-1/5 on 2012-05-11 03:18:08\nslave: talos-r3-w7-015\n60223 ERROR TEST-UNEXPECTED-FAIL | /tests/content/events/test/test_bug607464.html | Pixel scrolling should have finished after waiting for one 0-interval timer. We shouldn't be scrolling smoothly, even though the pref is set. - got 0, expected 15\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We call the watch point in SetMethod after we have updated the shape and then write that value into the slot. The watch point returns undefined and that value is written. It might be possible to trick the property cache into calling the wrong function with this:\n(gdb) s\nobj_watch_handler (cx=0x1008130e0, obj=0x100d0d068, id={asBits = 4299215808}, old={asBits = 18444773748872577024, debugView = {payload47 = 0, tag = JSVAL_TAG_UNDEFINED}, s = {payload = {i32 = 0, u32 = 0, why = JS_ARRAY_HOLE, word = 18444773748872577024}}, asDouble = -nan(0x9000000000000), asPtr = 0xfff9000000000000}, nvp=0x7fff5fbfed90, closure=0x100d0e058) at ../jsobj.cpp:1310\n1310\t    callable = (JSObject *) closure;\n(gdb) n\n1312\t    callbacks = JS_GetSecurityCallbacks(cx);\n(gdb) n\n1313\t    if (callbacks && callbacks->findObjectPrincipals) {\n(gdb) n\n1332\t    key.obj = obj;\n(gdb) n\n1333\t    key.id = id;\n(gdb) n\n1334\t    if (!js_StartResolving(cx, &key, JSRESFLAG_WATCH, &entry))\n(gdb) n\n1336\t    if (!entry)\n(gdb) n\n1338\t    generation = cx->resolvingTable->generation;\n(gdb) n\n1340\t    argv[0] = IdToValue(id);\n(gdb) n\n1341\t    argv[1] = Valueify(old);\n(gdb) n\n1342\t    argv[2] = Valueify(*nvp);\n(gdb) n\n1343\t    ok = ExternalInvoke(cx, obj, ObjectOrNullValue(callable), 3, argv, Valueify(nvp));\n(gdb) p *nvp\n$63 = {\n  asBits = 18445477440623000960, \n  debugView = {\n    payload47 = 4308647296, \n    tag = JSVAL_TAG_OBJECT\n  }, \n  s = {\n    payload = {\n      i32 = 13680000, \n      u32 = 13680000, \n      why = 13680000, \n      word = 18445477440623000960\n    }\n  }, \n  asDouble = -nan(0xb800100d0bd80), \n  asPtr = 0xfffb800100d0bd80\n}\n(gdb) n\n1344\t    js_StopResolving(cx, &key, JSRESFLAG_WATCH, entry, generation);\n(gdb) p *nvp\n$64 = {\n  asBits = 18444773748872577024, \n  debugView = {\n    payload47 = 0, \n    tag = JSVAL_TAG_UNDEFINED\n  }, \n  s = {\n    payload = {\n      i32 = 0, \n      u32 = 0, \n      why = JS_ARRAY_HOLE, \n      word = 18444773748872577024\n    }\n  }, \n  asDouble = -nan(0x9000000000000), \n  asPtr = 0xfff9000000000000\n}\n(gdb) \n(gdb) l\n5662\t                getter = CastAsPropertyOp(funobj);\n5663\t            }\n5664\t        }\n5665\t\n5666\t        shape = obj->putProperty(cx, id, getter, setter, SHAPE_INVALID_SLOT,\n5667\t                                 attrs, flags, shortid);\n5668\t        if (!shape)\n5669\t            return JS_FALSE;\n5670\t\n5671\t        if (defineHow & JSDNP_CACHE_RESULT)\n(gdb) n\n5668\t        if (!shape)\n(gdb) n\n5671\t        if (defineHow & JSDNP_CACHE_RESULT)\n(gdb) n\n5672\t            TRACE_1(AddProperty, obj);\n(gdb) l\n5667\t                                 attrs, flags, shortid);\n5668\t        if (!shape)\n5669\t            return JS_FALSE;\n5670\t\n5671\t        if (defineHow & JSDNP_CACHE_RESULT)\n5672\t            TRACE_1(AddProperty, obj);\n5673\t\n5674\t        /*\n5675\t         * Initialize the new property value (passed to setter) to undefined.\n5676\t         * Note that we store before calling addProperty, to match the order\n(gdb) n\n5679\t        if (obj->containsSlot(shape->slot))\n(gdb) n\n5680\t            obj->nativeSetSlot(shape->slot, UndefinedValue());\n(gdb) n\n5683\t        if (!CallAddPropertyHook(cx, clasp, obj, shape, vp)) {\n(gdb) p *vp\n$54 = {\n  data = {\n    asBits = 18445477440623000960, \n    debugView = {\n      payload47 = 4308647296, \n      tag = JSVAL_TAG_OBJECT\n    }, \n    s = {\n      payload = {\n        i32 = 13680000, \n        u32 = 13680000, \n        why = 13680000, \n        word = 18445477440623000960\n      }\n    }, \n    asDouble = -nan(0xb800100d0bd80), \n    asPtr = 0xfffb800100d0bd80\n  }\n}\n(gdb) call js_DumpValue(*vp)\n<unnamed function (x.js:6) at 0x100d0bd80 (JSFunction at 0x100d0bd80)>\n(gdb) s\nCallAddPropertyHook (cx=0x1008130e0, clasp=0x100438ea0, obj=0x100d0d068, shape=0x10111a5c8, vp=0x7fff5fbfed90) at ../jsobj.cpp:4576\n4576\t    if (clasp->addProperty != PropertyStub) {\n(gdb) n\n4586\t    return true;\n(gdb) fin\nRun till exit from #0  CallAddPropertyHook (cx=0x1008130e0, clasp=0x100438ea0, obj=0x100d0d068, shape=0x10111a5c8, vp=0x7fff5fbfed90) at ../jsobj.cpp:4586\n0x0000000100106c62 in js_SetPropertyHelper (cx=0x1008130e0, obj=0x100d0d068, id={asBits = 4299215808}, defineHow=5, vp=0x7fff5fbfed90, strict=0) at ../jsobj.cpp:5683\n5683\t        if (!CallAddPropertyHook(cx, clasp, obj, shape, vp)) {\nValue returned is $55 = true\n(gdb) n\n5687\t        added = true;\n(gdb) p *vp\n$56 = {\n  data = {\n    asBits = 18445477440623000960, \n    debugView = {\n      payload47 = 4308647296, \n      tag = JSVAL_TAG_OBJECT\n    }, \n    s = {\n      payload = {\n        i32 = 13680000, \n        u32 = 13680000, \n        why = 13680000, \n        word = 18445477440623000960\n      }\n    }, \n    asDouble = -nan(0xb800100d0bd80), \n    asPtr = 0xfffb800100d0bd80\n  }\n}\n(gdb) n\n5690\t    if (defineHow & JSDNP_CACHE_RESULT)\n(gdb) n\n5691\t        JS_PROPERTY_CACHE(cx).fill(cx, obj, 0, 0, obj, shape, added);\n(gdb) n\n5693\t    return js_NativeSet(cx, obj, shape, added, vp);\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backout by csabou@mozilla.com:\nhttps://hg.mozilla.org/mozilla-central/rev/fe6020e5c9d9\nBacked out 12 changesets (bug 1479309, bug 1479312, bug 1479313, bug 1479310, bug 1479235, bug 1479945, bug 1479241, bug 1479318) for causing a big performance regression on OS X. a=backout\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        [Tracking Requested - why for this release]:\nKelsey, this crash is a regression from canvas color space bug 1703654.\nSince accelerated Canvas2D bug 1773712 just enabled the `gfx.canvas.accelerated` pref, I bisected my crash STR again with that pref force-enabled and landed on this earlier pushlog for canvas color space bug 1703654:\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=88a64ff079e144ce530a7f3121244604c29ddf92&tochange=f2d46bb91c9ddd9e6b43c315be70917b334d52a0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8893194\nBug 1385699. P3 - remove MediaDecoder::SetInfinite() and related code.\nSince inf can be encoded in MDSM::mDuration, we don't need an additional flag\nin MediaDecoder to indicate 'infinite' anymore. Note duration change from infinite\nto finite is handled by MDSM, so we can remove the explicit calls to SetInfinite(false).\nReview commit: https://reviewboard.mozilla.org/r/164226/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/164226/\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I concur\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Never mind. After revising the bug to fix what is actually broken, it makes sense to do this now.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8424383\nbug_final.patch\nAdded !\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        3 failures in 4773 pushes (0.001 failures/push) were associated with this bug in the last 7 days.\nRepository breakdown:\n* try: 3\nPlatform breakdown:\n* linux1804-64-asan: 1\n* windows10-64-qr: 1\n* linux1804-64-qr: 1\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures.html#/bugdetails?bug=1622369&startday=2020-03-23&endday=2020-03-29&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Even something as simple as:\ntemplate<typename Pred>\nvoid\nSpinEventLoopUntil(Pred aPredicate, nsIThread* aThread = nullptr)\n{\n  nsIThread* thread = aThread ? aThread : NS_GetCurrentThread();\n  while (!aPredicate()) {\n    MOZ_ALWAYS_TRUE(NS_ProcessNextEvent(thread, true));\n  }\n}\nwould be a little bit nicer than what we have, and would be slightly more efficient for a lot of the cases that we have.  For Quantum DOM, this change would also enable us to add the thread-yielding smarts we need in one place, rather than having it scattered all over.\nWith any luck, we can *almost* eliminate NS_ProcessNextEvent except from a few well-known places.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bringing in :jcj since he's dealing with the WebAuthn spec, which has changed a lot since I did my work there.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        in general just setting checkin-needed again should be enough and I or a different Sheriff will take this bug and do the checkin - but i guess in this specific case we might want to wait for the answer from nical to comment #49 right?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by mgaudet@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/4d8f095bf2c1\nAdd test for Uncatchable Size Callback Exceptions, and Handle Size Callback Uncatchable Exceptions. r=saschanaz\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I filed bug 731983 about part 4, so the present bug is now focused on building llvmpipe and adding the preference to use it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        submit_timestamp: 2014-11-04T11:04:20\nlog: https://treeherder.mozilla.org/ui/logviewer.html#?repo=try&job_id=2926210\nrepository: try\nwho: dholbert[at]mozilla[dot]com\nmachine: tst-linux64-spot-229\nbuildname: Ubuntu VM 12.04 x64 try debug test mochitest-4\nrevision: e255299d3cba\n122 INFO TEST-UNEXPECTED-FAIL | /tests/dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Once bug 937057 is fixed, this will be easier to test.  Patches here are helpful in fixing bug 937057.  It may be easiest to add stop calls to the test for bug 938450.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        When investigating bug 1427984, I found that most browsers (Chrome, Firefox, Safari) fire keyup at the switched tab when the key sequence changes the current tab. I don't think this is a problem. For this use case, maybe we could handle the autoplay permission when keydown like other functionalities (e.g. ALT+N to switch tabs, ALT+F4, CTRL+SHIFT+K to open inspector). Or we could ask UX for some suggestions.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        If that's the reason, we should make this a separate API.  It's not a lot more\nwork to make a separate API than it is to include it on the FM radio API.\nIf FM radio were accessible only to privileged content, then maybe I'd be OK\nwith a hack like this, but if we're exposing this to the world, then we should\nnot create bogus APIs because it's slightly easier.\nBut isn't this the proposed API?  I'm asking, why is the proposed API for\nsignal strength a float and not a double?\nAM radio should not be part of the \"FM radio\" api.  If we really want to be\nable to support AM in the future -- and I think that's unlikely to happen,\nbecause AM antennas are quite large -- then we should rename this API to\n\"TunableRadio\" or something.  But I think designing for an unlikely eventuality\nis likely a mistake.\nIf we want to support multiple bands then we should design bandRanges to let\nyou see multiple FM and multiple AM bands.  At the moment, you can only see one\nFM and one AM band.  But if we're designing for future extensibility to AM, we\nshould also design for future extensibility to multiple FM bands, because the\nlatter is far more reasonable than the former.\nBut more to the point: We need some way for the app to know which is the\ncurrently-selected band; apps shouldn't assume that there's only one band in\nbandRanges, because that defeats the purpose.\nSo regardless of whether we're allowing multiple bands now or in the future, we\nstill need to have\n  double upperFreq;\n  double lowerFreq\n  double channelFreqInterval;\nor otherwise\n  jsval currentBand;  /* {upper, lower, interval} */\nso that you know what the current band is set to.  IMO, if we're not allowing\nswitching between bands, we should not expose bandRanges, because it's not\nuseful.\nWhy doesn't the FM radio app need the interval?  Are you expecting that the app\nwill have a hardcoded interval?  Or that it will always use seek()?  What if an\napp wants to allow the user to manually tune the radio?\nOkay, can you please document that we can never have multiple seeks going at\nonce, so cancelSeek cancels the one outstanding seek or otherwise fails?\n\t> when i rebased my working branch with latest m-c at one day last month, it\n\t> failed to compile, then i added the \"builtinclass\"\n\t> just like other idls did.\nWhat's the compile error?  I'm not totally sure what builtinclass is for\neither, but khuey gave me the impression that it did not affect compilation.\nWhich other IDLs are you talking about?  I'm not sure what you mean by \"such as\nwiki\".\nnsIDOMEventTarget is the interface which adds add/removeEventListener.  If you\ndon't inherit from nsIDOMEventTarget, you can't do\n  fmManager.addEventListener('antennachange', function() { ... });\nWhat's confusing is, we have two FM interfaces which do almost but not quite\nthe same thing.  But I think I understand what's going on, and we can figure\nthis part out when I look at the other patches.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8493489\nThing that fixes the bug\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8356789\n1/4 - Add a GetCumulativeResolution function\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Testcases have been landed by virtue of being marked in-testsuite+ -> VERIFIED as well.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Benjamin & Mark, do you use an external display?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/774d6d582f40\nIn the future, please make sure your commit message has the bug number and a brief description of what the patch is doing (preferably not just the bug title). Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8968770\nThe patch for m-c (r=m_kato)\n[Security approval request comment]\nHow easily could an exploit be constructed based on the patch?\nIt's easy since the patch includes the testcase to reproduce this crash.\nDo comments in the patch, the check-in comment, or tests included in the patch paint a bulls-eye on the security problem?\nI don't think so. This looks like just a crash bug fix if there is no link to this closed bug report.\nWhich older supported branches are affected by this flaw?\nNot sure but ESR 52 doesn't support <detail> and the testcase won't work as expected.\nIf not all supported branches, which bug introduced the flaw?\nNot sure. Possible to change native anonymous subtree in <input>/<textarea> with execCommand() must be long standing bug. However, the crash itself must be newer bug since a lot of safer code have been replaced with faster code with Quantum Flow.\nDo you have backports for the affected branches? If not, how different, hard to create, and risky will they be?\nI created same patch for Beta branch too.\nHow likely is this patch to cause regressions; how much testing does it need?\nThis patch just avoids to insert unexpected DOM nodes into <input>/<textarea>'s anonymous subtree.  And such behavior has never been expected.  Therefore, this patch must be safe.  And also this patch includes the testcase of comment 0.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8865877\nBug 1363344 - Update linux64-qr test jobs on central and integration branches.\nBased on an estimated 23h of additional test load per push, about 3200 pushes on inbound/autoland per month = 73,600h. We pay about $0.02/hr, so that's about an extra $1500 per month, which is fine.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9252371\nBug 1742770 - Properly validate URI for null principals. r?nika\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created web-platform-tests PR https://github.com/web-platform-tests/wpt/pull/33463 for changes under testing/web-platform/tests\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm also changing some usages of position/posn/pos in the tweaked code to \"coord\" instead. (so e.g. \"PhysicalPosFromLogicalPos\" is now known as \"PhysicalCoordFromFlexRelativeCoord\").\nI'm making this change since \"position\" is ambiguous about whether it's 1- or 2-dimensional value. \"Coord\" is a bit less ambiguous.\n(Elsewhere in this file, I still have e.g. FlexItem::GetMainPosition/GetCrossPosition, but I think that's less ambiguous.)\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Can we get a build peer to look at the build changes again?  (You got r- last time.)  I'm not comfortable reviewing that stuff.  (You'll probably get a faster review from khuey if you split the relevant changes out into a separate patch.)\nBecause I asked you to rename these files, interdiff is now pretty useless comparing v3 --> v4.  :(  I'll fix it up manually and post it here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/releases/mozilla-aurora/rev/b00ce8e9bee0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8643113\nPart 11 - Fix consumers: Web Speech. r=\nThis looks good to me, but I'd like to ask eeejay to please double check since he's more familiar with Synthesis\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Re-landed on top of bug 860371:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c950d2ea4c5b\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Just a few more left.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8729028\nFix for engines from language packs, v2 (with test)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Jason's right, the ancient watchpoint design, which predates user-defined setters, tries to modularize watchpoints by putting their overhead behind a setter wrapper. This hasn't aged particularly well. His preferred approach would add a few\n    if (JS_UNLIKELY(obj->watched())) { // obj->flags & WATCHED\n        . . .\n    }\nclauses. Sounds worth filing and doing after fx4.\n/be\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        **Filed by:** apavel [at] mozilla.com\n**Parsed log:** https://treeherder.mozilla.org/logviewer?job_id=358990343&repo=mozilla-central\n**Full log:** https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Etg6SaGMQk2vBY4JPUh7uA/runs/0/artifacts/public/logs/live_backing.log\n---\n```\n[task 2021-11-23T17:57:03.485Z] 17:57:03     INFO - TEST-START | /paint-timing/replaced-content-image.html\n[task 2021-11-23T17:57:03.581Z] 17:57:03     INFO - .\n[task 2021-11-23T17:57:03.581Z] 17:57:03     INFO - Closing window 81d42f9f-70ea-47f1-8b29-62481093c3c9\n[task 2021-11-23T17:57:04.159Z] 17:57:04     INFO - \n[task 2021-11-23T17:57:04.159Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"false\"],[\"justifycenter\",\"\"]] \"<div align=justify><p>[foo<p>bar}</div><p>extra\" queryCommandValue(\"justifycenter\") before \n[task 2021-11-23T17:57:04.159Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"false\"],[\"justifycenter\",\"\"]] \"<div align=justify><p>[foo<p>bar}</div><p>extra\" queryCommandIndeterm(\"justifycenter\") after \n[task 2021-11-23T17:57:04.160Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"false\"],[\"justifycenter\",\"\"]] \"<div align=justify><p>[foo<p>bar}</div><p>extra\" queryCommandState(\"justifycenter\") after \n[task 2021-11-23T17:57:04.161Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"false\"],[\"justifycenter\",\"\"]] \"<div align=justify><p>[foo<p>bar}</div><p>extra\" queryCommandValue(\"justifycenter\") after \n[task 2021-11-23T17:57:04.161Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\": execCommand(\"stylewithcss\", false, \"true\") return value \n[task 2021-11-23T17:57:04.163Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\": execCommand(\"defaultparagraphseparator\", false, \"div\") return value \n[task 2021-11-23T17:57:04.163Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\": execCommand(\"justifycenter\", false, \"\") return value \n[task 2021-11-23T17:57:04.164Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\" checks for modifications to non-editable content \n[task 2021-11-23T17:57:04.166Z] 17:57:04     INFO - TEST-FAIL | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\" compare innerHTML - assert_equals: Unexpected innerHTML (after normalizing inline style) expected \"<div style=\\\"text-align:justify\\\"><div style=\\\"text-align:center\\\"><p>foo</p></div><p>bar</p></div><p>extra</p>\" but got \"<div style=\\\"text-align:justify\\\"><p style=\\\"text-align:center\\\">foo</p><p>bar</p></div><p>extra</p>\"\n[task 2021-11-23T17:57:04.166Z] 17:57:04     INFO - runConformanceTest/<@http://web-platform.test:8000/editing/include/tests.js:5679:24\n[task 2021-11-23T17:57:04.167Z] 17:57:04     INFO - Test.prototype.step@http://web-platform.test:8000/resources/testharness.js:2087:25\n[task 2021-11-23T17:57:04.167Z] 17:57:04     INFO - test@http://web-platform.test:8000/resources/testharness.js:557:30\n[task 2021-11-23T17:57:04.169Z] 17:57:04     INFO - subsetTest@http://web-platform.test:8000/common/subset-tests.js:54:14\n[task 2021-11-23T17:57:04.170Z] 17:57:04     INFO - runConformanceTest@http://web-platform.test:8000/editing/include/tests.js:5667:15\n[task 2021-11-23T17:57:04.170Z] 17:57:04     INFO - @http://web-platform.test:8000/editing/run/justifycenter.html?2001-3000:49:18\n[task 2021-11-23T17:57:04.170Z] 17:57:04     INFO - @http://web-platform.test:8000/editing/run/justifycenter.html?2001-3000:59:3\n[task 2021-11-23T17:57:04.170Z] 17:57:04     INFO - TEST-PASS | /editing/run/justifycenter.html?2001-3000 | [[\"stylewithcss\",\"true\"],[\"defaultparagraphseparator\",\"div\"],[\"justifycenter\",\"\"]] \"<div style=text-align:justify><p>[foo]<p>bar</div><p>extra\" queryCommandIndeterm(\"stylewithcss\") before \n[task 2021-11-23T17:57:04.171Z] 17:57:04     INFO - TEST-UNEXPECTED-PASS | /paint-timing/replaced-content-image.html | Replaced content image triggers First Contentful Paint. - expected TIMEOUT\n[task 2021-11-23T17:57:04.171Z] 17:57:04     INFO - TEST-INFO | expected TIMEOUT\n[task 2021-11-23T17:57:04.172Z] 17:57:04     INFO - TEST-UNEXPECTED-OK | /paint-timing/replaced-content-image.html | expected TIMEOUT\n[task 2021-11-23T17:57:04.172Z] 17:57:04     INFO - TEST-INFO expected TIMEOUT | took 743ms\n[task 2021-11-23T17:57:04.290Z] 17:57:04     INFO - ........................................................\n[task 2021-11-23T17:57:04.291Z] 17:57:04     INFO - TEST-OK | /editing/run/justifycenter.html?2001-3000 | took 6327ms\n```\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The bug in I420VideoFrame::CreateFrame also affectsI420VideoFrame::CopyFrame, I420VideoFrame::CloneFrame, and their callers.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hmm.  If you're just exposing chrome stuff, then the proposed thing with QI may work, yes, since you're not actually implementing what the rest of the world thinks of as an EventTarget....  It's OK for a short-term hack, though obviously long-term we'll want to do something more like what I described.\nBy the way, the existing source files there (nsIFm.idl, dom/fm) have the same problem as having an interface called FM, in my opinion.  nsIFmAntenna and nsIFmAdaptor are perhaps fine (though \"adaptor\" doesn't really say anything useful to me).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8635272\nPatch\nReview of attachment 8635272:\n-----------------------------------------------------------------\nNice!  How often are we still taking a slow path because of an undersized template object?  It would be nifty to be able to size the result object's array based on the number of matches needed, for better memory utilization and robustness.\n::: js/src/jit/CodeGenerator.cpp\n@@ +1008,5 @@\nPreexisting, but it would be nice if this constant was in a header file that could be referenced by createMatchResultTemplateObject when sizing the template array.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8356790\n2/4 - Change the displayport storage units\nkats tell me this is for 1.2 only. So just add a comment about thus and r+.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9317332\nFirefox View Data Collection Request - additional Sidebar Telemetry probe\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8823361\nInterdiff for part 3 to \"fix\" the crashtest asserts.\nThe real fix will be bug 1328319\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I am surprised, because everything that lands on beta should be backported to b2g32. Ryan , any thoughts here?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/9c62ab1bfb8a\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        On trunk (Firefox) the text on a certain website flows out of the usual box and takes up the whole page width instead. In the latest Firefox this was still fine. I'm going to look for the regression range of this (must be a very recent regression).\nTo reproduce:\n1. Go to http://www.nordbayerischer-kurier.de/\n2. Observe how the text below the animated pictures/slideshow flows out of the box where the text should be in\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This one crashes with -j in a release build:\n--\nvar o = Array;\no.watch('p', function() { }); \nfor(var x in o) {};\ndelete o.p;\no.p = function() {};\nfor(var i=0; i<20; i++) {\n    print(o.p);\n}\n--\nStack trace:\nProgram received signal EXC_BAD_ACCESS, Could not access memory.\nReason: KERN_PROTECTION_FAILURE at address: 0x0000001c\n0x00194fea in js::MethodReadBarrier ()\n(gdb) bt\n#0  0x00194fea in js::MethodReadBarrier ()\n#1  0x00382f08 in ?? ()\n#2  0x001b326c in js::ExecuteTree ()\nPrevious frame inner to this frame (gdb could not unwind past this frame)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Do we still need qawanted on this? Looks like the crash isn't reproducible at this point.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/4e111da82652\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9229412\nPeek 2021-06-30 13-34.gif\n**Affected versions:**\n- Nightly 91.0a1\n**Affected platforms:**\n- Ubuntu 20.04.2 LTS\n**Unaffected platforms:**\n- Windows 10x64\n- macOs 10.15\n**Steps to reproduce:**\n1. Launch Firefox.\n2. Go to Customize toolbar (Hamburger menu  → More tools → Customize toolbar).\n3. On the lower part of the page click on the  Themes button and select Dark theme from the list.\n**Expected result:**\nAll customization footer buttons are clearly visible.\n**Actual result:**\nCustomization footer buttons  are not visible until you hover over them.\n**Regression range:**\nThis is a regression: \n- pushlog: https://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=152fdda295bb5f6658d65c2bc48bc6aae499b526&tochange=b873d938120e2cfac6ba3332c663b503dc45d17e\n- possible regressor: Bug 1717077\n**Additional notes**\nScreen cast attached to observe the issue.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/290f4be587a1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 434998\nWIP\nSo, this patch does two things.  First, it uses the onfocus event handler on input elements to make sure to run the test only when they're focused.  It also modifies the reftest platform to make sure that the window is raised and focused before running each test.\nThis same code is used for browser chrome tests, but it doesn't work in the reftest framework.  I couldn't figure out why, asking for Neil's feedback who knows a lot more about our focus code than me.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm going to make an assumption here that this is caused by https://github.com/mozilla/activity-stream/commit/c132f298c64b3e357d8a492e77299fcf2c3c25fa bug 1448918 and it should be expected.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I am not able to reproduce any issues (comment 0 or comment 3) with the linux 64 nightly debug build (2015-01-05).  I tested in e10s mode on the same sites mentioned.\nIt is likely a related fix landed as part of bug 1115976, but this landed on 2015-01-03, which confuses me, since comment 3 is from 2015-01-05.\nAndrew, do you still see this even in the latest debug nightly?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This issue does not occur on Leo v 1.1.0 COM RIL\nEnvironmental Variables\nDevice: Leo v 1.1.0 COM RIL\nBuild ID: 20131024041202\nGecko: http://hg.mozilla.org/releases/mozilla-b2g18/rev/e4cb5a852e3d\nGaia: 39b0203fa9809052c8c4d4332fef03bbaf0426fc\nPlatform Version: 18.1\nRIL Version: 01.01.00.019.264 \nThe browser crash does not occur when zooming in on the page.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        + * This interface contains methods that are needed outside of the content/layout\n+ * modules, specifically widget.  It should eventually go away when we support\n+ * libxul builds, and nsHTMLCanvasElement be used directly.\n+ *\n+ * Code internal to content/layout should /never/ use this interface; if the\n+ * same functionality is needed in both places, two separate methods should be\n+ * used.\nI think the correct thing to do would be to move Aero Peek out of widget. We could put the interfaces in xpcom/system and the implementation in toolkit/system.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 608478\nPatch v1\nReview of attachment 608478:\n-----------------------------------------------------------------\nr=me, but I think you should also modify http://mxr.mozilla.org/comm-central/source/mozilla/content/html/content/test/test_bug408231.html.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8876111\nBug 1357049 - add one button in the Private Browsing and Search tour of onBoarding overlay to demonstrate the corresponding features.\nhttps://reviewboard.mozilla.org/r/147540/#review151940\nThis looks good, please just double check the button wording before landing.\n::: browser/extensions/onboarding/locales/en-US/onboarding.properties:14\n(Diff revision 1)\nThis prototype suggests the button should be \"Show Me Where To Find Private Browsing\". Is there a more up to date spec?\nhttps://dl.dropboxusercontent.com/u/105549/tour2.framer/index.html\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Eh, I think it's okay. Expanding the productions under NonEmptyClassRanges, you get the following regular patterns, with CA short for ClassAtom, CAND short for ClassAtomNoDash, and ... indicating a permitted top-level recursion:\nCA\nCA CA\nCA CAND* CA\nCA CAND - CA ...\nCA - CA ...\nCA CAND - CA ...\nThe semantic errors for the |CAND - CA| and |CA - CA| forms are the same, so we should be able to figure out all the appropriate places for a dash with mode bits, as we do now. I'll just fix the error and shut up now. :-)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 1507855 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 509082\nTest case: OL lists with start, value, and reversed attributes\nFirefox 4 implements:\n- <ol start=integer> (with positive and negative integers),\n- <li value=integer> (likewise).\nDoesn't implement:\n- <ol reversed>\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        sizeof(nsTArray<nsRect>) is always 8 bytes on 64bit platform and array data is allocated on heap.  Even if using pointer instead, allocated AutoTArray will be on heap.  So as memory fragmentation, it is same result. \nCan SetEventResult and WidgetQueryContentEvent use c++11 move?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hi Masayuki, can you please nominate the patch for beta60 uplift? Thanks!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/ca39b88accf3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ran mozgression and found this push\nhttps://hg.mozilla.org/integration/autoland/pushloghtml?fromchange=9759c11fa52fe6ae5ddb74767fadb7f93a3464a7&tochange=330c5c6b4f5bd2ba3818e6859d1757023a5ac29a\nBug 1798548\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Why? I think NS_DispatchToMainThread should be preferred in the content process as well. Why is it better to use AbstractThread::MainThread?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The CDM headers have a definition of encryption scheme[0] we can use rather than re-implementing our own type[1]. Historically we've used our own types, but in this case we're just adding an extra conversion step.\nIf we ever need more flexibility we can add back in our own type, but for now this allows us to cut some code.\n[0] https://searchfox.org/mozilla-central/rev/3b6958c26049c1e27b2790a43154caaba9f6dd4a/dom/media/gmp/widevine-adapter/content_decryption_module.h#101\n[1] https://searchfox.org/mozilla-central/rev/3b6958c26049c1e27b2790a43154caaba9f6dd4a/dom/media/gmp/gmp-api/gmp-video-codec.h#222\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ok, so the logical fix seems to be to pair [this call to `pushPrefEnv()`](https://searchfox.org/mozilla-central/rev/6a41d8d7ad42d57cf1adcc7067fd8f1689c42ab3/dom/base/test/test_meta_viewport_fixed_width_and_zero_display_width.html#19) (which changes `layout.css.devPixelsPerPx`) with a corresponding call to `popPrefEnv()` at the end of the test.\nHowever, this does not seem to have the desired effect. While the device pixel ratio is changed back to 60, and we get e.g. a call to [`AppUnitsPerDevPixelChanged()`](https://searchfox.org/mozilla-central/rev/6a41d8d7ad42d57cf1adcc7067fd8f1689c42ab3/layout/base/nsPresContext.cpp#427) for it, the visible area of the root content document's pres shell remains stuck at a size corresponding to the old ratio, and while the root content doc does get reflowed, it's reflowed into this stale size.\nI'm not sure what is supposed to trigger the updating of the pres shell's visible area and a reflow to the correct size after the device pixel ratio changes. cc'ing Emilio in case he has some ideas.\nPerhaps changing `layout.css.devPixelsPerPx`, which is an action that affects the mochitest harness document itself, is not a well-behaved thing for a mochitest to be doing in the first place?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Good catch philor!\nhttps://hg.mozilla.org/releases/mozilla-esr10/rev/771afd1e6247\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8981676\nBug 1465254 - Fix copy error in periodic updates task\nReview commit: https://reviewboard.mozilla.org/r/247816/diff/#index_header\nSee other reviews: https://reviewboard.mozilla.org/r/247816/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 896149 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Try is green: https://treeherder.mozilla.org/#/jobs?repo=try&revision=b7bb9b8fe50b\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9124cbf3e75f\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 626341\nfix test\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        1 failures in 3810 pushes (0.0 failures/push) were associated with this bug in the last 7 days.\nRepository breakdown:\n* try: 1\nPlatform breakdown:\n* macosx1014-64-devedition-qr: 1\nFor more details, see:\nhttps://treeherder.mozilla.org/intermittent-failures/bugdetails?bug=1686238&startday=2021-01-11&endday=2021-01-17&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/52557de563d7\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Is this still a major concern for Firefox 10 (web/add-on compatibility)? If so, please nominate for aurora/beta approval ASAP. We're cutting our second to last beta today.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Our fuzzers are still seeing this issue.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/releases/mozilla-release/rev/ea0c9f5c9b90\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We should perform further Exploratory Testing around this scenario.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8629165\nsafeguard patch\nAnd in fact, this feels like a valid case, so I don't see need for \nNS_NOTREACHED. Just return. With that, r+\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9240691\nBug 1717682 - Pref and implementation for compact 4 card row layout for Pocket newtab.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        @Brian: I think we also need tests to check the cases when onevent attributes are dynamically added/removed/modified.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/2561f2a8512c\nhttps://hg.mozilla.org/mozilla-central/rev/52bde8206312\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8821024\ncreate StartDecodingWithResult\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes, fixed.  Doesn't affect anything, of course.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by prathikshaprasadsuman@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/43711f4646a7\nAdd basic support to display offline support pages when SUMO is unreachable. r=prathiksha,desktop-theme-reviewers,harry\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Tyson says it's hit frequently, and that this number is what it usually is, not random uninitialized memory.\nOn the assumption a bad value just results in bad drawing and not writing out of bounds anywhere, calling it sec-low.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Developer release notes\nhttps://developer.mozilla.org/en-US/Firefox/Releases/58#JavaScript\nReference page\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat/formatToParts\nCompat data \nhttps://github.com/mdn/browser-compat-data/pull/612 (still WIP at this point)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 627367\nPatch for bug v3\nThis version of the patch removes the ability to click on the identity block to revert the URL bar values.\nIf we land this patch, then I'll update bug 406779 to state that we have dropped this ability.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/066e0b4423c9\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm not entirely convinced this is the right decision.\nArray.isArray was added to the spec because it addresses a real problem authors face: that instanceof is insufficient for testing the kind (\"class\") of an object.  We've supported and advocated its use for a year and a half now, particularly for the very case at issue here and in duplicate bugs.\nI don't think I can call this a \"minor functional regression\".  That description is arguably accurate for this bug's symptoms outside of Array.isArray.  But Array.isArray not working in this way means that API is fundamentally broken.  Its *entire purpose* is to answer that question correctly; this mistake isn't an edge case.  If it's not answering the question correctly in a fairly basic scenario, that's not a minor functional regression.  It means the API is unreliable, untrustworthy, and potentially even unusable.\nI think we should reconsider this decision.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7307/#review6261\nlooks good.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out changeset 209780edbdf9 (Bug 1565273) for browser-chrome failures at browser/components/urlbar/tests/browser/browser_urlbar_selection.js\nPush with failure: https://treeherder.mozilla.org/#/jobs?repo=mozilla-beta&resultStatus=testfailed%2Cbusted%2Cexception&classifiedState=unclassified&revision=209780edbdf9b660eb86fc50dea6041b3a4f977f\nFailure log: https://treeherder.mozilla.org/logviewer.html#/jobs?job_id=259797469&repo=mozilla-beta&lineNumber=4003\nBackout link: https://treeherder.mozilla.org/#/jobs?repo=mozilla-beta&selectedJob=259797469&resultStatus=testfailed%2Cbusted%2Cexception&classifiedState=unclassified&revision=1270a56d8bb7f6df12008e24b0e56d3b7cf9a160\n```\n[task 2019-08-03T20:50:47.777Z] 20:50:47     INFO - TEST-PASS | browser/components/urlbar/tests/browser/browser_urlbar_selection.js | The entire URL should be selected. - 21 == 21 - \n[task 2019-08-03T20:50:47.777Z] 20:50:47     INFO - Buffered messages finished\n[task 2019-08-03T20:50:47.778Z] 20:50:47     INFO - TEST-UNEXPECTED-FAIL | browser/components/urlbar/tests/browser/browser_urlbar_selection.js | Uncaught exception - at chrome://mochitests/content/browser/browser/components/urlbar/tests/browser/browser_urlbar_selection.js:150 - TypeError: gURLBar.querySelector is not a function\n[task 2019-08-03T20:50:47.778Z] 20:50:47     INFO - Stack trace:\n[task 2019-08-03T20:50:47.778Z] 20:50:47     INFO - rightClickSelectsAll@chrome://mochitests/content/browser/browser/components/urlbar/tests/browser/browser_urlbar_selection.js:150:29\n[task 2019-08-03T20:50:47.782Z] 20:50:47     INFO - Leaving test bound rightClickSelectsAll\n[task 2019-08-03T20:50:47.782Z] 20:50:47     INFO - Entering test bound contextMenuDoesNotCancelSelection\n[task 2019-08-03T20:50:47.783Z] 20:50:47     INFO - TEST-PASS | browser/components/urlbar/tests/browser/browser_urlbar_selection.js | The selection should not have changed. - 3 == 3 - \n[task 2019-08-03T20:50:47.783Z] 20:50:47     INFO - TEST-PASS | browser/components/urlbar/tests/browser/browser_urlbar_selection.js | The selection should not have changed. - 7 == 7 - \n[task 2019-08-03T20:50:47.784Z] 20:50:47     INFO - Not taking screenshot here: see the one that was previously logged\n[task 2019-08-03T20:50:47.784Z] 20:50:47     INFO - TEST-UNEXPECTED-FAIL | browser/components/urlbar/tests/browser/browser_urlbar_selection.js | Uncaught exception - at chrome://mochitests/content/browser/browser/components/urlbar/tests/browser/browser_urlbar_selection.js:210 - TypeError: gURLBar.querySelector is not a function\n[task 2019-08-03T20:50:47.784Z] 20:50:47     INFO - Stack trace:\n[task 2019-08-03T20:50:47.785Z] 20:50:47     INFO - contextMenuDoesNotCancelSelection@chrome://mochitests/content/browser/browser/components/urlbar/tests/browser/browser_urlbar_selection.js:210:11\n[task 2019-08-03T20:50:47.789Z] 20:50:47     INFO - Leaving test bound contextMenuDoesNotCancelSelection\n[task 2019-08-03T20:50:47.793Z] 20:50:47     INFO - Entering test bound dragSelect\n```\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by bvandyk@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/9cec7707e84d\nReplace GMPEncryptionType with cdm::EncryptionScheme. r=alwu,dminor\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        In Bug 1506175, we introduced the ability to fetch recipes from Remote Settings. \nThe pref \"app.normandy.remotesettings.enabled\" is false by default.\nWe could gradually enable this feature once the server parts are in place.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Isn't the try/catch the whole point of this test?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 664330\nWIP - Part 4: xpcshell test case for writing Location Info. v2\nRenamed accordingly.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Looks good on try. Will post for review this afternoon.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8516403\ntabstoolbar-overflowing-tabs.patch\nYou can use !important here. The selector should be as simple as '#TabsToolbar', as I understand it. Or am I missing some case where -moz-appearance:none isn't wanted?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I think given the options it would be better to prevent the b2g OOM.  So I would vote for landing the patchset in v1.2.  Jason, does this sound ok to you?\nI believe bug 957668 is the follow-up to address the memory issues in v1.3.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I was specifically referring to lines 38-44 of your first patch (which thus would now be fixed). \nBut in a more general sense, yes I was wondering why that choice in the first place: it looks pretty hurried and tentative, and perhaps the same mindset might have led to some other unexpected effect too. \nSee also bug 1130266, comment 19\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8551614\n1118597.patch v2.1\nReview of attachment 8551614:\n-----------------------------------------------------------------\nActually, on second look\nWhere are \nMoofParser::ParseMinf\nMoofParser::ParseStbl\nMoofParset::ParseStsd\nMoofParser::ParseSinf\n?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 565090\nOnly set unread when busy is removed\nThis feels like a bug with low user impact that can wait until 10 ships. If there's some large number of users having a really bad experience can you please explain that and re-nominate.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 506096\nStacktrace\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://reviewboard.mozilla.org/r/7307/#review6163\n::: dom/ipc/ContentChild.cpp:18\n(Diff revision 6)\nOn this particular patch, which you flagged me on, r+.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 9216037\nBug 1705327 - Remove infobar notification from pdf viewer\nLooks low risk, has tests and baked a few days on nightly, approved for 89 beta 5, thanks.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/af889781505c\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Matt, you disabled hardware decoding on XP and Vista in bug 1154536. mirh wonders whether we should be blocklisting the relevant drivers instead of Windows versions.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The problem here is that MediaDecoderReader::Shutdown() returns a promise, but TrackBuffer::RemoveDecoder assumes that it happens synchronously. I'll take this.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/238c2caac25d\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Nightly is now working with the following demo sites that weren't working before:\n* https://gauntface.github.io/simple-push-demo/\n* https://serviceworke.rs/push-simple_demo.html\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This particular problem, I think, shows an actual problem in the focus code.  Neil said that he's willing to debug this.\nTo debug this, run the reftests like this:\n/path/to/firefox -reftest layout/reftests/forms/placeholder/reftest.list\nso that the Firefox window is initially in the background.  Running tests that way makes them fail 100% of the time for me.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        *** Bug 595494 has been marked as a duplicate of this bug. ***\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Also:\nB2G macosx64_gecko mozilla-central nightly\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=14463451&tree=Firefox\n{\n/builds/slave/m-cen-osx64-gecko-ntly/build/js/src/jstypedarray.cpp: In static member function 'static JSBool TypedArrayTemplate<NativeType>::Getter(JSContext*, unsigned int, JS::Value*)':\n/builds/slave/m-cen-osx64-gecko-ntly/build/js/src/jstypedarray.cpp:1427: error: template parameter 'ValueGetter' of type 'JS::Value (*)(JSObject*)' is not allowed in an integral constant expression because it is not of integral or enumeration type\n}\nAre B2G builds supposed to be using gcc?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8516340\ntab-controls.png\nSee screenshot\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        it looks intermittent from treeherder and there's bug 1614678 filed about it... did you respin and assigned to my bug because the previous changeset had no failures at all?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by aethanyc@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/d8b05de1fa30\nMove logic for copying aliased properties' fields to the bottom of property_database.js. r=emilio\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8496640\npart 1 - Temporarily expose some gfxContext fill/stroke API to help with porting to Moz2D\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        My guess would be that the addition of the RTP logging in 55 changed the timing slightly so that an old lingering problem starts to result in crashes.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by tihuang@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/6380a8b421a1\nUse nsICookieManager.getCookiesSince() to get cookies in PurgeTrackerService.jsm. r=ewright\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        http://hg.mozilla.org/mozilla-central/rev/84c0f1877335\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I managed to verify this issue on Firefox 57.0a1 (2017-09-19) (64-bit), under Windows 10x64.\nClick-to-Play staged rollout is set to 1.4 by default and Shockwave Flash is set to 'Ask to Activate' by default. \nI'm not marking this issue Verified Fix until I can confirm the fix also on Firefox 56.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I was talking with some folks today about how we have too many notification bars happening on first/second/third run (know your rights, telemetry, obsolete plugins, FHR). When we wrote the Know Your Rights notification box, we didn't have about:home and its dynamic snippet area, but now we do. I suggest that we remove the notification bar for that and instead make it the snippet displayed on first run, before we go and fetch the dynamic snippets we display on future page loads.\nI think the code here should be simple, but I'd like to from marketing and legal about whether there are any gotchas here. Gavin notes that we'll need to be a little careful about how we implement it, since the current default snippet isn't guaranteed to be shown, but presumably we'd want that, here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8822397\npart 10.  Pass through useful default styles to apply_declarations()\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9027951\nBug 1509994 - Regenerate moz.build files; r=pehrsons!\nDepends on D13095\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 485837\nFix character class range with builtin character class on any side.\nThat's because I didn't put it in a character class. Duh. (One of those days.)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I realize it'd have trouble for non-main thread content messages.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        FWIW, I don't think this issue needs to be hidden, because we always hit a `MOZ_CRASH`.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/a396e7027858\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        When the transport is closed or encounters an error, this code is run on the STS thread:\nhttps://searchfox.org/mozilla-central/rev/00ea1649b59d5f427979e2d6ba42be96f62d6e82/dom/media/webrtc/libwebrtcglue/AudioConduit.h#45\nEvents that are in-flight for this event source are dropped. This occasionally can cause an RTCP BYE to disappear (due to a DTLS CloseNotify arriving immediately after the BYE), and is causing intermittent failures in the webrtc/RTCPeerConnection-remote-track-mute.https.html wpt. We should probably be dispatching the DisconnectIfExists calls to the call thread, so it does not race against the packet events.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        This asserts in interpreter/-m/-j:\n--\nvar o = Array;\no.p = function() {};\no.watch('p', function() { }); \nfor(var x in o) { \n    o[x]; \n}\ndelete o.p;\no.p = function() {};\nprint(o.p);\n--\nAssertion failure: isObject(), at ../jsvalue.h:602\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        To be honest, I don't really understand the locking scheme in use here and exactly what is protected by which lock and where the critical sections are. I defer to :tromey and :vporof for that information, as they were much more involved in authoring the timeline consumers infrastructure than I was.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8475554\nSimple test case\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I can't build this far back, but certainly in today's builds, this does not run the test with layers.acceleration.disabled actually set, as the pref() line in crashtests.list sets it too late to get picked up.  And if it was getting picked up, it would mean that the value of that preference changes mid execution, which is at best scary and certainly not supported.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/3c95ca16eb66\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        That change was made in bug 473822.\n:annevk would know which is the right thing to do here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8921363\nBug 1410565 - check mTimescale to avoid dividing by zero.\nhttps://reviewboard.mozilla.org/r/192396/#review197802\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/204d0d6a487f\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9046029\nallowing untraceable variant types\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8629169\nmochitest patch\nSo I don't know how we could then land this.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 9083353\nbug_1565273_beta_updated.diff\nHere's the updated beta diff. The old one was backed out since I used `gURLBar.querySelector` to fetch the contextmenu, but this behaviour was recently changed. The attached diff uses `document.getAnonymousElementByAttribute` which works in beta. Here's a green beta try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=cfd9849d1ac79fe07a7ea799d5684c34f0c4aa26&selectedJob=260118746 (there's an opt build failure on Linux -- looks like it's an intermittent? I don't see the specific change in this patch causing a build failure).\nBecause of the previous backouts, Mak could you please take one last look at this patch before I request beta uplift?\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oops, that aspect was fixed in bug 1797347.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 605593\npatch v1.1\nImporting a separate bookmarks.html file in the test ended up covering this issue, so I removed it.\nThe resource address automatically resolves to the right destination, depending on whether omni.ja exists.\nWill likely make a try to help testing.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8535550\n0002-Bug-1073339-Convert-from-CRLF-to-LF-for-autocomplete.patch, v3\nUpdated due to test changes.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        I'm working on enabling ESLint for dom/presentation. As part of this, I found some undefined variables in PresentationDataChannelSessionTransport.js, along the lines of:\nthrow NS_ERROR_NOT_AVAILABLE;\nThis is meant to be:\nthrow Cr.NS_ERROR_NOT_AVAILABLE;\nI'm not sure if there's any actual bugs caused by this, a brief look makes me think it would just be broken developer debug information.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8356791\n3/4 - Shrink the displayport multiplier at high zooms\nReview of attachment 8356791:\n-----------------------------------------------------------------\n::: gfx/layers/ipc/AsyncPanZoomController.cpp\n@@ +898,5 @@\nIs this patch meant for trunk too? On trunk it's not necessarily the case that the root frame's GetParentResolution() returns 1.0, at least it won't be after bug 951936 and bug 935219 land, because then the resolution will be on the non-scrollable root layer which will be the parent of the rootmost scrollable layer.\nPerhaps we can condition on IsRootForLayersId() instead (or mIsRoot, although see bug 957221)?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/6dd62bffb5c1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8617697\nPart 0 - Explicitly instantiate WebReader in MediaSourceReader. v1\nThis will allow us to pass the borrowed task queue. It's also more explicit\nabout the fact that we only support mp4 and (sort of) webm.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Going to try and land this today.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yeah, I couldn't reproduce after 20 retries, but I could reproduce it 2 times out of 10 using 319MB.\nIf one would want to reproduce manually, I would recommend trying with 256MB.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Removing the ni? as we signed off on the feature as GREEN.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        6 automation job failures were associated with this bug in the last 7 days.\nRepository breakdown:\n* mozilla-inbound: 4\n* mozilla-central: 1\n* fx-team: 1\nPlatform breakdown:\n* linux64: 3\n* linux32: 3\nFor more details, see:\nhttps://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1253516&startday=2016-02-29&endday=2016-03-06&tree=all\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        To avoid this kind of issue happens again, we probably should really add a catch all whitelist item and ensure that it never touched.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It is muted because the playback rate is beyond the valid range.\nhttp://hg.mozilla.org/mozilla-central/file/149d3ce6e020/content/html/content/src/HTMLMediaElement.cpp#l3841\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8968771\nPatch for Beta\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Hm, I take that back -- a targeted build at that push is unaffected.\nNow I'm suspecting this cset:\n http://hg.mozilla.org/mozilla-central/rev/1bf9a4c8c8b4\n Bug 572689 - Make nsSVGRenderingObservers observe elements instead of frames\nI think something like this is going on: we reflow our scrollframe, and that invalidates the filter (which the scrollframe is a part of), and that triggers a reflow of the frames to which the filter is applied (including the scrollframe). This continues in a death-spiral.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Ah, that caused the confusion -> Reoving Bug 1324406 from the blocklist!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8822386\npart 2.  Pass through an nsPresContext to the PerDocumentStyleData constructor\nReview of attachment 8822386:\n-----------------------------------------------------------------\n::: layout/style/ServoStyleSet.cpp\n@@ +28,5 @@\nI assume this is never null, since we later pass it unchecked to appendstylesheet.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8765412\nBug 1263083 - Use single-tile layer when less than half the tile size in either dimension;\nI'd uplift this to aurora no questions asked, possibly beta but we are late in the cycle?\nApproval Request Comment\n[Feature/regressing bug #]: bug 1221094\n[User impact if declined]: Larger memory allocation, resulting in some websites (like google inbox) being unusably slow.\n[Describe test coverage new/current, TreeHerder]: Been on central for almost a week.\n[Risks and why]: Lowish. The change is straightforward. Could have a potential negative effect on websites with extremely long thin layers, but these will be rare and probably don't work great anyway.\n[String/UUID change made/needed]: N/A\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8356796\nRollup parts 1-4\nPlease let me know if you still see the OOM with this. I didn't see it on my master build for Gaia; I will try to borrow a hamachi and test there as well.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        We're already past early beta, so I'm perfectly fine with letting this ride with 66 if the patch is riskier than you're comfortable with.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Backed out in order to back out bug 703143:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/c52a726dc939\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Sorry, that pattern is actually valid! The restrictions on ClassAtomNoDash's SourceCharacter (but not one of '\\' or ']' or '-') are still suspect, just have to come up with a pattern that triggers it.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Currently, it is only possible to whitelist complete domains and prevent them from redirecting to search using `browser.fixup.domainwhitelist.yourdomain.yoursuffix`.\nIt should also be possible to also whitelist whole suffixes/TLDs. This is useful in case of local development using reserved TLDs (bug 1634592) because users don't need to manually whitelist every domain. It is also useful with non-IANA-managed TLDs like OpenNIC or extensions that add support for domains of some other project (like `.eth` or `.bit`).\nAlthough reserved TLDs and OpenNIC domains use a custom DNS server, so Firefox can use that to offer users to automatically whitelist a certain domain, this can't be said for extension-based domains. For such domains, the only way of accessing them is to manually whitelist every domain in `about:config` or manually type `http://` before the domain.\nIt should also be possible to also whitelist whole suffixes/TLDs. With this, users could just add, for example, `.local`, `.libre` or `.eth` as a whitelisted suffix and all search queries with that suffix will be interpreted as website/domain request.\nAdditionally, API for whitelisting suffixes/TLDs could be exposed to extensions. This would be useful in cases where extensions are used for handling custom domains (like MetaMask for `.eth`, PeerName or Blockchain DNS for `.bit`, `.emc` and few others...). Without such API, users would have to install such extension and them manually whitelist suffix/TLD that extension uses. With such API, users would just need to install the extension, and extension would automatically register TLDs that it handles as whitelisted domain TLDs.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The way to reproduce this is to remove a ; after an interface definition in any file in dom/webidl and rebuild.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        submit_timestamp: 2015-01-09T13:52:59\nlog: https://treeherder.mozilla.org/logviewer.html#?repo=b2g-inbound&job_id=1133224\nrepository: b2g-inbound\nwho: rvandermeulen[at]mozilla[dot]com\nmachine: t-snow-r4-0077\nbuildname: Rev4 MacOSX Snow Leopard 10.6 b2g-inbound opt test mochitest-4\nrevision: a5d5e741f8a3\n46 INFO TEST-UNEXPECTED-FAIL | dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        OK, thanks!\nAgreed that that's desirable, and the end result of (1) will still adhere to that. (We'll shift from VARIANT_AUTO|VARIANT_NONE to VARIANT_HK, with eCSSKeyword_None & eCSSKeyword_Auto being the two keywords in the keyword table.)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8825260\nBug 1329110. Part 2 - add HandleAudioCanceled().\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/103432/diff/1-2/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Forgot the ftl\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Oh, some comments on the patch:\nWebGL specifies a different mechanism for opaqueness (one that we'll want to transition our 2d stuff to as well); we just don't implement it yet.  So currently webgl canvases can't be opaque, hence why this is always PR_FALSE for now.\nWhoops, yes; I implemented gfxUtils::PremultiplyImageSurface based on the fast premult/unpremult code we had in Canvas 2D.  I couldn't convert that code to it since it actually premults/unpremults between an image surface and a raw buffer.  It could be fixed with a bit of wrapping of the raw data in an image surface, but I didn't do that here.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        git bisect found this to be fixed by http://gcc.gnu.org/bugzilla/show_bug.cgi?id=39608. Which is strange, since is marked as a regression fix. Looking a bit more to see if there is a way to avoid the bug.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/c7633e5266c0\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/integration/mozilla-inbound/rev/3f307f37b77a\nThanks for all the reviews lately.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Bug 1395322 is filed for the real fix.\nHere's an example of the failures:\nhttps://treeherder.mozilla.org/#/jobs?repo=try&revision=4c2998f33d9a493d9e5350a63da832d61333f24b&filter-searchStr=M(c3\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        document->GetShell() may return null, and so may presShell->GetPresContext();\nNot sure about the coding style for */LookAndFeel.h, but\n2 spaces for indentation and aFoo naming for arguments?\nwidget/WidgetMessageUtils.h\nnew code should follow Mozilla coding style. So, 2 spaces for indentation.\nInfallibleTArray<LookAndFeelInt> GetIntCacheImpl();\nhuh, I _hate_ implicit ctor+Move(). So very much hides that we aren't doing copying. Oh well, if other people\ncan live with that insanity, I can survive too (but it does make reviewing slower since one need to look at the ctor implementation).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8876111\nBug 1357049 - add one button in the Private Browsing and Search tour of onBoarding overlay to demonstrate the corresponding features.\nReview request updated; see interdiff: https://reviewboard.mozilla.org/r/147540/diff/2-3/\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://treeherder.mozilla.org/#/jobs?repo=try&revision=5cf727e00f44a4933d9fd8f4fb17511eccfbc1c6\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Turns out we need bug 1746750 as well for it to work properly. The lack of text isn't an issue, no console errors from my attempts at using it in meetings.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/6c6fecd53382\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by bvandyk@mozilla.com:\nhttps://hg.mozilla.org/integration/autoland/rev/9ba10704b7e3\nReplace GMPEncryptionType with cdm::EncryptionScheme. r=alwu,dminor\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 642184\nImplement <ol reversed>.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/27c02b405be0\nhttps://hg.mozilla.org/mozilla-central/rev/2e2cdd1826e1\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/mozilla-central/rev/c8840a3a2c3b\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 792880\nPatch, v2 (now with C++11 move)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        RyanVM\nhttps://tbpl.mozilla.org/php/getParsedLog.php?id=22333021&tree=Mozilla-Inbound\nWINNT 6.2 mozilla-inbound debug test reftest on 2013-04-27 17:31:07\nslave: t-w864-ix-092\n17:44:20     INFO -  REFTEST TEST-UNEXPECTED-FAIL | file:///C:/slave/test/build/tests/reftest/tests/layout/reftests/bugs/289480.html#top | assertion count 1 is more than expected 0 assertions\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://hg.mozilla.org/releases/mozilla-aurora/rev/1fc29c60fb1f\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Emilio should we uplift? Thanks\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        OK, I don't really know what's the rule for links I just learned today that they can be not tab-navigable :-)\nI opened https://github.com/mathml-refresh/mathml/issues/152 and will mark this as failing on mac for now\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The bug is marked as tracked for firefox107 (beta). However, the bug still isn't assigned.\n:bhood, could you please find an assignee for this tracked bug? If you disagree with the tracking decision, please talk with the release managers.\nFor more information, please visit [auto_nag documentation](https://wiki.mozilla.org/Release_Management/autonag#tracked_attention.py).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Any chance you can get a narrower regression window with mozregression ? You can use the --profile switch to run it against your usual profile.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Thanks for rolling this up. I'll try to reproduce and develop a fix.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 8909869\nBug 1401249 - Fix getStringPref usage in clicktoplay-rollout.\nhttps://reviewboard.mozilla.org/r/181366/#review186590\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8385604\nwindow-close v2\nDoes this look right?\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by m_kato@ga2.so-net.ne.jp:\nhttps://hg.mozilla.org/integration/autoland/rev/129f8c60783c\nTurn on NEON on aarch64 when using gcc or clang. r=aosmond\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 537475\nv2\nUse wizard.advance() instead of manipulating wizard.pageIndex and move this piece of code from onWizardAdvance to onPageShow to avoid infinite recursion.\nAlso don't call Service.login(). It made closing the wizard kind of slow and jerky and it's so not needed anymore.\nAsking for review again for those two changes.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed with comments addressed:\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/8cef7a6e9f79\nhttps://hg.mozilla.org/integration/mozilla-inbound/rev/9517fe15e2c2\n(Comment 3 has a green Try run.)\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        It seems like we'd only have to iterate over all XBL binding style sheets in the document... and that the binding manager itself could coalesce all the document state bits into one for all of them.\nWe'd probably need a different WalkRuleProcessors mechanism to do this, though.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        log: https://treeherder.mozilla.org/logviewer.html#?repo=mozilla-inbound&job_id=9285953\nrepository: mozilla-inbound\nstart_time: 2015-04-24T13:14:12\nwho: wkocher[at]mozilla[dot]com\nmachine: tst-linux64-spot-915\nbuildname: Ubuntu VM 12.04 x64 mozilla-inbound debug test mochitest-4\nrevision: 6d0fb655e2e6\n136 INFO TEST-UNEXPECTED-FAIL | dom/tests/mochitest/geolocation/test_mozsettingsWatch.html | Geolocation didn't work after setting geolocation.enabled to true. - expected PASS\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        MSVC11 supports C++11 final keyword.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yeah, I usually write the intro first and I should write it last instead, because at first, I don't know much about what's possible.\nTaking your sentence as is. Thanks.\nOops. Added. Thanks.\n \nYes, I tend to use \"synchronous\" where I should talk about \"blocking\" and I really should stop doing that.\nWow, that's super important! I removed the warning on the particular frequency attribute, but a general warning should be provided. I'll think about how to do that in a generic manner on the doc.\nTaking this discussion to dev-webapi to not further pollute the bug.\nI've added a note to the setFrequency method.\nfixed.\nThanks for your review, Justin.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        One other issue i notices is that clicking and holding in the scrollbar outside the handle are should move the handle to that area and it should be clue as long as selected.  It is also light gray in that scenario, but that is probably the same sase as the other issue selected and moved.  I am also removing the regression keyword because I think have a regression keyword on a regression that cannot be seen without adding a wip patch is kind of lame.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        (And dare I ask why you don't need to back out the *other* patch?)\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The patch landed in nightly and beta is affected.\n:bradwerth, is this bug important enough to require an uplift?\n- If yes, please nominate the patch for beta approval.\n- If no, please set `status-firefox112` to `wontfix`.\nFor more information, please visit [auto_nag documentation](https://wiki.mozilla.org/Release_Management/autonag#uplift_beta.py).\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        The environment running this job obviously doesn't have gtk3 installed.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        OK, I'll force merge this once it reaches central.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Yes, our 'refresh driver' is not actually what it says it is, and it gives us jittery 60Hz timings, regardless of display refresh rate. If we enable vsync on non-60Hz displays, the effects could be especially nasty.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Pushed by ryanvm@gmail.com:\nhttps://hg.mozilla.org/integration/autoland/rev/61d1367ef2f1\nremove com.apple.cookied access from content processes; r=haik\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        coming up: JSON data exchange and unit test.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8516217\npatch\nThis adds the observer during finalUIStartup (shortly before first window open), which is late enough that it isn't triggered while reading user prefs in my testing. This seems like a prefs API foot gun in general, and this is just dodging it.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        With llvmpipe, some of the demos are either totally \"off-color\" or mostly black. I guessed that should be expected. Examples of such are: http://www.chromeexperiments.com/detail/waterstretch/?f=webgl and http://blackberry.github.com/WebGL-Samples/tunneltilt/. Also i failed to mention that attempting to build llvmpipe with LLVM 3.0 doesn't work - still trying to figure that out as it ought to be possible.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8644419\nbug_1191113_csp_gcli_localization.patch\nFolded patches together into one. Carrying over r+ from jwalker.\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "1 for Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Created attachment 8819360\nEnsure that speculative connect and DNS prefetching aren't disabled when annotating tracking channels\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        https://developer.mozilla.org/en-US/docs/Web/API/Path2D.Path2D\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Try push with unifiedcomplete=false:\nhttps://tbpl.mozilla.org/?tree=Try&rev=3ee73b9c370d\nTry push with unifiedcomplete=true:\nhttps://tbpl.mozilla.org/?tree=Try&rev=2d7106bda22e\n        \"\"\"\n    ",
        "output": "1 for Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Marty, can you take a look at this--see if it is in fact exploitable? It looks to me like it may not be, but it seems like a codegen bug at least.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Comment on attachment 594741\nv1\nReview of attachment 594741:\n-----------------------------------------------------------------\nThe extra changes I suggest probably orphan a few variables -- make sure to check for unused warnings before committing a patch with changes.\n::: js/src/jsobj.cpp\n@@ +639,5 @@\nif (comma && !buf.append(comma, 2))\n    goto overflow;\nOr, since I think you said comma's either NULL or \", \", make comma a bool, then buf.append(\", \") -- much clearer.\n@@ +650,5 @@\nif (!buf.append(gsop[j]) || !buf.append(' '))\n    goto overflow;\nGoodbye raw char* references!\n@@ +655,4 @@\nif (!buf.append(idstr))\n    goto overflow;\n@@ +673,5 @@\nfinishString would have reported an error if it failed, so this extra report is unnecessary (bad, even, see below).\n@@ +685,4 @@\nIf we can make all goto-overflows be the result of append failures, then Vector::append (whichever overload) would have reported an error, so this is unnecessary (bad, even, since we have assertions that errors aren't multiply-reported).\nAnd at that point error/overflow are identical, so they can be unified.\nAnd at that point, we can just make the js_LeaveSharpObject happen through a one-off RAII object.  I don't think it matters if we leave before finishing the string and setting it in the success case.\nAnd at that point, all the error-y gotos become return false!\nAnd at that point we declare victory!\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        cool. so 731318 exposes a latent bug.\nwe need to choose between backing that out of 37, or backporting the fix of the long time bug (which is going to have to include a breaking idl change) onto aurora.\nwhat do you think?\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        Landed: http://hg.mozilla.org/mozilla-central/rev/3dac4e710157\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    },
    {
        "instruction": "Task: You will classify a comment from a Mozilla Firefox issue report discussion thread into one of four categories: Code Implementation, or Non-Code Implementation.\n        Classification Criteria:\n        Code Implementation: The comment describes or discusses the details of a solution that has been implemented, including code or specific fixes.\n        Non-Code Implementation: The comment does not fit Code Implementation.\n        Instructions:\n        You will classify the provided comment using the above criteria and respond with one of the following categories:\n        1 for Code Implementation\n        0 for Non-Code Implementation\n    ",
        "input": "Issue report comment to classify (delimited by triple quotes):\n        \"\"\"\n        What a mess.\n        \"\"\"\n    ",
        "output": "0 for Non-Code Implementation",
        "predict": "0 for Non-Code Implementation"
    }
]